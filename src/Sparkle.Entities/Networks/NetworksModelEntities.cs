//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;


////[assembly: EdmSchemaAttribute()] // This has caused issues in the past.

namespace Sparkle.Entities.Networks
{
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Achievement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Achievement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Achievement object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="themeId">Initial value of the ThemeId property.</param>
        /// <param name="familyId">Initial value of the FamilyId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        /// <param name="target">Initial value of the Target property.</param>
        /// <param name="points">Initial value of the Points property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        public static Achievement CreateAchievement(int id, int themeId, int familyId, string title, string description, byte level, int target, int points, string key)
        {
            Achievement achievement = new Achievement();
            achievement.Id = id;
            achievement.ThemeId = themeId;
            achievement.FamilyId = familyId;
            achievement.Title = title;
            achievement.Description = description;
            achievement.Level = level;
            achievement.Target = target;
            achievement.Points = points;
            achievement.Key = key;
            return achievement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ThemeId
        {
            get
            {
                return _ThemeId;
            }
            set
            {
                OnThemeIdChanging(value);
                ReportPropertyChanging("ThemeId");
                _ThemeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThemeId");
                OnThemeIdChanged();
            }
        }
        private int _ThemeId;
        partial void OnThemeIdChanging(int value);
        partial void OnThemeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int FamilyId
        {
            get
            {
                return _FamilyId;
            }
            set
            {
                OnFamilyIdChanging(value);
                ReportPropertyChanging("FamilyId");
                _FamilyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FamilyId");
                OnFamilyIdChanged();
            }
        }
        private int _FamilyId;
        partial void OnFamilyIdChanging(int value);
        partial void OnFamilyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private byte _Level;
        partial void OnLevelChanging(byte value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private int _Target;
        partial void OnTargetChanging(int value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private int _Points;
        partial void OnPointsChanging(int value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private string _Key;
        partial void OnKeyChanging(string value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private Nullable<int> _NetworkId;
        partial void OnNetworkIdChanging(Nullable<int> value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_AchievementsCompanies_Achievement", "AchievementsCompany")]
        public EntityCollection<AchievementsCompany> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AchievementsCompany>("NetworksModel.FK_AchievementsCompanies_Achievement", "AchievementsCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AchievementsCompany>("NetworksModel.FK_AchievementsCompanies_Achievement", "AchievementsCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_AchievementsUsers_Achievement", "AchievementsUser")]
        public EntityCollection<AchievementsUser> AchievementsUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AchievementsUser>("NetworksModel.FK_AchievementsUsers_Achievement", "AchievementsUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AchievementsUser>("NetworksModel.FK_AchievementsUsers_Achievement", "AchievementsUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Achievements_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Achievements_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Achievements_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Achievements_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Achievements_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ThemeId,
            FamilyId,
            Title,
            Description,
            Level,
            Target,
            Points,
            Key,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="AchievementsCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class AchievementsCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AchievementsCompany object.
        /// </summary>
        /// <param name="achievementId">Initial value of the AchievementId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="dateEarned">Initial value of the DateEarned property.</param>
        public static AchievementsCompany CreateAchievementsCompany(int achievementId, int companyId, System.DateTime dateEarned)
        {
            AchievementsCompany achievementsCompany = new AchievementsCompany();
            achievementsCompany.AchievementId = achievementId;
            achievementsCompany.CompanyId = companyId;
            achievementsCompany.DateEarned = dateEarned;
            return achievementsCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int AchievementId
        {
            get
            {
                return _AchievementId;
            }
            set
            {
                if (_AchievementId != value)
                {
                    OnAchievementIdChanging(value);
                    ReportPropertyChanging("AchievementId");
                    _AchievementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AchievementId");
                    OnAchievementIdChanged();
                }
            }
        }
        private int _AchievementId;
        partial void OnAchievementIdChanging(int value);
        partial void OnAchievementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateEarned
        {
            get
            {
                return _DateEarned;
            }
            set
            {
                OnDateEarnedChanging(value);
                ReportPropertyChanging("DateEarned");
                _DateEarned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEarned");
                OnDateEarnedChanged();
            }
        }
        private System.DateTime _DateEarned;
        partial void OnDateEarnedChanging(System.DateTime value);
        partial void OnDateEarnedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_AchievementsCompanies_Achievement", "Achievement")]
        public Achievement Achievement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("NetworksModel.FK_AchievementsCompanies_Achievement", "Achievement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("NetworksModel.FK_AchievementsCompanies_Achievement", "Achievement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Achievement> AchievementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("NetworksModel.FK_AchievementsCompanies_Achievement", "Achievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Achievement>("NetworksModel.FK_AchievementsCompanies_Achievement", "Achievement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_AchievementsCompanies_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_AchievementsCompanies_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_AchievementsCompanies_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_AchievementsCompanies_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_AchievementsCompanies_Company", "Company", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            AchievementId,
            CompanyId,
            DateEarned,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="AchievementsUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class AchievementsUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AchievementsUser object.
        /// </summary>
        /// <param name="achievementId">Initial value of the AchievementId property.</param>
        /// <param name="dateEarned">Initial value of the DateEarned property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static AchievementsUser CreateAchievementsUser(int achievementId, System.DateTime dateEarned, int userId)
        {
            AchievementsUser achievementsUser = new AchievementsUser();
            achievementsUser.AchievementId = achievementId;
            achievementsUser.DateEarned = dateEarned;
            achievementsUser.UserId = userId;
            return achievementsUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int AchievementId
        {
            get
            {
                return _AchievementId;
            }
            set
            {
                if (_AchievementId != value)
                {
                    OnAchievementIdChanging(value);
                    ReportPropertyChanging("AchievementId");
                    _AchievementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AchievementId");
                    OnAchievementIdChanged();
                }
            }
        }
        private int _AchievementId;
        partial void OnAchievementIdChanging(int value);
        partial void OnAchievementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateEarned
        {
            get
            {
                return _DateEarned;
            }
            set
            {
                OnDateEarnedChanging(value);
                ReportPropertyChanging("DateEarned");
                _DateEarned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEarned");
                OnDateEarnedChanged();
            }
        }
        private System.DateTime _DateEarned;
        partial void OnDateEarnedChanging(System.DateTime value);
        partial void OnDateEarnedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_AchievementsUsers_Achievement", "Achievement")]
        public Achievement Achievement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("NetworksModel.FK_AchievementsUsers_Achievement", "Achievement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("NetworksModel.FK_AchievementsUsers_Achievement", "Achievement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Achievement> AchievementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("NetworksModel.FK_AchievementsUsers_Achievement", "Achievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Achievement>("NetworksModel.FK_AchievementsUsers_Achievement", "Achievement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_AchievementsUsers_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_AchievementsUsers_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_AchievementsUsers_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_AchievementsUsers_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_AchievementsUsers_User", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            AchievementId,
            DateEarned,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ActiveUsersViewLight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ActiveUsersViewLight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActiveUsersViewLight object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="companyAccessLevel">Initial value of the CompanyAccessLevel property.</param>
        /// <param name="networkAccessLevel">Initial value of the NetworkAccessLevel property.</param>
        public static ActiveUsersViewLight CreateActiveUsersViewLight(int id, string login, string firstName, string lastName, int companyID, int companyAccessLevel, int networkAccessLevel)
        {
            ActiveUsersViewLight activeUsersViewLight = new ActiveUsersViewLight();
            activeUsersViewLight.Id = id;
            activeUsersViewLight.Login = login;
            activeUsersViewLight.FirstName = firstName;
            activeUsersViewLight.LastName = lastName;
            activeUsersViewLight.CompanyID = companyID;
            activeUsersViewLight.CompanyAccessLevel = companyAccessLevel;
            activeUsersViewLight.NetworkAccessLevel = networkAccessLevel;
            return activeUsersViewLight;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string Login
        {
            get
            {
                return _Login;
            }
            set
            {
                if (_Login != value)
                {
                    OnLoginChanging(value);
                    ReportPropertyChanging("Login");
                    _Login = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Login");
                    OnLoginChanged();
                }
            }
        }
        private string _Login;
        partial void OnLoginChanging(string value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                if (_FirstName != value)
                {
                    OnFirstNameChanging(value);
                    ReportPropertyChanging("FirstName");
                    _FirstName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FirstName");
                    OnFirstNameChanged();
                }
            }
        }
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                if (_LastName != value)
                {
                    OnLastNameChanging(value);
                    ReportPropertyChanging("LastName");
                    _LastName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LastName");
                    OnLastNameChanged();
                }
            }
        }
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private Nullable<int> _Gender;
        partial void OnGenderChanging(Nullable<int> value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private int _CompanyID;
        partial void OnCompanyIDChanging(int value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<int> _JobId;
        partial void OnJobIdChanging(Nullable<int> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> AccountClosed
        {
            get
            {
                return _AccountClosed;
            }
            set
            {
                OnAccountClosedChanging(value);
                ReportPropertyChanging("AccountClosed");
                _AccountClosed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountClosed");
                OnAccountClosedChanged();
            }
        }
        private Nullable<bool> _AccountClosed;
        partial void OnAccountClosedChanging(Nullable<bool> value);
        partial void OnAccountClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyAccessLevel
        {
            get
            {
                return _CompanyAccessLevel;
            }
            set
            {
                if (_CompanyAccessLevel != value)
                {
                    OnCompanyAccessLevelChanging(value);
                    ReportPropertyChanging("CompanyAccessLevel");
                    _CompanyAccessLevel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyAccessLevel");
                    OnCompanyAccessLevelChanged();
                }
            }
        }
        private int _CompanyAccessLevel;
        partial void OnCompanyAccessLevelChanging(int value);
        partial void OnCompanyAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkAccessLevel
        {
            get
            {
                return _NetworkAccessLevel;
            }
            set
            {
                if (_NetworkAccessLevel != value)
                {
                    OnNetworkAccessLevelChanging(value);
                    ReportPropertyChanging("NetworkAccessLevel");
                    _NetworkAccessLevel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NetworkAccessLevel");
                    OnNetworkAccessLevelChanged();
                }
            }
        }
        private int _NetworkAccessLevel;
        partial void OnNetworkAccessLevelChanging(int value);
        partial void OnNetworkAccessLevelChanged();

        #endregion

    
        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Login,
            FirstName,
            LastName,
            Gender,
            CompanyID,
            JobId,
            AccountClosed,
            CompanyAccessLevel,
            NetworkAccessLevel,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ActiveUsersViewLightEx")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ActiveUsersViewLightEx : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActiveUsersViewLightEx object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="companyAccessLevel">Initial value of the CompanyAccessLevel property.</param>
        /// <param name="networkAccessLevel">Initial value of the NetworkAccessLevel property.</param>
        public static ActiveUsersViewLightEx CreateActiveUsersViewLightEx(int id, string login, string firstName, string lastName, int companyID, int companyAccessLevel, int networkAccessLevel)
        {
            ActiveUsersViewLightEx activeUsersViewLightEx = new ActiveUsersViewLightEx();
            activeUsersViewLightEx.Id = id;
            activeUsersViewLightEx.Login = login;
            activeUsersViewLightEx.FirstName = firstName;
            activeUsersViewLightEx.LastName = lastName;
            activeUsersViewLightEx.CompanyID = companyID;
            activeUsersViewLightEx.CompanyAccessLevel = companyAccessLevel;
            activeUsersViewLightEx.NetworkAccessLevel = networkAccessLevel;
            return activeUsersViewLightEx;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string Login
        {
            get
            {
                return _Login;
            }
            set
            {
                if (_Login != value)
                {
                    OnLoginChanging(value);
                    ReportPropertyChanging("Login");
                    _Login = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Login");
                    OnLoginChanged();
                }
            }
        }
        private string _Login;
        partial void OnLoginChanging(string value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                if (_FirstName != value)
                {
                    OnFirstNameChanging(value);
                    ReportPropertyChanging("FirstName");
                    _FirstName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FirstName");
                    OnFirstNameChanged();
                }
            }
        }
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                if (_LastName != value)
                {
                    OnLastNameChanging(value);
                    ReportPropertyChanging("LastName");
                    _LastName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LastName");
                    OnLastNameChanged();
                }
            }
        }
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private Nullable<int> _Gender;
        partial void OnGenderChanging(Nullable<int> value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private int _CompanyID;
        partial void OnCompanyIDChanging(int value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private string _CompanyName;
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CompanyAlias
        {
            get
            {
                return _CompanyAlias;
            }
            set
            {
                OnCompanyAliasChanging(value);
                ReportPropertyChanging("CompanyAlias");
                _CompanyAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyAlias");
                OnCompanyAliasChanged();
            }
        }
        private string _CompanyAlias;
        partial void OnCompanyAliasChanging(string value);
        partial void OnCompanyAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<int> _JobId;
        partial void OnJobIdChanging(Nullable<int> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string JobName
        {
            get
            {
                return _JobName;
            }
            set
            {
                OnJobNameChanging(value);
                ReportPropertyChanging("JobName");
                _JobName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobName");
                OnJobNameChanged();
            }
        }
        private string _JobName;
        partial void OnJobNameChanging(string value);
        partial void OnJobNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string JobAlias
        {
            get
            {
                return _JobAlias;
            }
            set
            {
                OnJobAliasChanging(value);
                ReportPropertyChanging("JobAlias");
                _JobAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobAlias");
                OnJobAliasChanged();
            }
        }
        private string _JobAlias;
        partial void OnJobAliasChanging(string value);
        partial void OnJobAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> AccountClosed
        {
            get
            {
                return _AccountClosed;
            }
            set
            {
                OnAccountClosedChanging(value);
                ReportPropertyChanging("AccountClosed");
                _AccountClosed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountClosed");
                OnAccountClosedChanged();
            }
        }
        private Nullable<bool> _AccountClosed;
        partial void OnAccountClosedChanging(Nullable<bool> value);
        partial void OnAccountClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyAccessLevel
        {
            get
            {
                return _CompanyAccessLevel;
            }
            set
            {
                if (_CompanyAccessLevel != value)
                {
                    OnCompanyAccessLevelChanging(value);
                    ReportPropertyChanging("CompanyAccessLevel");
                    _CompanyAccessLevel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyAccessLevel");
                    OnCompanyAccessLevelChanged();
                }
            }
        }
        private int _CompanyAccessLevel;
        partial void OnCompanyAccessLevelChanging(int value);
        partial void OnCompanyAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkAccessLevel
        {
            get
            {
                return _NetworkAccessLevel;
            }
            set
            {
                if (_NetworkAccessLevel != value)
                {
                    OnNetworkAccessLevelChanging(value);
                    ReportPropertyChanging("NetworkAccessLevel");
                    _NetworkAccessLevel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NetworkAccessLevel");
                    OnNetworkAccessLevelChanged();
                }
            }
        }
        private int _NetworkAccessLevel;
        partial void OnNetworkAccessLevelChanging(int value);
        partial void OnNetworkAccessLevelChanged();

        #endregion

    
        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Login,
            FirstName,
            LastName,
            Gender,
            CompanyID,
            CompanyName,
            CompanyAlias,
            JobId,
            JobName,
            JobAlias,
            AccountClosed,
            CompanyAccessLevel,
            NetworkAccessLevel,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Activity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Activity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="displayed">Initial value of the Displayed property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Activity CreateActivity(int id, int type, System.DateTime date, bool displayed, int userId)
        {
            Activity activity = new Activity();
            activity.Id = id;
            activity.Type = type;
            activity.Date = date;
            activity.Displayed = displayed;
            activity.UserId = userId;
            return activity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private int _Type;
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private string _Message;
        partial void OnMessageChanging(string value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                OnProfileIDChanging(value);
                ReportPropertyChanging("ProfileID");
                _ProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileID");
                OnProfileIDChanged();
            }
        }
        private Nullable<int> _ProfileID;
        partial void OnProfileIDChanging(Nullable<int> value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<int> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<int> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<int> _GroupId;
        partial void OnGroupIdChanging(Nullable<int> value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private Nullable<int> _EventId;
        partial void OnEventIdChanging(Nullable<int> value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Displayed
        {
            get
            {
                return _Displayed;
            }
            set
            {
                OnDisplayedChanging(value);
                ReportPropertyChanging("Displayed");
                _Displayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Displayed");
                OnDisplayedChanged();
            }
        }
        private bool _Displayed;
        partial void OnDisplayedChanging(bool value);
        partial void OnDisplayedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AdId
        {
            get
            {
                return _AdId;
            }
            set
            {
                OnAdIdChanging(value);
                ReportPropertyChanging("AdId");
                _AdId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdId");
                OnAdIdChanged();
            }
        }
        private Nullable<int> _AdId;
        partial void OnAdIdChanging(Nullable<int> value);
        partial void OnAdIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Activities_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Activities_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Activities_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Activities_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_Activities_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Activities_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Activities_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Activities_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Activities_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Activities_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Activities_Ad", "Ad")]
        public Ad Ad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ad>("NetworksModel.FK_Activities_Ad", "Ad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ad>("NetworksModel.FK_Activities_Ad", "Ad").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ad> AdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ad>("NetworksModel.FK_Activities_Ad", "Ad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ad>("NetworksModel.FK_Activities_Ad", "Ad", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Type,
            Message,
            ProfileID,
            CompanyId,
            GroupId,
            EventId,
            Date,
            Displayed,
            UserId,
            AdId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Ad")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Ad : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ad object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="visibility">Initial value of the Visibility property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isOpen">Initial value of the IsOpen property.</param>
        public static Ad CreateAd(int id, int categoryId, System.DateTime date, string title, string message, bool visibility, int userId, bool isOpen)
        {
            Ad ad = new Ad();
            ad.Id = id;
            ad.CategoryId = categoryId;
            ad.Date = date;
            ad.Title = title;
            ad.Message = message;
            ad.Visibility = visibility;
            ad.UserId = userId;
            ad.IsOpen = isOpen;
            return ad;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private int _CategoryId;
        partial void OnCategoryIdChanging(int value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private string _Message;
        partial void OnMessageChanging(string value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Visibility
        {
            get
            {
                return _Visibility;
            }
            set
            {
                OnVisibilityChanging(value);
                ReportPropertyChanging("Visibility");
                _Visibility = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visibility");
                OnVisibilityChanged();
            }
        }
        private bool _Visibility;
        partial void OnVisibilityChanging(bool value);
        partial void OnVisibilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> UpdateDateUtc
        {
            get
            {
                return _UpdateDateUtc;
            }
            set
            {
                OnUpdateDateUtcChanging(value);
                ReportPropertyChanging("UpdateDateUtc");
                _UpdateDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDateUtc");
                OnUpdateDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _UpdateDateUtc;
        partial void OnUpdateDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnUpdateDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsValidated
        {
            get
            {
                return _IsValidated;
            }
            set
            {
                OnIsValidatedChanging(value);
                ReportPropertyChanging("IsValidated");
                _IsValidated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValidated");
                OnIsValidatedChanged();
            }
        }
        private Nullable<bool> _IsValidated;
        partial void OnIsValidatedChanging(Nullable<bool> value);
        partial void OnIsValidatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> ValidationDateUtc
        {
            get
            {
                return _ValidationDateUtc;
            }
            set
            {
                OnValidationDateUtcChanging(value);
                ReportPropertyChanging("ValidationDateUtc");
                _ValidationDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidationDateUtc");
                OnValidationDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _ValidationDateUtc;
        partial void OnValidationDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnValidationDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ValidationUserId
        {
            get
            {
                return _ValidationUserId;
            }
            set
            {
                OnValidationUserIdChanging(value);
                ReportPropertyChanging("ValidationUserId");
                _ValidationUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidationUserId");
                OnValidationUserIdChanged();
            }
        }
        private Nullable<int> _ValidationUserId;
        partial void OnValidationUserIdChanging(Nullable<int> value);
        partial void OnValidationUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsOpen
        {
            get
            {
                return _IsOpen;
            }
            set
            {
                OnIsOpenChanging(value);
                ReportPropertyChanging("IsOpen");
                _IsOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOpen");
                OnIsOpenChanged();
            }
        }
        private bool _IsOpen;
        partial void OnIsOpenChanging(bool value);
        partial void OnIsOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CloseDateUtc
        {
            get
            {
                return _CloseDateUtc;
            }
            set
            {
                OnCloseDateUtcChanging(value);
                ReportPropertyChanging("CloseDateUtc");
                _CloseDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseDateUtc");
                OnCloseDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _CloseDateUtc;
        partial void OnCloseDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnCloseDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CloseUserId
        {
            get
            {
                return _CloseUserId;
            }
            set
            {
                OnCloseUserIdChanging(value);
                ReportPropertyChanging("CloseUserId");
                _CloseUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseUserId");
                OnCloseUserIdChanged();
            }
        }
        private Nullable<int> _CloseUserId;
        partial void OnCloseUserIdChanging(Nullable<int> value);
        partial void OnCloseUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PendingEditTitle
        {
            get
            {
                return _PendingEditTitle;
            }
            set
            {
                OnPendingEditTitleChanging(value);
                ReportPropertyChanging("PendingEditTitle");
                _PendingEditTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PendingEditTitle");
                OnPendingEditTitleChanged();
            }
        }
        private string _PendingEditTitle;
        partial void OnPendingEditTitleChanging(string value);
        partial void OnPendingEditTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PendingEditMessage
        {
            get
            {
                return _PendingEditMessage;
            }
            set
            {
                OnPendingEditMessageChanging(value);
                ReportPropertyChanging("PendingEditMessage");
                _PendingEditMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PendingEditMessage");
                OnPendingEditMessageChanged();
            }
        }
        private string _PendingEditMessage;
        partial void OnPendingEditMessageChanging(string value);
        partial void OnPendingEditMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> PendingEditDate
        {
            get
            {
                return _PendingEditDate;
            }
            set
            {
                OnPendingEditDateChanging(value);
                ReportPropertyChanging("PendingEditDate");
                _PendingEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PendingEditDate");
                OnPendingEditDateChanged();
            }
        }
        private Nullable<System.DateTime> _PendingEditDate;
        partial void OnPendingEditDateChanging(Nullable<System.DateTime> value);
        partial void OnPendingEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private Nullable<int> _NetworkId;
        partial void OnNetworkIdChanging(Nullable<int> value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Ads_AdsCategories", "AdCategories")]
        public AdCategory Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdCategory>("NetworksModel.FK_Ads_AdsCategories", "AdCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdCategory>("NetworksModel.FK_Ads_AdsCategories", "AdCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdCategory> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdCategory>("NetworksModel.FK_Ads_AdsCategories", "AdCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdCategory>("NetworksModel.FK_Ads_AdsCategories", "AdCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Ads_Users", "Users")]
        public User Owner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Ads_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Ads_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> OwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Ads_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Ads_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_AdTimeline", "TimelineItems")]
        public EntityCollection<TimelineItem> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_AdTimeline", "TimelineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_AdTimeline", "TimelineItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Ads_CloseUser", "User")]
        public User CloseUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Ads_CloseUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Ads_CloseUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CloseUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Ads_CloseUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Ads_CloseUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Ads_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Ads_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Ads_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Ads_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Ads_NetworkId", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Ads_ValidationUser", "User")]
        public User ValidationUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Ads_ValidationUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Ads_ValidationUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ValidationUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Ads_ValidationUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Ads_ValidationUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_AdTags_Relation", "AdTag")]
        public EntityCollection<AdTag> AdTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdTag>("NetworksModel.FK_dbo_AdTags_Relation", "AdTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdTag>("NetworksModel.FK_dbo_AdTags_Relation", "AdTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Activities_Ad", "Activity")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("NetworksModel.FK_Activities_Ad", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("NetworksModel.FK_Activities_Ad", "Activity", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CategoryId,
            Date,
            Title,
            Message,
            Visibility,
            UserId,
            Alias,
            UpdateDateUtc,
            IsValidated,
            ValidationDateUtc,
            ValidationUserId,
            IsOpen,
            CloseDateUtc,
            CloseUserId,
            PendingEditTitle,
            PendingEditMessage,
            PendingEditDate,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="AdCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class AdCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AdCategory CreateAdCategory(int id, int parentId, string name)
        {
            AdCategory adCategory = new AdCategory();
            adCategory.Id = id;
            adCategory.ParentId = parentId;
            adCategory.Name = name;
            return adCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private int _ParentId;
        partial void OnParentIdChanging(int value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private Nullable<int> _NetworkId;
        partial void OnNetworkIdChanging(Nullable<int> value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Ads_AdsCategories", "Ads")]
        public EntityCollection<Ad> Ads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ad>("NetworksModel.FK_Ads_AdsCategories", "Ads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ad>("NetworksModel.FK_Ads_AdsCategories", "Ads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_AdCategories_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_AdCategories_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_AdCategories_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_AdCategories_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_AdCategories_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ParentId,
            Name,
            NetworkId,
            Alias,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="AdTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class AdTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdTag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="relationId">Initial value of the RelationId property.</param>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static AdTag CreateAdTag(int id, int relationId, int tagId, System.DateTime dateCreatedUtc, int createdByUserId, int sortOrder)
        {
            AdTag adTag = new AdTag();
            adTag.Id = id;
            adTag.RelationId = relationId;
            adTag.TagId = tagId;
            adTag.DateCreatedUtc = dateCreatedUtc;
            adTag.CreatedByUserId = createdByUserId;
            adTag.SortOrder = sortOrder;
            return adTag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int RelationId
        {
            get
            {
                return _RelationId;
            }
            set
            {
                OnRelationIdChanging(value);
                ReportPropertyChanging("RelationId");
                _RelationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationId");
                OnRelationIdChanged();
            }
        }
        private int _RelationId;
        partial void OnRelationIdChanging(int value);
        partial void OnRelationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                OnTagIdChanging(value);
                ReportPropertyChanging("TagId");
                _TagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagId");
                OnTagIdChanged();
            }
        }
        private int _TagId;
        partial void OnTagIdChanging(int value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateDeletedUtc
        {
            get
            {
                return _DateDeletedUtc;
            }
            set
            {
                OnDateDeletedUtcChanging(value);
                ReportPropertyChanging("DateDeletedUtc");
                _DateDeletedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeletedUtc");
                OnDateDeletedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateDeletedUtc;
        partial void OnDateDeletedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateDeletedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private int _SortOrder;
        partial void OnSortOrderChanging(int value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_AdTags_Relation", "Ad")]
        public Ad Ad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ad>("NetworksModel.FK_dbo_AdTags_Relation", "Ad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ad>("NetworksModel.FK_dbo_AdTags_Relation", "Ad").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ad> AdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ad>("NetworksModel.FK_dbo_AdTags_Relation", "Ad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ad>("NetworksModel.FK_dbo_AdTags_Relation", "Ad", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_AdTags_CreatedByUser", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_AdTags_CreatedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_AdTags_CreatedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_AdTags_CreatedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_AdTags_CreatedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_AdTags_DeletedByUser", "User")]
        public User DeletedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_AdTags_DeletedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_AdTags_DeletedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_AdTags_DeletedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_AdTags_DeletedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_AdTags_Tag", "TagDefinition")]
        public TagDefinition TagDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_AdTags_Tag", "TagDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_AdTags_Tag", "TagDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TagDefinition> TagDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_AdTags_Tag", "TagDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TagDefinition>("NetworksModel.FK_dbo_AdTags_Tag", "TagDefinition", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            RelationId,
            TagId,
            DateCreatedUtc,
            CreatedByUserId,
            DateDeletedUtc,
            DeletedByUserId,
            DeleteReason,
            SortOrder,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Album")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Album : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Album object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="visibility">Initial value of the Visibility property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Album CreateAlbum(int id, string name, int visibility, int userId)
        {
            Album album = new Album();
            album.Id = id;
            album.Name = name;
            album.Visibility = visibility;
            album.UserId = userId;
            return album;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Visibility
        {
            get
            {
                return _Visibility;
            }
            set
            {
                OnVisibilityChanging(value);
                ReportPropertyChanging("Visibility");
                _Visibility = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visibility");
                OnVisibilityChanged();
            }
        }
        private int _Visibility;
        partial void OnVisibilityChanging(int value);
        partial void OnVisibilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<int> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<int> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private Nullable<int> _EventId;
        partial void OnEventIdChanging(Nullable<int> value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<int> _GroupId;
        partial void OnGroupIdChanging(Nullable<int> value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<int> _TeamId;
        partial void OnTeamIdChanging(Nullable<int> value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<int> _ProjectId;
        partial void OnProjectIdChanging(Nullable<int> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                OnPlaceIdChanging(value);
                ReportPropertyChanging("PlaceId");
                _PlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceId");
                OnPlaceIdChanged();
            }
        }
        private Nullable<int> _PlaceId;
        partial void OnPlaceIdChanging(Nullable<int> value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Pictures_Album", "Pictures")]
        public EntityCollection<Picture> Pictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Picture>("NetworksModel.FK_Pictures_Album", "Pictures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Picture>("NetworksModel.FK_Pictures_Album", "Pictures", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            Visibility,
            CompanyId,
            EventId,
            GroupId,
            TeamId,
            ProjectId,
            PlaceId,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ApiKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ApiKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApiKey object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="secret">Initial value of the Secret property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ApiKey CreateApiKey(int id, System.DateTime dateCreatedUtc, string key, string secret, bool isEnabled, string name)
        {
            ApiKey apiKey = new ApiKey();
            apiKey.Id = id;
            apiKey.DateCreatedUtc = dateCreatedUtc;
            apiKey.Key = key;
            apiKey.Secret = secret;
            apiKey.IsEnabled = isEnabled;
            apiKey.Name = name;
            return apiKey;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private string _Key;
        partial void OnKeyChanging(string value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Secret
        {
            get
            {
                return _Secret;
            }
            set
            {
                OnSecretChanging(value);
                ReportPropertyChanging("Secret");
                _Secret = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Secret");
                OnSecretChanged();
            }
        }
        private string _Secret;
        partial void OnSecretChanging(string value);
        partial void OnSecretChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private bool _IsEnabled;
        partial void OnIsEnabledChanging(bool value);
        partial void OnIsEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Roles
        {
            get
            {
                return _Roles;
            }
            set
            {
                OnRolesChanging(value);
                ReportPropertyChanging("Roles");
                _Roles = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Roles");
                OnRolesChanged();
            }
        }
        private string _Roles;
        partial void OnRolesChanging(string value);
        partial void OnRolesChanged();

        #endregion

    
        #region ColumnsEnum
        public enum Columns
        {
            Id,
            DateCreatedUtc,
            Key,
            Secret,
            IsEnabled,
            Name,
            Description,
            Roles,
        }

        #endregion

    }
    
    /// <summary>
    /// Registration request.
    /// </summary>
    /// <LongDescription>
    /// This stores all the data required to create a user account, the associated company, tags...
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ApplyRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ApplyRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplyRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static ApplyRequest CreateApplyRequest(int id, System.Guid key, System.DateTime dateCreatedUtc, int networkId)
        {
            ApplyRequest applyRequest = new ApplyRequest();
            applyRequest.Id = id;
            applyRequest.Key = key;
            applyRequest.DateCreatedUtc = dateCreatedUtc;
            applyRequest.NetworkId = networkId;
            return applyRequest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private System.Guid _Key;
        partial void OnKeyChanging(System.Guid value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private string _Data;
        partial void OnDataChanging(string value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateSubmitedUtc
        {
            get
            {
                return _DateSubmitedUtc;
            }
            set
            {
                OnDateSubmitedUtcChanging(value);
                ReportPropertyChanging("DateSubmitedUtc");
                _DateSubmitedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSubmitedUtc");
                OnDateSubmitedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateSubmitedUtc;
        partial void OnDateSubmitedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateSubmitedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateEmailConfirmedUtc
        {
            get
            {
                return _DateEmailConfirmedUtc;
            }
            set
            {
                OnDateEmailConfirmedUtcChanging(value);
                ReportPropertyChanging("DateEmailConfirmedUtc");
                _DateEmailConfirmedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEmailConfirmedUtc");
                OnDateEmailConfirmedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateEmailConfirmedUtc;
        partial void OnDateEmailConfirmedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateEmailConfirmedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string UserRemoteAddress
        {
            get
            {
                return _UserRemoteAddress;
            }
            set
            {
                OnUserRemoteAddressChanging(value);
                ReportPropertyChanging("UserRemoteAddress");
                _UserRemoteAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserRemoteAddress");
                OnUserRemoteAddressChanged();
            }
        }
        private string _UserRemoteAddress;
        partial void OnUserRemoteAddressChanging(string value);
        partial void OnUserRemoteAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateRefusedUtc
        {
            get
            {
                return _DateRefusedUtc;
            }
            set
            {
                OnDateRefusedUtcChanging(value);
                ReportPropertyChanging("DateRefusedUtc");
                _DateRefusedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateRefusedUtc");
                OnDateRefusedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateRefusedUtc;
        partial void OnDateRefusedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateRefusedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateAcceptedUtc
        {
            get
            {
                return _DateAcceptedUtc;
            }
            set
            {
                OnDateAcceptedUtcChanging(value);
                ReportPropertyChanging("DateAcceptedUtc");
                _DateAcceptedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAcceptedUtc");
                OnDateAcceptedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateAcceptedUtc;
        partial void OnDateAcceptedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateAcceptedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> RefusedByUserId
        {
            get
            {
                return _RefusedByUserId;
            }
            set
            {
                OnRefusedByUserIdChanging(value);
                ReportPropertyChanging("RefusedByUserId");
                _RefusedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefusedByUserId");
                OnRefusedByUserIdChanged();
            }
        }
        private Nullable<int> _RefusedByUserId;
        partial void OnRefusedByUserIdChanging(Nullable<int> value);
        partial void OnRefusedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AcceptedByUserId
        {
            get
            {
                return _AcceptedByUserId;
            }
            set
            {
                OnAcceptedByUserIdChanging(value);
                ReportPropertyChanging("AcceptedByUserId");
                _AcceptedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedByUserId");
                OnAcceptedByUserIdChanged();
            }
        }
        private Nullable<int> _AcceptedByUserId;
        partial void OnAcceptedByUserIdChanging(Nullable<int> value);
        partial void OnAcceptedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CreatedUserId
        {
            get
            {
                return _CreatedUserId;
            }
            set
            {
                OnCreatedUserIdChanging(value);
                ReportPropertyChanging("CreatedUserId");
                _CreatedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedUserId");
                OnCreatedUserIdChanged();
            }
        }
        private Nullable<int> _CreatedUserId;
        partial void OnCreatedUserIdChanging(Nullable<int> value);
        partial void OnCreatedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CreatedCompanyId
        {
            get
            {
                return _CreatedCompanyId;
            }
            set
            {
                OnCreatedCompanyIdChanging(value);
                ReportPropertyChanging("CreatedCompanyId");
                _CreatedCompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedCompanyId");
                OnCreatedCompanyIdChanged();
            }
        }
        private Nullable<int> _CreatedCompanyId;
        partial void OnCreatedCompanyIdChanging(Nullable<int> value);
        partial void OnCreatedCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CompanyData
        {
            get
            {
                return _CompanyData;
            }
            set
            {
                OnCompanyDataChanging(value);
                ReportPropertyChanging("CompanyData");
                _CompanyData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyData");
                OnCompanyDataChanged();
            }
        }
        private string _CompanyData;
        partial void OnCompanyDataChanging(string value);
        partial void OnCompanyDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> JoinCompanyId
        {
            get
            {
                return _JoinCompanyId;
            }
            set
            {
                OnJoinCompanyIdChanging(value);
                ReportPropertyChanging("JoinCompanyId");
                _JoinCompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoinCompanyId");
                OnJoinCompanyIdChanged();
            }
        }
        private Nullable<int> _JoinCompanyId;
        partial void OnJoinCompanyIdChanging(Nullable<int> value);
        partial void OnJoinCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string RefusedRemark
        {
            get
            {
                return _RefusedRemark;
            }
            set
            {
                OnRefusedRemarkChanging(value);
                ReportPropertyChanging("RefusedRemark");
                _RefusedRemark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RefusedRemark");
                OnRefusedRemarkChanged();
            }
        }
        private string _RefusedRemark;
        partial void OnRefusedRemarkChanging(string value);
        partial void OnRefusedRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateDeletedUtc
        {
            get
            {
                return _DateDeletedUtc;
            }
            set
            {
                OnDateDeletedUtcChanging(value);
                ReportPropertyChanging("DateDeletedUtc");
                _DateDeletedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeletedUtc");
                OnDateDeletedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateDeletedUtc;
        partial void OnDateDeletedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateDeletedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> InvitedByUserId
        {
            get
            {
                return _InvitedByUserId;
            }
            set
            {
                OnInvitedByUserIdChanging(value);
                ReportPropertyChanging("InvitedByUserId");
                _InvitedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitedByUserId");
                OnInvitedByUserIdChanged();
            }
        }
        private Nullable<int> _InvitedByUserId;
        partial void OnInvitedByUserIdChanging(Nullable<int> value);
        partial void OnInvitedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateInvitedUtc
        {
            get
            {
                return _DateInvitedUtc;
            }
            set
            {
                OnDateInvitedUtcChanging(value);
                ReportPropertyChanging("DateInvitedUtc");
                _DateInvitedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInvitedUtc");
                OnDateInvitedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateInvitedUtc;
        partial void OnDateInvitedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateInvitedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ProcessData
        {
            get
            {
                return _ProcessData;
            }
            set
            {
                OnProcessDataChanging(value);
                ReportPropertyChanging("ProcessData");
                _ProcessData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProcessData");
                OnProcessDataChanged();
            }
        }
        private string _ProcessData;
        partial void OnProcessDataChanging(string value);
        partial void OnProcessDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ImportedId
        {
            get
            {
                return _ImportedId;
            }
            set
            {
                OnImportedIdChanging(value);
                ReportPropertyChanging("ImportedId");
                _ImportedId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportedId");
                OnImportedIdChanged();
            }
        }
        private string _ImportedId;
        partial void OnImportedIdChanging(string value);
        partial void OnImportedIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_ApplyRequests_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_ApplyRequests_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_ApplyRequests_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_ApplyRequests_Network", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_CreatedCompany", "Company")]
        public Company CreatedCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_ApplyRequests_CreatedCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_ApplyRequests_CreatedCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CreatedCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_ApplyRequests_CreatedCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_dbo_ApplyRequests_CreatedCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_CreatedUser", "User")]
        public User CreatedUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_CreatedUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_CreatedUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_CreatedUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_CreatedUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_AcceptedByUser", "User")]
        public User AcceptedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_AcceptedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_AcceptedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> AcceptedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_AcceptedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_AcceptedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_RefusedByUser", "User")]
        public User RefusedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_RefusedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_RefusedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> RefusedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_RefusedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_RefusedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_JoinCompany", "Company")]
        public Company CompanyToJoin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_ApplyRequests_JoinCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_ApplyRequests_JoinCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyToJoinReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_ApplyRequests_JoinCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_dbo_ApplyRequests_JoinCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_DeletedByUser", "User")]
        public User DeletedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_DeletedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_DeletedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_DeletedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_DeletedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_InvitedByUser", "User")]
        public User InvitedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_InvitedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_InvitedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> InvitedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_InvitedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_ApplyRequests_InvitedByUser", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Key,
            Data,
            DateCreatedUtc,
            DateSubmitedUtc,
            DateEmailConfirmedUtc,
            UserRemoteAddress,
            NetworkId,
            DateRefusedUtc,
            DateAcceptedUtc,
            RefusedByUserId,
            AcceptedByUserId,
            CreatedUserId,
            CreatedCompanyId,
            CompanyData,
            JoinCompanyId,
            RefusedRemark,
            DateDeletedUtc,
            DeletedByUserId,
            InvitedByUserId,
            DateInvitedUtc,
            ProcessData,
            ImportedId,
        }

        #endregion

    }
    
    /// <summary>
    /// User passwords
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="AspnetMembership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class AspnetMembership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspnetMembership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static AspnetMembership CreateAspnetMembership(System.Guid applicationId, System.Guid userId, string password, int passwordFormat, string passwordSalt, bool isApproved, bool isLockedOut, System.DateTime createDate, System.DateTime lastLoginDate, System.DateTime lastPasswordChangedDate, System.DateTime lastLockoutDate, int failedPasswordAttemptCount, System.DateTime failedPasswordAttemptWindowStart, int failedPasswordAnswerAttemptCount, System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            AspnetMembership aspnetMembership = new AspnetMembership();
            aspnetMembership.ApplicationId = applicationId;
            aspnetMembership.UserId = userId;
            aspnetMembership.Password = password;
            aspnetMembership.PasswordFormat = passwordFormat;
            aspnetMembership.PasswordSalt = passwordSalt;
            aspnetMembership.IsApproved = isApproved;
            aspnetMembership.IsLockedOut = isLockedOut;
            aspnetMembership.CreateDate = createDate;
            aspnetMembership.LastLoginDate = lastLoginDate;
            aspnetMembership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnetMembership.LastLockoutDate = lastLockoutDate;
            aspnetMembership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnetMembership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnetMembership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnetMembership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnetMembership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private System.Guid _UserId;
        partial void OnUserIdChanging(System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private string _Password;
        partial void OnPasswordChanging(string value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private int _PasswordFormat;
        partial void OnPasswordFormatChanging(int value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private string _PasswordSalt;
        partial void OnPasswordSaltChanging(string value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private string _MobilePIN;
        partial void OnMobilePINChanging(string value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private string _Email;
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private string _LoweredEmail;
        partial void OnLoweredEmailChanging(string value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private string _PasswordQuestion;
        partial void OnPasswordQuestionChanging(string value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private string _PasswordAnswer;
        partial void OnPasswordAnswerChanging(string value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private bool _IsApproved;
        partial void OnIsApprovedChanging(bool value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private bool _IsLockedOut;
        partial void OnIsLockedOutChanging(bool value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private System.DateTime _CreateDate;
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private int _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(int value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private int _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private string _Comment;
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK__aspnet_Me__UserI__190BB0C3", "aspnet_Users")]
        public AspnetUsers AspnetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspnetUsers>("NetworksModel.FK__aspnet_Me__UserI__190BB0C3", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspnetUsers>("NetworksModel.FK__aspnet_Me__UserI__190BB0C3", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspnetUsers> AspnetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspnetUsers>("NetworksModel.FK__aspnet_Me__UserI__190BB0C3", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspnetUsers>("NetworksModel.FK__aspnet_Me__UserI__190BB0C3", "aspnet_Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            ApplicationId,
            UserId,
            Password,
            PasswordFormat,
            PasswordSalt,
            MobilePIN,
            Email,
            LoweredEmail,
            PasswordQuestion,
            PasswordAnswer,
            IsApproved,
            IsLockedOut,
            CreateDate,
            LastLoginDate,
            LastPasswordChangedDate,
            LastLockoutDate,
            FailedPasswordAttemptCount,
            FailedPasswordAttemptWindowStart,
            FailedPasswordAnswerAttemptCount,
            FailedPasswordAnswerAttemptWindowStart,
            Comment,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="AspnetUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class AspnetUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspnetUsers object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static AspnetUsers CreateAspnetUsers(System.Guid applicationId, System.Guid userId, string userName, string loweredUserName, bool isAnonymous, System.DateTime lastActivityDate)
        {
            AspnetUsers aspnetUsers = new AspnetUsers();
            aspnetUsers.ApplicationId = applicationId;
            aspnetUsers.UserId = userId;
            aspnetUsers.UserName = userName;
            aspnetUsers.LoweredUserName = loweredUserName;
            aspnetUsers.IsAnonymous = isAnonymous;
            aspnetUsers.LastActivityDate = lastActivityDate;
            return aspnetUsers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private System.Guid _UserId;
        partial void OnUserIdChanging(System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private string _UserName;
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private string _LoweredUserName;
        partial void OnLoweredUserNameChanging(string value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private string _MobileAlias;
        partial void OnMobileAliasChanging(string value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private bool _IsAnonymous;
        partial void OnIsAnonymousChanging(bool value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Users_aspnetUsers", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("NetworksModel.FK_Users_aspnetUsers", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("NetworksModel.FK_Users_aspnetUsers", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK__aspnet_Me__UserI__190BB0C3", "aspnet_Membership")]
        public AspnetMembership AspnetMembership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspnetMembership>("NetworksModel.FK__aspnet_Me__UserI__190BB0C3", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspnetMembership>("NetworksModel.FK__aspnet_Me__UserI__190BB0C3", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspnetMembership> AspnetMembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspnetMembership>("NetworksModel.FK__aspnet_Me__UserI__190BB0C3", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspnetMembership>("NetworksModel.FK__aspnet_Me__UserI__190BB0C3", "aspnet_Membership", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            ApplicationId,
            UserId,
            UserName,
            LoweredUserName,
            MobileAlias,
            IsAnonymous,
            LastActivityDate,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Building")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Building : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Building object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="floors">Initial value of the Floors property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static Building CreateBuilding(int id, string name, int floors, int networkId)
        {
            Building building = new Building();
            building.Id = id;
            building.Name = name;
            building.Floors = floors;
            building.NetworkId = networkId;
            return building;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Floors
        {
            get
            {
                return _Floors;
            }
            set
            {
                OnFloorsChanging(value);
                ReportPropertyChanging("Floors");
                _Floors = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Floors");
                OnFloorsChanged();
            }
        }
        private int _Floors;
        partial void OnFloorsChanging(int value);
        partial void OnFloorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Buildings_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Buildings_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Buildings_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Buildings_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Buildings_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            Floors,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CareerOpportunity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CareerOpportunity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CareerOpportunity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static CareerOpportunity CreateCareerOpportunity(int id, int state, int companyId, int type, string description, int userId, System.DateTime date, int networkId)
        {
            CareerOpportunity careerOpportunity = new CareerOpportunity();
            careerOpportunity.Id = id;
            careerOpportunity.State = state;
            careerOpportunity.CompanyId = companyId;
            careerOpportunity.Type = type;
            careerOpportunity.Description = description;
            careerOpportunity.UserId = userId;
            careerOpportunity.Date = date;
            careerOpportunity.NetworkId = networkId;
            return careerOpportunity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private int _State;
        partial void OnStateChanging(int value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private int _Type;
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Ref
        {
            get
            {
                return _Ref;
            }
            set
            {
                OnRefChanging(value);
                ReportPropertyChanging("Ref");
                _Ref = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ref");
                OnRefChanged();
            }
        }
        private string _Ref;
        partial void OnRefChanging(string value);
        partial void OnRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Skills
        {
            get
            {
                return _Skills;
            }
            set
            {
                OnSkillsChanging(value);
                ReportPropertyChanging("Skills");
                _Skills = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Skills");
                OnSkillsChanged();
            }
        }
        private string _Skills;
        partial void OnSkillsChanging(string value);
        partial void OnSkillsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Interests
        {
            get
            {
                return _Interests;
            }
            set
            {
                OnInterestsChanging(value);
                ReportPropertyChanging("Interests");
                _Interests = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Interests");
                OnInterestsChanged();
            }
        }
        private string _Interests;
        partial void OnInterestsChanging(string value);
        partial void OnInterestsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Recreations
        {
            get
            {
                return _Recreations;
            }
            set
            {
                OnRecreationsChanging(value);
                ReportPropertyChanging("Recreations");
                _Recreations = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Recreations");
                OnRecreationsChanged();
            }
        }
        private string _Recreations;
        partial void OnRecreationsChanging(string value);
        partial void OnRecreationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CareerOpportunities_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CareerOpportunities_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CareerOpportunities_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CareerOpportunities_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_CareerOpportunities_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CareerOpportunities_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CareerOpportunities_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CareerOpportunities_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CareerOpportunities_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_CareerOpportunities_Network", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CareerOpportunities_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CareerOpportunities_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CareerOpportunities_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CareerOpportunities_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_CareerOpportunities_User", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            State,
            CompanyId,
            Type,
            Description,
            UserId,
            Ref,
            Date,
            Skills,
            Interests,
            Recreations,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Club")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Club : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Club object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="createdDateUtc">Initial value of the CreatedDateUtc property.</param>
        public static Club CreateClub(int id, string name, string alias, int createdByUserId, System.DateTime createdDateUtc)
        {
            Club club = new Club();
            club.Id = id;
            club.Name = name;
            club.Alias = alias;
            club.CreatedByUserId = createdByUserId;
            club.CreatedDateUtc = createdDateUtc;
            return club;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Baseline
        {
            get
            {
                return _Baseline;
            }
            set
            {
                OnBaselineChanging(value);
                ReportPropertyChanging("Baseline");
                _Baseline = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Baseline");
                OnBaselineChanged();
            }
        }
        private string _Baseline;
        partial void OnBaselineChanging(string value);
        partial void OnBaselineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private string _About;
        partial void OnAboutChanging(string value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private string _Website;
        partial void OnWebsiteChanging(string value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private string _Email;
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreatedDateUtc
        {
            get
            {
                return _CreatedDateUtc;
            }
            set
            {
                OnCreatedDateUtcChanging(value);
                ReportPropertyChanging("CreatedDateUtc");
                _CreatedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateUtc");
                OnCreatedDateUtcChanged();
            }
        }
        private System.DateTime _CreatedDateUtc;
        partial void OnCreatedDateUtcChanging(System.DateTime value);
        partial void OnCreatedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private Nullable<int> _NetworkId;
        partial void OnNetworkIdChanging(Nullable<int> value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Clubs_CreatedByUser", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Clubs_CreatedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Clubs_CreatedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Clubs_CreatedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_Clubs_CreatedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Clubs_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Clubs_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Clubs_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Clubs_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_Clubs_Network", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            Alias,
            Baseline,
            About,
            Website,
            Phone,
            Email,
            CreatedByUserId,
            CreatedDateUtc,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompaniesVisit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompaniesVisit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompaniesVisit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="viewCount">Initial value of the ViewCount property.</param>
        public static CompaniesVisit CreateCompaniesVisit(int id, int userId, System.DateTime date, int companyId, byte viewCount)
        {
            CompaniesVisit companiesVisit = new CompaniesVisit();
            companiesVisit.Id = id;
            companiesVisit.UserId = userId;
            companiesVisit.Date = date;
            companiesVisit.CompanyId = companyId;
            companiesVisit.ViewCount = viewCount;
            return companiesVisit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte ViewCount
        {
            get
            {
                return _ViewCount;
            }
            set
            {
                OnViewCountChanging(value);
                ReportPropertyChanging("ViewCount");
                _ViewCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewCount");
                OnViewCountChanged();
            }
        }
        private byte _ViewCount;
        partial void OnViewCountChanging(byte value);
        partial void OnViewCountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompaniesVisits_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompaniesVisits_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompaniesVisits_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompaniesVisits_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_CompaniesVisits_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompaniesVisits_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompaniesVisits_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompaniesVisits_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompaniesVisits_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_CompaniesVisits_User", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            Date,
            CompanyId,
            ViewCount,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="createdDateUtc">Initial value of the CreatedDateUtc property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        public static Company CreateCompany(int id, string name, string alias, int networkId, bool isApproved, System.DateTime createdDateUtc, short categoryId, bool isEnabled)
        {
            Company company = new Company();
            company.ID = id;
            company.Name = name;
            company.Alias = alias;
            company.NetworkId = networkId;
            company.IsApproved = isApproved;
            company.CreatedDateUtc = createdDateUtc;
            company.CategoryId = categoryId;
            company.IsEnabled = isEnabled;
            return company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private int _ID;
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Baseline
        {
            get
            {
                return _Baseline;
            }
            set
            {
                OnBaselineChanging(value);
                ReportPropertyChanging("Baseline");
                _Baseline = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Baseline");
                OnBaselineChanged();
            }
        }
        private string _Baseline;
        partial void OnBaselineChanging(string value);
        partial void OnBaselineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string EmailDomain
        {
            get
            {
                return _EmailDomain;
            }
            set
            {
                OnEmailDomainChanging(value);
                ReportPropertyChanging("EmailDomain");
                _EmailDomain = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailDomain");
                OnEmailDomainChanged();
            }
        }
        private string _EmailDomain;
        partial void OnEmailDomainChanging(string value);
        partial void OnEmailDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private bool _IsApproved;
        partial void OnIsApprovedChanging(bool value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreatedDateUtc
        {
            get
            {
                return _CreatedDateUtc;
            }
            set
            {
                OnCreatedDateUtcChanging(value);
                ReportPropertyChanging("CreatedDateUtc");
                _CreatedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateUtc");
                OnCreatedDateUtcChanged();
            }
        }
        private System.DateTime _CreatedDateUtc;
        partial void OnCreatedDateUtcChanging(System.DateTime value);
        partial void OnCreatedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> ApprovedDateUtc
        {
            get
            {
                return _ApprovedDateUtc;
            }
            set
            {
                OnApprovedDateUtcChanging(value);
                ReportPropertyChanging("ApprovedDateUtc");
                _ApprovedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedDateUtc");
                OnApprovedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _ApprovedDateUtc;
        partial void OnApprovedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnApprovedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private short _CategoryId;
        partial void OnCategoryIdChanging(short value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private bool _IsEnabled;
        partial void OnIsEnabledChanging(bool value);
        partial void OnIsEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> IsEnabledFirstChangeDateUtc
        {
            get
            {
                return _IsEnabledFirstChangeDateUtc;
            }
            set
            {
                OnIsEnabledFirstChangeDateUtcChanging(value);
                ReportPropertyChanging("IsEnabledFirstChangeDateUtc");
                _IsEnabledFirstChangeDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabledFirstChangeDateUtc");
                OnIsEnabledFirstChangeDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _IsEnabledFirstChangeDateUtc;
        partial void OnIsEnabledFirstChangeDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnIsEnabledFirstChangeDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> IsEnabledFirstChangeUserId
        {
            get
            {
                return _IsEnabledFirstChangeUserId;
            }
            set
            {
                OnIsEnabledFirstChangeUserIdChanging(value);
                ReportPropertyChanging("IsEnabledFirstChangeUserId");
                _IsEnabledFirstChangeUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabledFirstChangeUserId");
                OnIsEnabledFirstChangeUserIdChanged();
            }
        }
        private Nullable<int> _IsEnabledFirstChangeUserId;
        partial void OnIsEnabledFirstChangeUserIdChanging(Nullable<int> value);
        partial void OnIsEnabledFirstChangeUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> IsEnabledLastChangeDateUtc
        {
            get
            {
                return _IsEnabledLastChangeDateUtc;
            }
            set
            {
                OnIsEnabledLastChangeDateUtcChanging(value);
                ReportPropertyChanging("IsEnabledLastChangeDateUtc");
                _IsEnabledLastChangeDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabledLastChangeDateUtc");
                OnIsEnabledLastChangeDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _IsEnabledLastChangeDateUtc;
        partial void OnIsEnabledLastChangeDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnIsEnabledLastChangeDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> IsEnabledLastChangeUserId
        {
            get
            {
                return _IsEnabledLastChangeUserId;
            }
            set
            {
                OnIsEnabledLastChangeUserIdChanging(value);
                ReportPropertyChanging("IsEnabledLastChangeUserId");
                _IsEnabledLastChangeUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabledLastChangeUserId");
                OnIsEnabledLastChangeUserIdChanged();
            }
        }
        private Nullable<int> _IsEnabledLastChangeUserId;
        partial void OnIsEnabledLastChangeUserIdChanging(Nullable<int> value);
        partial void OnIsEnabledLastChangeUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string IsEnabledRemark
        {
            get
            {
                return _IsEnabledRemark;
            }
            set
            {
                OnIsEnabledRemarkChanging(value);
                ReportPropertyChanging("IsEnabledRemark");
                _IsEnabledRemark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IsEnabledRemark");
                OnIsEnabledRemarkChanged();
            }
        }
        private string _IsEnabledRemark;
        partial void OnIsEnabledRemarkChanging(string value);
        partial void OnIsEnabledRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ImportedId
        {
            get
            {
                return _ImportedId;
            }
            set
            {
                OnImportedIdChanging(value);
                ReportPropertyChanging("ImportedId");
                _ImportedId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportedId");
                OnImportedIdChanged();
            }
        }
        private string _ImportedId;
        partial void OnImportedIdChanging(string value);
        partial void OnImportedIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Activities_Companies", "Activities")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("NetworksModel.FK_Activities_Companies", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("NetworksModel.FK_Activities_Companies", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompaniesNews_Company", "CompanyNews")]
        public EntityCollection<CompanyNew> CompanyNews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyNew>("NetworksModel.FK_CompaniesNews_Company", "CompanyNews");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyNew>("NetworksModel.FK_CompaniesNews_Company", "CompanyNews", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompaniesVisits_Company", "CompaniesVisits")]
        public EntityCollection<CompaniesVisit> CompaniesVisits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompaniesVisit>("NetworksModel.FK_CompaniesVisits_Company", "CompaniesVisits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompaniesVisit>("NetworksModel.FK_CompaniesVisits_Company", "CompaniesVisits", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyAdmins_Companies", "CompanyAdmins")]
        public EntityCollection<CompanyAdmin> CompanyAdmins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyAdmin>("NetworksModel.FK_CompanyAdmins_Companies", "CompanyAdmins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyAdmin>("NetworksModel.FK_CompanyAdmins_Companies", "CompanyAdmins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanySkills_Companies", "CompanySkills")]
        public EntityCollection<CompanySkill> CompanySkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanySkill>("NetworksModel.FK_CompanySkills_Companies", "CompanySkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanySkill>("NetworksModel.FK_CompanySkills_Companies", "CompanySkills", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeMaterials_Companies", "ExchangeMaterials")]
        public EntityCollection<ExchangeMaterial> ExchangeMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeMaterial>("NetworksModel.FK_ExchangeMaterials_Companies", "ExchangeMaterials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeMaterial>("NetworksModel.FK_ExchangeMaterials_Companies", "ExchangeMaterials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSkills_Companies", "ExchangeSkills")]
        public EntityCollection<ExchangeSkill> ExchangeSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeSkill>("NetworksModel.FK_ExchangeSkills_Companies", "ExchangeSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeSkill>("NetworksModel.FK_ExchangeSkills_Companies", "ExchangeSkills", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSurfaces_Companies", "ExchangeSurfaces")]
        public EntityCollection<ExchangeSurface> ExchangeSurfaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeSurface>("NetworksModel.FK_ExchangeSurfaces_Companies", "ExchangeSurfaces");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeSurface>("NetworksModel.FK_ExchangeSurfaces_Companies", "ExchangeSurfaces", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Invited_Company", "Invited")]
        public EntityCollection<Invited> Inviteds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invited>("NetworksModel.FK_Invited_Company", "Invited");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invited>("NetworksModel.FK_Invited_Company", "Invited", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Places_Companies", "Places")]
        public EntityCollection<Place> Places
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Place>("NetworksModel.FK_Places_Companies", "Places");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Place>("NetworksModel.FK_Places_Companies", "Places", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Teams_Companies", "Teams")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("NetworksModel.FK_Teams_Companies", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("NetworksModel.FK_Teams_Companies", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_CompanyTimeline", "TimelineItems")]
        public EntityCollection<TimelineItem> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_CompanyTimeline", "TimelineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_CompanyTimeline", "TimelineItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Users_Companies", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("NetworksModel.FK_Users_Companies", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("NetworksModel.FK_Users_Companies", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_Company", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("NetworksModel.FK_Events_Company", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("NetworksModel.FK_Events_Company", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_AchievementsCompanies_Company", "AchievementsCompany")]
        public EntityCollection<AchievementsCompany> AchievementsCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AchievementsCompany>("NetworksModel.FK_AchievementsCompanies_Company", "AchievementsCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AchievementsCompany>("NetworksModel.FK_AchievementsCompanies_Company", "AchievementsCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Companies_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Companies_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Companies_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Companies_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Companies_NetworkId", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CareerOpportunities_Company", "CareerOpportunity")]
        public EntityCollection<CareerOpportunity> CareerOpportunities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CareerOpportunity>("NetworksModel.FK_CareerOpportunities_Company", "CareerOpportunity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CareerOpportunity>("NetworksModel.FK_CareerOpportunities_Company", "CareerOpportunity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkCompanySubscriptions_Company", "SocialNetworkCompanySubscription")]
        public EntityCollection<SocialNetworkCompanySubscription> SocialNetworkCompanySubscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialNetworkCompanySubscription>("NetworksModel.FK_SocialNetworkCompanySubscriptions_Company", "SocialNetworkCompanySubscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialNetworkCompanySubscription>("NetworksModel.FK_SocialNetworkCompanySubscriptions_Company", "SocialNetworkCompanySubscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyContacts_FromCompanyId", "CompanyContact")]
        public EntityCollection<CompanyContact> CompanyContactsSent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyContact>("NetworksModel.FK_CompanyContacts_FromCompanyId", "CompanyContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyContact>("NetworksModel.FK_CompanyContacts_FromCompanyId", "CompanyContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyContacts_ToCompanyId", "CompanyContact")]
        public EntityCollection<CompanyContact> CompanyContactsReceived
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyContact>("NetworksModel.FK_CompanyContacts_ToCompanyId", "CompanyContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyContact>("NetworksModel.FK_CompanyContacts_ToCompanyId", "CompanyContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyRequests_Company", "CompanyRequest")]
        public EntityCollection<CompanyRequest> CompanyRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRequest>("NetworksModel.FK_dbo_CompanyRequests_Company", "CompanyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRequest>("NetworksModel.FK_dbo_CompanyRequests_Company", "CompanyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisterRequests_Company", "RegisterRequest")]
        public EntityCollection<RegisterRequest> RegisterRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegisterRequest>("NetworksModel.FK_RegisterRequests_Company", "RegisterRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegisterRequest>("NetworksModel.FK_RegisterRequests_Company", "RegisterRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Companies_UserFirstChange", "User")]
        public User IsEnabledFirstChangeUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Companies_UserFirstChange", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Companies_UserFirstChange", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> IsEnabledFirstChangeUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Companies_UserFirstChange", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_Companies_UserFirstChange", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Companies_UserLastChange", "User")]
        public User IsEnabledLastChangeUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Companies_UserLastChange", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Companies_UserLastChange", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> IsEnabledLastChangeUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Companies_UserLastChange", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_Companies_UserLastChange", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_CreatedCompany", "ApplyRequest")]
        public EntityCollection<ApplyRequest> ApplyRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_CreatedCompany", "ApplyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_CreatedCompany", "ApplyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_JoinCompany", "ApplyRequest")]
        public EntityCollection<ApplyRequest> ApplyRequests1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_JoinCompany", "ApplyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_JoinCompany", "ApplyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyProfileFields_Users", "CompanyProfileField")]
        public EntityCollection<CompanyProfileField> ProfileFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyProfileField>("NetworksModel.FK_dbo_CompanyProfileFields_Users", "CompanyProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyProfileField>("NetworksModel.FK_dbo_CompanyProfileFields_Users", "CompanyProfileField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_AppliesToCompany", "Subscription")]
        public EntityCollection<Subscription> ApplyingSubscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_AppliesToCompany", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_AppliesToCompany", "Subscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_OwnerCompany", "Subscription")]
        public EntityCollection<Subscription> OwnedSubscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_OwnerCompany", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_OwnerCompany", "Subscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyRelationships_MasterCompany", "CompanyRelationship")]
        public EntityCollection<CompanyRelationship> MasterRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRelationship>("NetworksModel.FK_CompanyRelationships_MasterCompany", "CompanyRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRelationship>("NetworksModel.FK_CompanyRelationships_MasterCompany", "CompanyRelationship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyRelationships_SlaveCompany", "CompanyRelationship")]
        public EntityCollection<CompanyRelationship> SlaveRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRelationship>("NetworksModel.FK_CompanyRelationships_SlaveCompany", "CompanyRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRelationship>("NetworksModel.FK_CompanyRelationships_SlaveCompany", "CompanyRelationship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Companies_Category", "CompanyCategory")]
        public CompanyCategory CompanyCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyCategory>("NetworksModel.FK_Companies_Category", "CompanyCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyCategory>("NetworksModel.FK_Companies_Category", "CompanyCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyCategory> CompanyCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyCategory>("NetworksModel.FK_Companies_Category", "CompanyCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyCategory>("NetworksModel.FK_Companies_Category", "CompanyCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyPlaces_Companies", "CompanyPlace")]
        public EntityCollection<CompanyPlace> CompanyPlaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPlace>("NetworksModel.FK_dbo_CompanyPlaces_Companies", "CompanyPlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPlace>("NetworksModel.FK_dbo_CompanyPlaces_Companies", "CompanyPlace", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyTags_Companies", "CompanyTag")]
        public EntityCollection<CompanyTag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyTag>("NetworksModel.FK_dbo_CompanyTags_Companies", "CompanyTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyTag>("NetworksModel.FK_dbo_CompanyTags_Companies", "CompanyTag", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            ID,
            Name,
            Alias,
            Baseline,
            EmailDomain,
            NetworkId,
            IsApproved,
            CreatedDateUtc,
            ApprovedDateUtc,
            CategoryId,
            IsEnabled,
            IsEnabledFirstChangeDateUtc,
            IsEnabledFirstChangeUserId,
            IsEnabledLastChangeDateUtc,
            IsEnabledLastChangeUserId,
            IsEnabledRemark,
            ImportedId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyAdmin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyAdmin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyAdmin object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static CompanyAdmin CreateCompanyAdmin(int id, int companyId, System.DateTime date, int userId)
        {
            CompanyAdmin companyAdmin = new CompanyAdmin();
            companyAdmin.Id = id;
            companyAdmin.CompanyId = companyId;
            companyAdmin.Date = date;
            companyAdmin.UserId = userId;
            return companyAdmin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyAdmins_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyAdmins_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyAdmins_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyAdmins_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_CompanyAdmins_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyAdmins_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompanyAdmins_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompanyAdmins_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompanyAdmins_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_CompanyAdmins_User", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            Date,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="knownCategory">Initial value of the KnownCategory property.</param>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        public static CompanyCategory CreateCompanyCategory(short id, string name, string alias, int networkId, byte knownCategory, bool isDefault)
        {
            CompanyCategory companyCategory = new CompanyCategory();
            companyCategory.Id = id;
            companyCategory.Name = name;
            companyCategory.Alias = alias;
            companyCategory.NetworkId = networkId;
            companyCategory.KnownCategory = knownCategory;
            companyCategory.IsDefault = isDefault;
            return companyCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public short Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private short _Id;
        partial void OnIdChanging(short value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte KnownCategory
        {
            get
            {
                return _KnownCategory;
            }
            set
            {
                OnKnownCategoryChanging(value);
                ReportPropertyChanging("KnownCategory");
                _KnownCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KnownCategory");
                OnKnownCategoryChanged();
            }
        }
        private byte _KnownCategory;
        partial void OnKnownCategoryChanging(byte value);
        partial void OnKnownCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private bool _IsDefault;
        partial void OnIsDefaultChanging(bool value);
        partial void OnIsDefaultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyRequests_Category", "CompanyRequest")]
        public EntityCollection<CompanyRequest> CompanyRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRequest>("NetworksModel.FK_dbo_CompanyRequests_Category", "CompanyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRequest>("NetworksModel.FK_dbo_CompanyRequests_Category", "CompanyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyCategories_Networks", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CompanyCategories_Networks", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CompanyCategories_Networks", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CompanyCategories_Networks", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_CompanyCategories_Networks", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Companies_Category", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("NetworksModel.FK_Companies_Category", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("NetworksModel.FK_Companies_Category", "Company", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            Alias,
            NetworkId,
            KnownCategory,
            IsDefault,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyContact object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="isRead">Initial value of the IsRead property.</param>
        public static CompanyContact CreateCompanyContact(int id, int type, System.DateTime date, string message, bool isRead)
        {
            CompanyContact companyContact = new CompanyContact();
            companyContact.Id = id;
            companyContact.Type = type;
            companyContact.Date = date;
            companyContact.Message = message;
            companyContact.IsRead = isRead;
            return companyContact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private int _Type;
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ToCompanyId
        {
            get
            {
                return _ToCompanyId;
            }
            set
            {
                OnToCompanyIdChanging(value);
                ReportPropertyChanging("ToCompanyId");
                _ToCompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToCompanyId");
                OnToCompanyIdChanged();
            }
        }
        private Nullable<int> _ToCompanyId;
        partial void OnToCompanyIdChanging(Nullable<int> value);
        partial void OnToCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> FromCompanyId
        {
            get
            {
                return _FromCompanyId;
            }
            set
            {
                OnFromCompanyIdChanging(value);
                ReportPropertyChanging("FromCompanyId");
                _FromCompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromCompanyId");
                OnFromCompanyIdChanged();
            }
        }
        private Nullable<int> _FromCompanyId;
        partial void OnFromCompanyIdChanging(Nullable<int> value);
        partial void OnFromCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private Nullable<int> _FromUserId;
        partial void OnFromUserIdChanging(Nullable<int> value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private string _Message;
        partial void OnMessageChanging(string value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private bool _IsRead;
        partial void OnIsReadChanging(bool value);
        partial void OnIsReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FromCompanyName
        {
            get
            {
                return _FromCompanyName;
            }
            set
            {
                OnFromCompanyNameChanging(value);
                ReportPropertyChanging("FromCompanyName");
                _FromCompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FromCompanyName");
                OnFromCompanyNameChanged();
            }
        }
        private string _FromCompanyName;
        partial void OnFromCompanyNameChanging(string value);
        partial void OnFromCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FromUserName
        {
            get
            {
                return _FromUserName;
            }
            set
            {
                OnFromUserNameChanging(value);
                ReportPropertyChanging("FromUserName");
                _FromUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FromUserName");
                OnFromUserNameChanged();
            }
        }
        private string _FromUserName;
        partial void OnFromUserNameChanging(string value);
        partial void OnFromUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FromUserEmail
        {
            get
            {
                return _FromUserEmail;
            }
            set
            {
                OnFromUserEmailChanging(value);
                ReportPropertyChanging("FromUserEmail");
                _FromUserEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FromUserEmail");
                OnFromUserEmailChanged();
            }
        }
        private string _FromUserEmail;
        partial void OnFromUserEmailChanging(string value);
        partial void OnFromUserEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ToUserEmail
        {
            get
            {
                return _ToUserEmail;
            }
            set
            {
                OnToUserEmailChanging(value);
                ReportPropertyChanging("ToUserEmail");
                _ToUserEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ToUserEmail");
                OnToUserEmailChanged();
            }
        }
        private string _ToUserEmail;
        partial void OnToUserEmailChanging(string value);
        partial void OnToUserEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyContacts_FromCompanyId", "Company")]
        public Company FromCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyContacts_FromCompanyId", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyContacts_FromCompanyId", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> FromCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyContacts_FromCompanyId", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_CompanyContacts_FromCompanyId", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyContacts_ToCompanyId", "Company")]
        public Company ToCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyContacts_ToCompanyId", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyContacts_ToCompanyId", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> ToCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyContacts_ToCompanyId", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_CompanyContacts_ToCompanyId", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyContacts_FromUserId", "User")]
        public User FromUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompanyContacts_FromUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompanyContacts_FromUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FromUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompanyContacts_FromUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_CompanyContacts_FromUserId", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Type,
            Date,
            ToCompanyId,
            FromCompanyId,
            FromUserId,
            Message,
            IsRead,
            FromCompanyName,
            FromUserName,
            FromUserEmail,
            ToUserEmail,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyNew")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyNew : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyNew object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static CompanyNew CreateCompanyNew(int id, int createdByUserId)
        {
            CompanyNew companyNew = new CompanyNew();
            companyNew.Id = id;
            companyNew.CreatedByUserId = createdByUserId;
            return companyNew;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private string _Text;
        partial void OnTextChanging(string value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private string _Subject;
        partial void OnSubjectChanging(string value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<int> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<int> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompaniesNews_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompaniesNews_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompaniesNews_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompaniesNews_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_CompaniesNews_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyNews_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompanyNews_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompanyNews_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_CompanyNews_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_CompanyNews_User", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Text,
            Subject,
            CreateDate,
            CompanyId,
            CreatedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyPlace")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyPlace : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyPlace object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="placeId">Initial value of the PlaceId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static CompanyPlace CreateCompanyPlace(int id, int companyId, int placeId, System.DateTime dateCreatedUtc, int createdByUserId)
        {
            CompanyPlace companyPlace = new CompanyPlace();
            companyPlace.Id = id;
            companyPlace.CompanyId = companyId;
            companyPlace.PlaceId = placeId;
            companyPlace.DateCreatedUtc = dateCreatedUtc;
            companyPlace.CreatedByUserId = createdByUserId;
            return companyPlace;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                OnPlaceIdChanging(value);
                ReportPropertyChanging("PlaceId");
                _PlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceId");
                OnPlaceIdChanged();
            }
        }
        private int _PlaceId;
        partial void OnPlaceIdChanging(int value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateDeletedUtc
        {
            get
            {
                return _DateDeletedUtc;
            }
            set
            {
                OnDateDeletedUtcChanging(value);
                ReportPropertyChanging("DateDeletedUtc");
                _DateDeletedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeletedUtc");
                OnDateDeletedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateDeletedUtc;
        partial void OnDateDeletedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateDeletedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyPlaces_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyPlaces_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyPlaces_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyPlaces_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_dbo_CompanyPlaces_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyPlaces_Places", "Place")]
        public Place Place
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_dbo_CompanyPlaces_Places", "Place").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_dbo_CompanyPlaces_Places", "Place").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Place> PlaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_dbo_CompanyPlaces_Places", "Place");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Place>("NetworksModel.FK_dbo_CompanyPlaces_Places", "Place", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            PlaceId,
            DateCreatedUtc,
            CreatedByUserId,
            DateDeletedUtc,
            DeletedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyProfileField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyProfileField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyProfileField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="profileFieldId">Initial value of the ProfileFieldId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="updateCount">Initial value of the UpdateCount property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        public static CompanyProfileField CreateCompanyProfileField(int id, int companyId, int profileFieldId, string value, System.DateTime dateCreatedUtc, short updateCount, byte source)
        {
            CompanyProfileField companyProfileField = new CompanyProfileField();
            companyProfileField.Id = id;
            companyProfileField.CompanyId = companyId;
            companyProfileField.ProfileFieldId = profileFieldId;
            companyProfileField.Value = value;
            companyProfileField.DateCreatedUtc = dateCreatedUtc;
            companyProfileField.UpdateCount = updateCount;
            companyProfileField.Source = source;
            return companyProfileField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ProfileFieldId
        {
            get
            {
                return _ProfileFieldId;
            }
            set
            {
                OnProfileFieldIdChanging(value);
                ReportPropertyChanging("ProfileFieldId");
                _ProfileFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileFieldId");
                OnProfileFieldIdChanged();
            }
        }
        private int _ProfileFieldId;
        partial void OnProfileFieldIdChanging(int value);
        partial void OnProfileFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private string _Value;
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateUpdatedUtc
        {
            get
            {
                return _DateUpdatedUtc;
            }
            set
            {
                OnDateUpdatedUtcChanging(value);
                ReportPropertyChanging("DateUpdatedUtc");
                _DateUpdatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdatedUtc");
                OnDateUpdatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateUpdatedUtc;
        partial void OnDateUpdatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateUpdatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short UpdateCount
        {
            get
            {
                return _UpdateCount;
            }
            set
            {
                OnUpdateCountChanging(value);
                ReportPropertyChanging("UpdateCount");
                _UpdateCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateCount");
                OnUpdateCountChanged();
            }
        }
        private short _UpdateCount;
        partial void OnUpdateCountChanging(short value);
        partial void OnUpdateCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private byte _Source;
        partial void OnSourceChanging(byte value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private string _Data;
        partial void OnDataChanging(string value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyProfileFields_Users", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyProfileFields_Users", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyProfileFields_Users", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyProfileFields_Users", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_dbo_CompanyProfileFields_Users", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyProfileFields_ProfileFields", "ProfileField")]
        public ProfileField ProfileField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_CompanyProfileFields_ProfileFields", "ProfileField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_CompanyProfileFields_ProfileFields", "ProfileField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProfileField> ProfileFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_CompanyProfileFields_ProfileFields", "ProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProfileField>("NetworksModel.FK_dbo_CompanyProfileFields_ProfileFields", "ProfileField", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            ProfileFieldId,
            Value,
            DateCreatedUtc,
            DateUpdatedUtc,
            UpdateCount,
            Source,
            Data,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyRelationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyRelationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyRelationship object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="masterId">Initial value of the MasterId property.</param>
        /// <param name="slaveId">Initial value of the SlaveId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        public static CompanyRelationship CreateCompanyRelationship(int id, int typeId, int masterId, int slaveId, System.DateTime dateCreatedUtc)
        {
            CompanyRelationship companyRelationship = new CompanyRelationship();
            companyRelationship.Id = id;
            companyRelationship.TypeId = typeId;
            companyRelationship.MasterId = masterId;
            companyRelationship.SlaveId = slaveId;
            companyRelationship.DateCreatedUtc = dateCreatedUtc;
            return companyRelationship;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private int _TypeId;
        partial void OnTypeIdChanging(int value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int MasterId
        {
            get
            {
                return _MasterId;
            }
            set
            {
                OnMasterIdChanging(value);
                ReportPropertyChanging("MasterId");
                _MasterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterId");
                OnMasterIdChanged();
            }
        }
        private int _MasterId;
        partial void OnMasterIdChanging(int value);
        partial void OnMasterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SlaveId
        {
            get
            {
                return _SlaveId;
            }
            set
            {
                OnSlaveIdChanging(value);
                ReportPropertyChanging("SlaveId");
                _SlaveId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SlaveId");
                OnSlaveIdChanged();
            }
        }
        private int _SlaveId;
        partial void OnSlaveIdChanging(int value);
        partial void OnSlaveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyRelationships_MasterCompany", "Company")]
        public Company Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyRelationships_MasterCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyRelationships_MasterCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyRelationships_MasterCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_CompanyRelationships_MasterCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyRelationships_SlaveCompany", "Company")]
        public Company Slave
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyRelationships_SlaveCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyRelationships_SlaveCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> SlaveReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanyRelationships_SlaveCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_CompanyRelationships_SlaveCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyRelationships_CompanyRelationshipTypes", "CompanyRelationshipType")]
        public CompanyRelationshipType RelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyRelationshipType>("NetworksModel.FK_CompanyRelationships_CompanyRelationshipTypes", "CompanyRelationshipType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyRelationshipType>("NetworksModel.FK_CompanyRelationships_CompanyRelationshipTypes", "CompanyRelationshipType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyRelationshipType> RelationshipTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyRelationshipType>("NetworksModel.FK_CompanyRelationships_CompanyRelationshipTypes", "CompanyRelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyRelationshipType>("NetworksModel.FK_CompanyRelationships_CompanyRelationshipTypes", "CompanyRelationshipType", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            TypeId,
            MasterId,
            SlaveId,
            DateCreatedUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyRelationshipType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyRelationshipType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyRelationshipType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="verb">Initial value of the Verb property.</param>
        /// <param name="knownType">Initial value of the KnownType property.</param>
        public static CompanyRelationshipType CreateCompanyRelationshipType(int id, int networkId, string name, string alias, string verb, byte knownType)
        {
            CompanyRelationshipType companyRelationshipType = new CompanyRelationshipType();
            companyRelationshipType.Id = id;
            companyRelationshipType.NetworkId = networkId;
            companyRelationshipType.Name = name;
            companyRelationshipType.Alias = alias;
            companyRelationshipType.Verb = verb;
            companyRelationshipType.KnownType = knownType;
            return companyRelationshipType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Verb
        {
            get
            {
                return _Verb;
            }
            set
            {
                OnVerbChanging(value);
                ReportPropertyChanging("Verb");
                _Verb = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Verb");
                OnVerbChanged();
            }
        }
        private string _Verb;
        partial void OnVerbChanging(string value);
        partial void OnVerbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte KnownType
        {
            get
            {
                return _KnownType;
            }
            set
            {
                OnKnownTypeChanging(value);
                ReportPropertyChanging("KnownType");
                _KnownType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KnownType");
                OnKnownTypeChanged();
            }
        }
        private byte _KnownType;
        partial void OnKnownTypeChanging(byte value);
        partial void OnKnownTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Rules
        {
            get
            {
                return _Rules;
            }
            set
            {
                OnRulesChanging(value);
                ReportPropertyChanging("Rules");
                _Rules = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rules");
                OnRulesChanged();
            }
        }
        private string _Rules;
        partial void OnRulesChanging(string value);
        partial void OnRulesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyRelationships_CompanyRelationshipTypes", "CompanyRelationship")]
        public EntityCollection<CompanyRelationship> Relationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRelationship>("NetworksModel.FK_CompanyRelationships_CompanyRelationshipTypes", "CompanyRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRelationship>("NetworksModel.FK_CompanyRelationships_CompanyRelationshipTypes", "CompanyRelationship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyRelationshipTypes_Networks", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CompanyRelationshipTypes_Networks", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CompanyRelationshipTypes_Networks", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CompanyRelationshipTypes_Networks", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_CompanyRelationshipTypes_Networks", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            NetworkId,
            Name,
            Alias,
            Verb,
            KnownType,
            Rules,
        }

        #endregion

    }
    
    /// <summary>
    /// Requests to create new companies
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="indoorId">Initial value of the IndoorId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="uniqueId">Initial value of the UniqueId property.</param>
        /// <param name="createdDateUtc">Initial value of the CreatedDateUtc property.</param>
        /// <param name="rejectedTimes">Initial value of the RejectedTimes property.</param>
        public static CompanyRequest CreateCompanyRequest(int id, string name, string alias, short categoryId, short indoorId, int networkId, System.Guid uniqueId, System.DateTime createdDateUtc, short rejectedTimes)
        {
            CompanyRequest companyRequest = new CompanyRequest();
            companyRequest.Id = id;
            companyRequest.Name = name;
            companyRequest.Alias = alias;
            companyRequest.CategoryId = categoryId;
            companyRequest.IndoorId = indoorId;
            companyRequest.NetworkId = networkId;
            companyRequest.UniqueId = uniqueId;
            companyRequest.CreatedDateUtc = createdDateUtc;
            companyRequest.RejectedTimes = rejectedTimes;
            return companyRequest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private string _Website;
        partial void OnWebsiteChanging(string value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private string _Email;
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private string _Building;
        partial void OnBuildingChanging(string value);
        partial void OnBuildingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Floor
        {
            get
            {
                return _Floor;
            }
            set
            {
                OnFloorChanging(value);
                ReportPropertyChanging("Floor");
                _Floor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Floor");
                OnFloorChanged();
            }
        }
        private Nullable<int> _Floor;
        partial void OnFloorChanging(Nullable<int> value);
        partial void OnFloorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Access
        {
            get
            {
                return _Access;
            }
            set
            {
                OnAccessChanging(value);
                ReportPropertyChanging("Access");
                _Access = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Access");
                OnAccessChanged();
            }
        }
        private string _Access;
        partial void OnAccessChanging(string value);
        partial void OnAccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Baseline
        {
            get
            {
                return _Baseline;
            }
            set
            {
                OnBaselineChanging(value);
                ReportPropertyChanging("Baseline");
                _Baseline = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Baseline");
                OnBaselineChanged();
            }
        }
        private string _Baseline;
        partial void OnBaselineChanging(string value);
        partial void OnBaselineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private string _About;
        partial void OnAboutChanging(string value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string EmailDomain
        {
            get
            {
                return _EmailDomain;
            }
            set
            {
                OnEmailDomainChanging(value);
                ReportPropertyChanging("EmailDomain");
                _EmailDomain = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailDomain");
                OnEmailDomainChanged();
            }
        }
        private string _EmailDomain;
        partial void OnEmailDomainChanging(string value);
        partial void OnEmailDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private short _CategoryId;
        partial void OnCategoryIdChanging(short value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short IndoorId
        {
            get
            {
                return _IndoorId;
            }
            set
            {
                OnIndoorIdChanging(value);
                ReportPropertyChanging("IndoorId");
                _IndoorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndoorId");
                OnIndoorIdChanged();
            }
        }
        private short _IndoorId;
        partial void OnIndoorIdChanging(short value);
        partial void OnIndoorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string AdminEmails
        {
            get
            {
                return _AdminEmails;
            }
            set
            {
                OnAdminEmailsChanging(value);
                ReportPropertyChanging("AdminEmails");
                _AdminEmails = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdminEmails");
                OnAdminEmailsChanged();
            }
        }
        private string _AdminEmails;
        partial void OnAdminEmailsChanging(string value);
        partial void OnAdminEmailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string OtherEmails
        {
            get
            {
                return _OtherEmails;
            }
            set
            {
                OnOtherEmailsChanging(value);
                ReportPropertyChanging("OtherEmails");
                _OtherEmails = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OtherEmails");
                OnOtherEmailsChanged();
            }
        }
        private string _OtherEmails;
        partial void OnOtherEmailsChanging(string value);
        partial void OnOtherEmailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid UniqueId
        {
            get
            {
                return _UniqueId;
            }
            set
            {
                OnUniqueIdChanging(value);
                ReportPropertyChanging("UniqueId");
                _UniqueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueId");
                OnUniqueIdChanged();
            }
        }
        private System.Guid _UniqueId;
        partial void OnUniqueIdChanging(System.Guid value);
        partial void OnUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreatedDateUtc
        {
            get
            {
                return _CreatedDateUtc;
            }
            set
            {
                OnCreatedDateUtcChanging(value);
                ReportPropertyChanging("CreatedDateUtc");
                _CreatedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateUtc");
                OnCreatedDateUtcChanged();
            }
        }
        private System.DateTime _CreatedDateUtc;
        partial void OnCreatedDateUtcChanging(System.DateTime value);
        partial void OnCreatedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<int> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<int> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private Nullable<bool> _Approved;
        partial void OnApprovedChanging(Nullable<bool> value);
        partial void OnApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> ClosedDateUtc
        {
            get
            {
                return _ClosedDateUtc;
            }
            set
            {
                OnClosedDateUtcChanging(value);
                ReportPropertyChanging("ClosedDateUtc");
                _ClosedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosedDateUtc");
                OnClosedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _ClosedDateUtc;
        partial void OnClosedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnClosedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ClosedByUserId
        {
            get
            {
                return _ClosedByUserId;
            }
            set
            {
                OnClosedByUserIdChanging(value);
                ReportPropertyChanging("ClosedByUserId");
                _ClosedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosedByUserId");
                OnClosedByUserIdChanged();
            }
        }
        private Nullable<int> _ClosedByUserId;
        partial void OnClosedByUserIdChanging(Nullable<int> value);
        partial void OnClosedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> BlockedDateUtc
        {
            get
            {
                return _BlockedDateUtc;
            }
            set
            {
                OnBlockedDateUtcChanging(value);
                ReportPropertyChanging("BlockedDateUtc");
                _BlockedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlockedDateUtc");
                OnBlockedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _BlockedDateUtc;
        partial void OnBlockedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnBlockedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> BlockedByUserId
        {
            get
            {
                return _BlockedByUserId;
            }
            set
            {
                OnBlockedByUserIdChanging(value);
                ReportPropertyChanging("BlockedByUserId");
                _BlockedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlockedByUserId");
                OnBlockedByUserIdChanged();
            }
        }
        private Nullable<int> _BlockedByUserId;
        partial void OnBlockedByUserIdChanging(Nullable<int> value);
        partial void OnBlockedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string BlockedReason
        {
            get
            {
                return _BlockedReason;
            }
            set
            {
                OnBlockedReasonChanging(value);
                ReportPropertyChanging("BlockedReason");
                _BlockedReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlockedReason");
                OnBlockedReasonChanged();
            }
        }
        private string _BlockedReason;
        partial void OnBlockedReasonChanging(string value);
        partial void OnBlockedReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ApprovedReason
        {
            get
            {
                return _ApprovedReason;
            }
            set
            {
                OnApprovedReasonChanging(value);
                ReportPropertyChanging("ApprovedReason");
                _ApprovedReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApprovedReason");
                OnApprovedReasonChanged();
            }
        }
        private string _ApprovedReason;
        partial void OnApprovedReasonChanging(string value);
        partial void OnApprovedReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short RejectedTimes
        {
            get
            {
                return _RejectedTimes;
            }
            set
            {
                OnRejectedTimesChanging(value);
                ReportPropertyChanging("RejectedTimes");
                _RejectedTimes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RejectedTimes");
                OnRejectedTimesChanged();
            }
        }
        private short _RejectedTimes;
        partial void OnRejectedTimesChanging(short value);
        partial void OnRejectedTimesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyRequests_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyRequests_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyRequests_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyRequests_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_dbo_CompanyRequests_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "PK_dbo_CompanyRequestMessages_CompanyRequest", "CompanyRequestMessage")]
        public EntityCollection<CompanyRequestMessage> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRequestMessage>("NetworksModel.PK_dbo_CompanyRequestMessages_CompanyRequest", "CompanyRequestMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRequestMessage>("NetworksModel.PK_dbo_CompanyRequestMessages_CompanyRequest", "CompanyRequestMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyRequests_ApprovedByUser", "User")]
        public User ClosedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyRequests_ApprovedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyRequests_ApprovedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ClosedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyRequests_ApprovedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_CompanyRequests_ApprovedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyRequests_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_CompanyRequests_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_CompanyRequests_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_CompanyRequests_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_CompanyRequests_Network", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyRequests_BlockedByUser", "User")]
        public User BlockedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyRequests_BlockedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyRequests_BlockedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> BlockedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyRequests_BlockedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_CompanyRequests_BlockedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyRequests_Category", "CompanyCategory")]
        public CompanyCategory CompanyCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyCategory>("NetworksModel.FK_dbo_CompanyRequests_Category", "CompanyCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyCategory>("NetworksModel.FK_dbo_CompanyRequests_Category", "CompanyCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyCategory> CompanyCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyCategory>("NetworksModel.FK_dbo_CompanyRequests_Category", "CompanyCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyCategory>("NetworksModel.FK_dbo_CompanyRequests_Category", "CompanyCategory", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            Alias,
            Website,
            Phone,
            Email,
            Building,
            Floor,
            Access,
            Baseline,
            About,
            EmailDomain,
            CategoryId,
            IndoorId,
            NetworkId,
            AdminEmails,
            OtherEmails,
            UniqueId,
            CreatedDateUtc,
            CompanyId,
            Approved,
            ClosedDateUtc,
            ClosedByUserId,
            BlockedDateUtc,
            BlockedByUserId,
            BlockedReason,
            ApprovedReason,
            RejectedTimes,
        }

        #endregion

    }
    
    /// <summary>
    /// Admin communications around creating a new company profile
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyRequestMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyRequestMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyRequestMessage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyRequestId">Initial value of the CompanyRequestId property.</param>
        /// <param name="dateUtc">Initial value of the DateUtc property.</param>
        /// <param name="isMessageFromCompany">Initial value of the IsMessageFromCompany property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        public static CompanyRequestMessage CreateCompanyRequestMessage(int id, int companyRequestId, System.DateTime dateUtc, bool isMessageFromCompany, string content)
        {
            CompanyRequestMessage companyRequestMessage = new CompanyRequestMessage();
            companyRequestMessage.Id = id;
            companyRequestMessage.CompanyRequestId = companyRequestId;
            companyRequestMessage.DateUtc = dateUtc;
            companyRequestMessage.IsMessageFromCompany = isMessageFromCompany;
            companyRequestMessage.Content = content;
            return companyRequestMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyRequestId
        {
            get
            {
                return _CompanyRequestId;
            }
            set
            {
                OnCompanyRequestIdChanging(value);
                ReportPropertyChanging("CompanyRequestId");
                _CompanyRequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyRequestId");
                OnCompanyRequestIdChanged();
            }
        }
        private int _CompanyRequestId;
        partial void OnCompanyRequestIdChanging(int value);
        partial void OnCompanyRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateUtc
        {
            get
            {
                return _DateUtc;
            }
            set
            {
                OnDateUtcChanging(value);
                ReportPropertyChanging("DateUtc");
                _DateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUtc");
                OnDateUtcChanged();
            }
        }
        private System.DateTime _DateUtc;
        partial void OnDateUtcChanging(System.DateTime value);
        partial void OnDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsMessageFromCompany
        {
            get
            {
                return _IsMessageFromCompany;
            }
            set
            {
                OnIsMessageFromCompanyChanging(value);
                ReportPropertyChanging("IsMessageFromCompany");
                _IsMessageFromCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMessageFromCompany");
                OnIsMessageFromCompanyChanged();
            }
        }
        private bool _IsMessageFromCompany;
        partial void OnIsMessageFromCompanyChanging(bool value);
        partial void OnIsMessageFromCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string NewReplyEmail
        {
            get
            {
                return _NewReplyEmail;
            }
            set
            {
                OnNewReplyEmailChanging(value);
                ReportPropertyChanging("NewReplyEmail");
                _NewReplyEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewReplyEmail");
                OnNewReplyEmailChanged();
            }
        }
        private string _NewReplyEmail;
        partial void OnNewReplyEmailChanging(string value);
        partial void OnNewReplyEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private Nullable<int> _FromUserId;
        partial void OnFromUserIdChanging(Nullable<int> value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FromUserName
        {
            get
            {
                return _FromUserName;
            }
            set
            {
                OnFromUserNameChanging(value);
                ReportPropertyChanging("FromUserName");
                _FromUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FromUserName");
                OnFromUserNameChanged();
            }
        }
        private string _FromUserName;
        partial void OnFromUserNameChanging(string value);
        partial void OnFromUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ToEmailAddress
        {
            get
            {
                return _ToEmailAddress;
            }
            set
            {
                OnToEmailAddressChanging(value);
                ReportPropertyChanging("ToEmailAddress");
                _ToEmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ToEmailAddress");
                OnToEmailAddressChanged();
            }
        }
        private string _ToEmailAddress;
        partial void OnToEmailAddressChanging(string value);
        partial void OnToEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private string _Content;
        partial void OnContentChanging(string value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DisplayDateUtc
        {
            get
            {
                return _DisplayDateUtc;
            }
            set
            {
                OnDisplayDateUtcChanging(value);
                ReportPropertyChanging("DisplayDateUtc");
                _DisplayDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayDateUtc");
                OnDisplayDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DisplayDateUtc;
        partial void OnDisplayDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnDisplayDateUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "PK_dbo_CompanyRequestMessages_CompanyRequest", "CompanyRequest")]
        public CompanyRequest CompanyRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyRequest>("NetworksModel.PK_dbo_CompanyRequestMessages_CompanyRequest", "CompanyRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyRequest>("NetworksModel.PK_dbo_CompanyRequestMessages_CompanyRequest", "CompanyRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyRequest> CompanyRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyRequest>("NetworksModel.PK_dbo_CompanyRequestMessages_CompanyRequest", "CompanyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyRequest>("NetworksModel.PK_dbo_CompanyRequestMessages_CompanyRequest", "CompanyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "PK_dbo_CompanyRequestMessages_FromUser", "User")]
        public User FromUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.PK_dbo_CompanyRequestMessages_FromUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.PK_dbo_CompanyRequestMessages_FromUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FromUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.PK_dbo_CompanyRequestMessages_FromUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.PK_dbo_CompanyRequestMessages_FromUser", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyRequestId,
            DateUtc,
            IsMessageFromCompany,
            NewReplyEmail,
            FromUserId,
            FromUserName,
            ToEmailAddress,
            Content,
            DisplayDateUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanySkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanySkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanySkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="skillId">Initial value of the SkillId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static CompanySkill CreateCompanySkill(int id, int companyId, int skillId, System.DateTime date)
        {
            CompanySkill companySkill = new CompanySkill();
            companySkill.Id = id;
            companySkill.CompanyId = companyId;
            companySkill.SkillId = skillId;
            companySkill.Date = date;
            return companySkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private int _SkillId;
        partial void OnSkillIdChanging(int value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanySkills_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanySkills_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanySkills_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_CompanySkills_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_CompanySkills_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanySkills_Skill", "Skills")]
        public Skill Skill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_CompanySkills_Skill", "Skills").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_CompanySkills_Skill", "Skills").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Skill> SkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_CompanySkills_Skill", "Skills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Skill>("NetworksModel.FK_CompanySkills_Skill", "Skills", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            SkillId,
            Date,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CompanyTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CompanyTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyTag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static CompanyTag CreateCompanyTag(int id, int companyId, int tagId, System.DateTime dateCreatedUtc, int createdByUserId, int sortOrder)
        {
            CompanyTag companyTag = new CompanyTag();
            companyTag.Id = id;
            companyTag.CompanyId = companyId;
            companyTag.TagId = tagId;
            companyTag.DateCreatedUtc = dateCreatedUtc;
            companyTag.CreatedByUserId = createdByUserId;
            companyTag.SortOrder = sortOrder;
            return companyTag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                OnTagIdChanging(value);
                ReportPropertyChanging("TagId");
                _TagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagId");
                OnTagIdChanged();
            }
        }
        private int _TagId;
        partial void OnTagIdChanging(int value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateDeletedUtc
        {
            get
            {
                return _DateDeletedUtc;
            }
            set
            {
                OnDateDeletedUtcChanging(value);
                ReportPropertyChanging("DateDeletedUtc");
                _DateDeletedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeletedUtc");
                OnDateDeletedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateDeletedUtc;
        partial void OnDateDeletedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateDeletedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private int _SortOrder;
        partial void OnSortOrderChanging(int value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyTags_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyTags_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyTags_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_CompanyTags_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_dbo_CompanyTags_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyTags_CreatedByUser", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyTags_CreatedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyTags_CreatedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyTags_CreatedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_CompanyTags_CreatedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyTags_DeletedByUser", "User")]
        public User DeletedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyTags_DeletedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyTags_DeletedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_CompanyTags_DeletedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_CompanyTags_DeletedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyTags_Tags", "TagDefinition")]
        public TagDefinition TagDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_CompanyTags_Tags", "TagDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_CompanyTags_Tags", "TagDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TagDefinition> TagDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_CompanyTags_Tags", "TagDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TagDefinition>("NetworksModel.FK_dbo_CompanyTags_Tags", "TagDefinition", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            TagId,
            DateCreatedUtc,
            CreatedByUserId,
            DateDeletedUtc,
            DeletedByUserId,
            DeleteReason,
            SortOrder,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        public static Contact CreateContact(int userId, int contactId)
        {
            Contact contact = new Contact();
            contact.UserId = userId;
            contact.ContactId = contactId;
            return contact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsDisplayed
        {
            get
            {
                return _IsDisplayed;
            }
            set
            {
                OnIsDisplayedChanging(value);
                ReportPropertyChanging("IsDisplayed");
                _IsDisplayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDisplayed");
                OnIsDisplayedChanged();
            }
        }
        private Nullable<bool> _IsDisplayed;
        partial void OnIsDisplayedChanging(Nullable<bool> value);
        partial void OnIsDisplayedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                if (_ContactId != value)
                {
                    OnContactIdChanging(value);
                    ReportPropertyChanging("ContactId");
                    _ContactId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactId");
                    OnContactIdChanged();
                }
            }
        }
        private int _ContactId;
        partial void OnContactIdChanging(int value);
        partial void OnContactIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Contacts_Contact", "Users")]
        public User UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Contacts_Contact", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Contacts_Contact", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Contacts_Contact", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Contacts_Contact", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Contacts_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Contacts_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Contacts_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Contacts_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Contacts_User", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            IsDisplayed,
            UserId,
            ContactId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="CreateNetworkRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class CreateNetworkRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreateNetworkRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="contactName">Initial value of the ContactName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactPhone">Initial value of the ContactPhone property.</param>
        /// <param name="createdDateUtc">Initial value of the CreatedDateUtc property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="city">Initial value of the City property.</param>
        public static CreateNetworkRequest CreateCreateNetworkRequest(int id, string name, string address, string zipCode, string state, string country, string contactName, string contactEmail, string contactPhone, System.DateTime createdDateUtc, int networkId, string city)
        {
            CreateNetworkRequest createNetworkRequest = new CreateNetworkRequest();
            createNetworkRequest.Id = id;
            createNetworkRequest.Name = name;
            createNetworkRequest.Address = address;
            createNetworkRequest.ZipCode = zipCode;
            createNetworkRequest.State = state;
            createNetworkRequest.Country = country;
            createNetworkRequest.ContactName = contactName;
            createNetworkRequest.ContactEmail = contactEmail;
            createNetworkRequest.ContactPhone = contactPhone;
            createNetworkRequest.CreatedDateUtc = createdDateUtc;
            createNetworkRequest.NetworkId = networkId;
            createNetworkRequest.City = city;
            return createNetworkRequest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private string _Address;
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private string _ZipCode;
        partial void OnZipCodeChanging(string value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private string _State;
        partial void OnStateChanging(string value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private string _Country;
        partial void OnCountryChanging(string value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private string _ContactName;
        partial void OnContactNameChanging(string value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private string _ContactEmail;
        partial void OnContactEmailChanging(string value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string ContactPhone
        {
            get
            {
                return _ContactPhone;
            }
            set
            {
                OnContactPhoneChanging(value);
                ReportPropertyChanging("ContactPhone");
                _ContactPhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactPhone");
                OnContactPhoneChanged();
            }
        }
        private string _ContactPhone;
        partial void OnContactPhoneChanging(string value);
        partial void OnContactPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreatedDateUtc
        {
            get
            {
                return _CreatedDateUtc;
            }
            set
            {
                OnCreatedDateUtcChanging(value);
                ReportPropertyChanging("CreatedDateUtc");
                _CreatedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateUtc");
                OnCreatedDateUtcChanged();
            }
        }
        private System.DateTime _CreatedDateUtc;
        partial void OnCreatedDateUtcChanging(System.DateTime value);
        partial void OnCreatedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private string _Remark;
        partial void OnRemarkChanging(string value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CreateNetworkRequests_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CreateNetworkRequests_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CreateNetworkRequests_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_CreateNetworkRequests_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_CreateNetworkRequests_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            Address,
            ZipCode,
            State,
            Country,
            ContactName,
            ContactEmail,
            ContactPhone,
            CreatedDateUtc,
            Remark,
            NetworkId,
            City,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        /// <param name="firstStartDateUtc">Initial value of the FirstStartDateUtc property.</param>
        /// <param name="lastActivityDateUtc">Initial value of the LastActivityDateUtc property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static Device CreateDevice(int id, System.Guid deviceId, System.DateTime firstStartDateUtc, System.DateTime lastActivityDateUtc, string version, int networkId)
        {
            Device device = new Device();
            device.Id = id;
            device.DeviceId = deviceId;
            device.FirstStartDateUtc = firstStartDateUtc;
            device.LastActivityDateUtc = lastActivityDateUtc;
            device.Version = version;
            device.NetworkId = networkId;
            return device;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private System.Guid _DeviceId;
        partial void OnDeviceIdChanging(System.Guid value);
        partial void OnDeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime FirstStartDateUtc
        {
            get
            {
                return _FirstStartDateUtc;
            }
            set
            {
                OnFirstStartDateUtcChanging(value);
                ReportPropertyChanging("FirstStartDateUtc");
                _FirstStartDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstStartDateUtc");
                OnFirstStartDateUtcChanged();
            }
        }
        private System.DateTime _FirstStartDateUtc;
        partial void OnFirstStartDateUtcChanging(System.DateTime value);
        partial void OnFirstStartDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime LastActivityDateUtc
        {
            get
            {
                return _LastActivityDateUtc;
            }
            set
            {
                OnLastActivityDateUtcChanging(value);
                ReportPropertyChanging("LastActivityDateUtc");
                _LastActivityDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDateUtc");
                OnLastActivityDateUtcChanged();
            }
        }
        private System.DateTime _LastActivityDateUtc;
        partial void OnLastActivityDateUtcChanging(System.DateTime value);
        partial void OnLastActivityDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private string _Version;
        partial void OnVersionChanging(string value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private string _Type;
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DefaultLayout
        {
            get
            {
                return _DefaultLayout;
            }
            set
            {
                OnDefaultLayoutChanging(value);
                ReportPropertyChanging("DefaultLayout");
                _DefaultLayout = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultLayout");
                OnDefaultLayoutChanged();
            }
        }
        private string _DefaultLayout;
        partial void OnDefaultLayoutChanging(string value);
        partial void OnDefaultLayoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DefaultLayoutData
        {
            get
            {
                return _DefaultLayoutData;
            }
            set
            {
                OnDefaultLayoutDataChanging(value);
                ReportPropertyChanging("DefaultLayoutData");
                _DefaultLayoutData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultLayoutData");
                OnDefaultLayoutDataChanged();
            }
        }
        private string _DefaultLayoutData;
        partial void OnDefaultLayoutDataChanging(string value);
        partial void OnDefaultLayoutDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                OnPlaceIdChanging(value);
                ReportPropertyChanging("PlaceId");
                _PlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceId");
                OnPlaceIdChanged();
            }
        }
        private Nullable<int> _PlaceId;
        partial void OnPlaceIdChanging(Nullable<int> value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_DevicePlanning_DeviceId", "DevicePlanning")]
        public EntityCollection<DevicePlanning> DevicePlannings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DevicePlanning>("NetworksModel.FK_DevicePlanning_DeviceId", "DevicePlanning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DevicePlanning>("NetworksModel.FK_DevicePlanning_DeviceId", "DevicePlanning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Devices_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Devices_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Devices_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Devices_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Devices_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            DeviceId,
            Name,
            FirstStartDateUtc,
            LastActivityDateUtc,
            Version,
            Type,
            DefaultLayout,
            DefaultLayoutData,
            PlaceId,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="DeviceConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class DeviceConfiguration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeviceConfiguration object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static DeviceConfiguration CreateDeviceConfiguration(int id, string key, string value, int networkId)
        {
            DeviceConfiguration deviceConfiguration = new DeviceConfiguration();
            deviceConfiguration.Id = id;
            deviceConfiguration.Key = key;
            deviceConfiguration.Value = value;
            deviceConfiguration.NetworkId = networkId;
            return deviceConfiguration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private string _Key;
        partial void OnKeyChanging(string value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private string _Value;
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_DeviceConfiguration_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_DeviceConfiguration_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_DeviceConfiguration_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_DeviceConfiguration_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_DeviceConfiguration_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Key,
            Value,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="DevicePlanning")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class DevicePlanning : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DevicePlanning object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        /// <param name="layoutType">Initial value of the LayoutType property.</param>
        /// <param name="dateStartUtc">Initial value of the DateStartUtc property.</param>
        /// <param name="dateEndUtc">Initial value of the DateEndUtc property.</param>
        /// <param name="dateUpdatedUtc">Initial value of the DateUpdatedUtc property.</param>
        public static DevicePlanning CreateDevicePlanning(int id, int deviceId, string layoutType, System.DateTime dateStartUtc, System.DateTime dateEndUtc, System.DateTime dateUpdatedUtc)
        {
            DevicePlanning devicePlanning = new DevicePlanning();
            devicePlanning.Id = id;
            devicePlanning.DeviceId = deviceId;
            devicePlanning.LayoutType = layoutType;
            devicePlanning.DateStartUtc = dateStartUtc;
            devicePlanning.DateEndUtc = dateEndUtc;
            devicePlanning.DateUpdatedUtc = dateUpdatedUtc;
            return devicePlanning;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private int _DeviceId;
        partial void OnDeviceIdChanging(int value);
        partial void OnDeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string LayoutType
        {
            get
            {
                return _LayoutType;
            }
            set
            {
                OnLayoutTypeChanging(value);
                ReportPropertyChanging("LayoutType");
                _LayoutType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LayoutType");
                OnLayoutTypeChanged();
            }
        }
        private string _LayoutType;
        partial void OnLayoutTypeChanging(string value);
        partial void OnLayoutTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string LayoutData
        {
            get
            {
                return _LayoutData;
            }
            set
            {
                OnLayoutDataChanging(value);
                ReportPropertyChanging("LayoutData");
                _LayoutData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LayoutData");
                OnLayoutDataChanged();
            }
        }
        private string _LayoutData;
        partial void OnLayoutDataChanging(string value);
        partial void OnLayoutDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateStartUtc
        {
            get
            {
                return _DateStartUtc;
            }
            set
            {
                OnDateStartUtcChanging(value);
                ReportPropertyChanging("DateStartUtc");
                _DateStartUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStartUtc");
                OnDateStartUtcChanged();
            }
        }
        private System.DateTime _DateStartUtc;
        partial void OnDateStartUtcChanging(System.DateTime value);
        partial void OnDateStartUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateEndUtc
        {
            get
            {
                return _DateEndUtc;
            }
            set
            {
                OnDateEndUtcChanging(value);
                ReportPropertyChanging("DateEndUtc");
                _DateEndUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEndUtc");
                OnDateEndUtcChanged();
            }
        }
        private System.DateTime _DateEndUtc;
        partial void OnDateEndUtcChanging(System.DateTime value);
        partial void OnDateEndUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateUpdatedUtc
        {
            get
            {
                return _DateUpdatedUtc;
            }
            set
            {
                OnDateUpdatedUtcChanging(value);
                ReportPropertyChanging("DateUpdatedUtc");
                _DateUpdatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdatedUtc");
                OnDateUpdatedUtcChanged();
            }
        }
        private System.DateTime _DateUpdatedUtc;
        partial void OnDateUpdatedUtcChanging(System.DateTime value);
        partial void OnDateUpdatedUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_DevicePlanning_DeviceId", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("NetworksModel.FK_DevicePlanning_DeviceId", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("NetworksModel.FK_DevicePlanning_DeviceId", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("NetworksModel.FK_DevicePlanning_DeviceId", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("NetworksModel.FK_DevicePlanning_DeviceId", "Device", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            DeviceId,
            LayoutType,
            LayoutData,
            DateStartUtc,
            DateEndUtc,
            DateUpdatedUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// Log of sent emails
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="EmailMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class EmailMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailMessage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateSentUtc">Initial value of the DateSentUtc property.</param>
        /// <param name="providerName">Initial value of the ProviderName property.</param>
        /// <param name="sendErrors">Initial value of the SendErrors property.</param>
        /// <param name="sendSucceed">Initial value of the SendSucceed property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static EmailMessage CreateEmailMessage(int id, System.DateTime dateSentUtc, string providerName, short sendErrors, bool sendSucceed, int networkId)
        {
            EmailMessage emailMessage = new EmailMessage();
            emailMessage.Id = id;
            emailMessage.DateSentUtc = dateSentUtc;
            emailMessage.ProviderName = providerName;
            emailMessage.SendErrors = sendErrors;
            emailMessage.SendSucceed = sendSucceed;
            emailMessage.NetworkId = networkId;
            return emailMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<int> _UserId;
        partial void OnUserIdChanging(Nullable<int> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateSentUtc
        {
            get
            {
                return _DateSentUtc;
            }
            set
            {
                OnDateSentUtcChanging(value);
                ReportPropertyChanging("DateSentUtc");
                _DateSentUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSentUtc");
                OnDateSentUtcChanged();
            }
        }
        private System.DateTime _DateSentUtc;
        partial void OnDateSentUtcChanging(System.DateTime value);
        partial void OnDateSentUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string ProviderName
        {
            get
            {
                return _ProviderName;
            }
            set
            {
                OnProviderNameChanging(value);
                ReportPropertyChanging("ProviderName");
                _ProviderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProviderName");
                OnProviderNameChanged();
            }
        }
        private string _ProviderName;
        partial void OnProviderNameChanging(string value);
        partial void OnProviderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ProviderId
        {
            get
            {
                return _ProviderId;
            }
            set
            {
                OnProviderIdChanging(value);
                ReportPropertyChanging("ProviderId");
                _ProviderId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProviderId");
                OnProviderIdChanged();
            }
        }
        private string _ProviderId;
        partial void OnProviderIdChanging(string value);
        partial void OnProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> ProviderDeliveryConfirmation
        {
            get
            {
                return _ProviderDeliveryConfirmation;
            }
            set
            {
                OnProviderDeliveryConfirmationChanging(value);
                ReportPropertyChanging("ProviderDeliveryConfirmation");
                _ProviderDeliveryConfirmation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProviderDeliveryConfirmation");
                OnProviderDeliveryConfirmationChanged();
            }
        }
        private Nullable<bool> _ProviderDeliveryConfirmation;
        partial void OnProviderDeliveryConfirmationChanging(Nullable<bool> value);
        partial void OnProviderDeliveryConfirmationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short SendErrors
        {
            get
            {
                return _SendErrors;
            }
            set
            {
                OnSendErrorsChanging(value);
                ReportPropertyChanging("SendErrors");
                _SendErrors = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendErrors");
                OnSendErrorsChanged();
            }
        }
        private short _SendErrors;
        partial void OnSendErrorsChanging(short value);
        partial void OnSendErrorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool SendSucceed
        {
            get
            {
                return _SendSucceed;
            }
            set
            {
                OnSendSucceedChanging(value);
                ReportPropertyChanging("SendSucceed");
                _SendSucceed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendSucceed");
                OnSendSucceedChanged();
            }
        }
        private bool _SendSucceed;
        partial void OnSendSucceedChanging(bool value);
        partial void OnSendSucceedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string LastSendError
        {
            get
            {
                return _LastSendError;
            }
            set
            {
                OnLastSendErrorChanging(value);
                ReportPropertyChanging("LastSendError");
                _LastSendError = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastSendError");
                OnLastSendErrorChanged();
            }
        }
        private string _LastSendError;
        partial void OnLastSendErrorChanging(string value);
        partial void OnLastSendErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> FirstBounceCode
        {
            get
            {
                return _FirstBounceCode;
            }
            set
            {
                OnFirstBounceCodeChanging(value);
                ReportPropertyChanging("FirstBounceCode");
                _FirstBounceCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstBounceCode");
                OnFirstBounceCodeChanged();
            }
        }
        private Nullable<int> _FirstBounceCode;
        partial void OnFirstBounceCodeChanging(Nullable<int> value);
        partial void OnFirstBounceCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> FirstBounceDateUtc
        {
            get
            {
                return _FirstBounceDateUtc;
            }
            set
            {
                OnFirstBounceDateUtcChanging(value);
                ReportPropertyChanging("FirstBounceDateUtc");
                _FirstBounceDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstBounceDateUtc");
                OnFirstBounceDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _FirstBounceDateUtc;
        partial void OnFirstBounceDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnFirstBounceDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> LastBounceCode
        {
            get
            {
                return _LastBounceCode;
            }
            set
            {
                OnLastBounceCodeChanging(value);
                ReportPropertyChanging("LastBounceCode");
                _LastBounceCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastBounceCode");
                OnLastBounceCodeChanged();
            }
        }
        private Nullable<int> _LastBounceCode;
        partial void OnLastBounceCodeChanging(Nullable<int> value);
        partial void OnLastBounceCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> LastBounceDateUtc
        {
            get
            {
                return _LastBounceDateUtc;
            }
            set
            {
                OnLastBounceDateUtcChanging(value);
                ReportPropertyChanging("LastBounceDateUtc");
                _LastBounceDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastBounceDateUtc");
                OnLastBounceDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _LastBounceDateUtc;
        partial void OnLastBounceDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnLastBounceDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Tags
        {
            get
            {
                return _Tags;
            }
            set
            {
                OnTagsChanging(value);
                ReportPropertyChanging("Tags");
                _Tags = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tags");
                OnTagsChanged();
            }
        }
        private string _Tags;
        partial void OnTagsChanging(string value);
        partial void OnTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string EmailSubject
        {
            get
            {
                return _EmailSubject;
            }
            set
            {
                OnEmailSubjectChanging(value);
                ReportPropertyChanging("EmailSubject");
                _EmailSubject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailSubject");
                OnEmailSubjectChanged();
            }
        }
        private string _EmailSubject;
        partial void OnEmailSubjectChanging(string value);
        partial void OnEmailSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string EmailRecipient
        {
            get
            {
                return _EmailRecipient;
            }
            set
            {
                OnEmailRecipientChanging(value);
                ReportPropertyChanging("EmailRecipient");
                _EmailRecipient = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailRecipient");
                OnEmailRecipientChanged();
            }
        }
        private string _EmailRecipient;
        partial void OnEmailRecipientChanging(string value);
        partial void OnEmailRecipientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string EmailSender
        {
            get
            {
                return _EmailSender;
            }
            set
            {
                OnEmailSenderChanging(value);
                ReportPropertyChanging("EmailSender");
                _EmailSender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailSender");
                OnEmailSenderChanged();
            }
        }
        private string _EmailSender;
        partial void OnEmailSenderChanging(string value);
        partial void OnEmailSenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_EmailMessages_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_EmailMessages_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_EmailMessages_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_EmailMessages_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_EmailMessages_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_EmailMessages_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_EmailMessages_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_EmailMessages_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_EmailMessages_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_EmailMessages_Network", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            DateSentUtc,
            ProviderName,
            ProviderId,
            ProviderDeliveryConfirmation,
            SendErrors,
            SendSucceed,
            LastSendError,
            FirstBounceCode,
            FirstBounceDateUtc,
            LastBounceCode,
            LastBounceDateUtc,
            Tags,
            EmailSubject,
            EmailRecipient,
            EmailSender,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventCategoryId">Initial value of the EventCategoryId property.</param>
        /// <param name="visibility">Initial value of the Visibility property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static Event CreateEvent(int id, int eventCategoryId, int visibility, string name, int createdByUserId, int networkId)
        {
            Event @event = new Event();
            @event.Id = id;
            @event.EventCategoryId = eventCategoryId;
            @event.Visibility = visibility;
            @event.Name = name;
            @event.CreatedByUserId = createdByUserId;
            @event.NetworkId = networkId;
            return @event;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int EventCategoryId
        {
            get
            {
                return _EventCategoryId;
            }
            set
            {
                OnEventCategoryIdChanging(value);
                ReportPropertyChanging("EventCategoryId");
                _EventCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventCategoryId");
                OnEventCategoryIdChanged();
            }
        }
        private int _EventCategoryId;
        partial void OnEventCategoryIdChanging(int value);
        partial void OnEventCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Visibility
        {
            get
            {
                return _Visibility;
            }
            set
            {
                OnVisibilityChanging(value);
                ReportPropertyChanging("Visibility");
                _Visibility = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visibility");
                OnVisibilityChanged();
            }
        }
        private int _Visibility;
        partial void OnVisibilityChanging(int value);
        partial void OnVisibilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Picture
        {
            get
            {
                return _Picture;
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private string _Picture;
        partial void OnPictureChanging(string value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateEvent
        {
            get
            {
                return _DateEvent;
            }
            set
            {
                OnDateEventChanging(value);
                ReportPropertyChanging("DateEvent");
                _DateEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEvent");
                OnDateEventChanged();
            }
        }
        private Nullable<System.DateTime> _DateEvent;
        partial void OnDateEventChanging(Nullable<System.DateTime> value);
        partial void OnDateEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateEndEvent
        {
            get
            {
                return _DateEndEvent;
            }
            set
            {
                OnDateEndEventChanging(value);
                ReportPropertyChanging("DateEndEvent");
                _DateEndEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEndEvent");
                OnDateEndEventChanged();
            }
        }
        private Nullable<System.DateTime> _DateEndEvent;
        partial void OnDateEndEventChanging(Nullable<System.DateTime> value);
        partial void OnDateEndEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> NeedAnswerBefore
        {
            get
            {
                return _NeedAnswerBefore;
            }
            set
            {
                OnNeedAnswerBeforeChanging(value);
                ReportPropertyChanging("NeedAnswerBefore");
                _NeedAnswerBefore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedAnswerBefore");
                OnNeedAnswerBeforeChanged();
            }
        }
        private Nullable<System.DateTime> _NeedAnswerBefore;
        partial void OnNeedAnswerBeforeChanging(Nullable<System.DateTime> value);
        partial void OnNeedAnswerBeforeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private string _Website;
        partial void OnWebsiteChanging(string value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                OnPlaceIdChanging(value);
                ReportPropertyChanging("PlaceId");
                _PlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceId");
                OnPlaceIdChanged();
            }
        }
        private Nullable<int> _PlaceId;
        partial void OnPlaceIdChanging(Nullable<int> value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> RecurrenceId
        {
            get
            {
                return _RecurrenceId;
            }
            set
            {
                OnRecurrenceIdChanging(value);
                ReportPropertyChanging("RecurrenceId");
                _RecurrenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecurrenceId");
                OnRecurrenceIdChanged();
            }
        }
        private Nullable<int> _RecurrenceId;
        partial void OnRecurrenceIdChanging(Nullable<int> value);
        partial void OnRecurrenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Room
        {
            get
            {
                return _Room;
            }
            set
            {
                OnRoomChanging(value);
                ReportPropertyChanging("Room");
                _Room = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Room");
                OnRoomChanged();
            }
        }
        private string _Room;
        partial void OnRoomChanging(string value);
        partial void OnRoomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<int> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<int> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<int> _GroupId;
        partial void OnGroupIdChanging(Nullable<int> value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<int> _TeamId;
        partial void OnTeamIdChanging(Nullable<int> value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<int> _ProjectId;
        partial void OnProjectIdChanging(Nullable<int> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Report
        {
            get
            {
                return _Report;
            }
            set
            {
                OnReportChanging(value);
                ReportPropertyChanging("Report");
                _Report = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Report");
                OnReportChanged();
            }
        }
        private string _Report;
        partial void OnReportChanging(string value);
        partial void OnReportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> ReportDate
        {
            get
            {
                return _ReportDate;
            }
            set
            {
                OnReportDateChanging(value);
                ReportPropertyChanging("ReportDate");
                _ReportDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportDate");
                OnReportDateChanged();
            }
        }
        private Nullable<System.DateTime> _ReportDate;
        partial void OnReportDateChanging(Nullable<System.DateTime> value);
        partial void OnReportDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TicketsWebsite
        {
            get
            {
                return _TicketsWebsite;
            }
            set
            {
                OnTicketsWebsiteChanging(value);
                ReportPropertyChanging("TicketsWebsite");
                _TicketsWebsite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TicketsWebsite");
                OnTicketsWebsiteChanged();
            }
        }
        private string _TicketsWebsite;
        partial void OnTicketsWebsiteChanging(string value);
        partial void OnTicketsWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DeleteDateUtc
        {
            get
            {
                return _DeleteDateUtc;
            }
            set
            {
                OnDeleteDateUtcChanging(value);
                ReportPropertyChanging("DeleteDateUtc");
                _DeleteDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteDateUtc");
                OnDeleteDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DeleteDateUtc;
        partial void OnDeleteDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnDeleteDateUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_EventCategories", "EventCategories")]
        public EventCategory EventCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCategory>("NetworksModel.FK_Events_EventCategories", "EventCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCategory>("NetworksModel.FK_Events_EventCategories", "EventCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventCategory> EventCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCategory>("NetworksModel.FK_Events_EventCategories", "EventCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventCategory>("NetworksModel.FK_Events_EventCategories", "EventCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisteredToEvent_eura_Events", "EventMembers")]
        public EntityCollection<EventMember> EventMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventMember>("NetworksModel.FK_RegisteredToEvent_eura_Events", "EventMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventMember>("NetworksModel.FK_RegisteredToEvent_eura_Events", "EventMembers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Events_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Events_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Events_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Events_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_EventTimeline", "TimelineItems")]
        public EntityCollection<TimelineItem> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_EventTimeline", "TimelineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_EventTimeline", "TimelineItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Events_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Events_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Events_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_Events_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_Events_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_Events_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_Events_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("NetworksModel.FK_Events_Group", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_Place", "Place")]
        public Place Place
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_Events_Place", "Place").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_Events_Place", "Place").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Place> PlaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_Events_Place", "Place");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Place>("NetworksModel.FK_Events_Place", "Place", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("NetworksModel.FK_Events_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("NetworksModel.FK_Events_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("NetworksModel.FK_Events_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("NetworksModel.FK_Events_Project", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("NetworksModel.FK_Events_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("NetworksModel.FK_Events_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("NetworksModel.FK_Events_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("NetworksModel.FK_Events_Team", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Events_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Events_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Events_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Events_NetworkId", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_EventPublicMembers_Event", "EventPublicMember")]
        public EntityCollection<EventPublicMember> PublicMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventPublicMember>("NetworksModel.FK_dbo_EventPublicMembers_Event", "EventPublicMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventPublicMember>("NetworksModel.FK_dbo_EventPublicMembers_Event", "EventPublicMember", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            EventCategoryId,
            Visibility,
            Name,
            Description,
            Picture,
            CreateDate,
            DateEvent,
            DateEndEvent,
            NeedAnswerBefore,
            Website,
            PlaceId,
            RecurrenceId,
            Room,
            CompanyId,
            GroupId,
            TeamId,
            ProjectId,
            Report,
            ReportDate,
            CreatedByUserId,
            NetworkId,
            TicketsWebsite,
            DeleteReason,
            DeletedByUserId,
            DeleteDateUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// 
    /// </summary>
    /// <LongDescription>
    /// Maybe we should remove that and use the tags V2 system instead?
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="EventCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class EventCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EventCategory CreateEventCategory(int id, int parentId, string name)
        {
            EventCategory eventCategory = new EventCategory();
            eventCategory.Id = id;
            eventCategory.ParentId = parentId;
            eventCategory.Name = name;
            return eventCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private int _ParentId;
        partial void OnParentIdChanging(int value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private Nullable<int> _NetworkId;
        partial void OnNetworkIdChanging(Nullable<int> value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_EventCategories", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("NetworksModel.FK_Events_EventCategories", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("NetworksModel.FK_Events_EventCategories", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_EventCategories_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_EventCategories_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_EventCategories_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_EventCategories_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_EventCategories_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ParentId,
            Name,
            NetworkId,
            Alias,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="EventMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class EventMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventMember object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static EventMember CreateEventMember(int eventId, int state, int userId)
        {
            EventMember eventMember = new EventMember();
            eventMember.EventId = eventId;
            eventMember.State = state;
            eventMember.UserId = userId;
            return eventMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private int _EventId;
        partial void OnEventIdChanging(int value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private int _State;
        partial void OnStateChanging(int value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Notifications
        {
            get
            {
                return _Notifications;
            }
            set
            {
                OnNotificationsChanging(value);
                ReportPropertyChanging("Notifications");
                _Notifications = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notifications");
                OnNotificationsChanged();
            }
        }
        private Nullable<int> _Notifications;
        partial void OnNotificationsChanging(Nullable<int> value);
        partial void OnNotificationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Rights
        {
            get
            {
                return _Rights;
            }
            set
            {
                OnRightsChanging(value);
                ReportPropertyChanging("Rights");
                _Rights = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rights");
                OnRightsChanged();
            }
        }
        private Nullable<int> _Rights;
        partial void OnRightsChanging(Nullable<int> value);
        partial void OnRightsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private string _Comment;
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateUpdatedUtc
        {
            get
            {
                return _DateUpdatedUtc;
            }
            set
            {
                OnDateUpdatedUtcChanging(value);
                ReportPropertyChanging("DateUpdatedUtc");
                _DateUpdatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdatedUtc");
                OnDateUpdatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateUpdatedUtc;
        partial void OnDateUpdatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateUpdatedUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_EventMembers_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_EventMembers_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_EventMembers_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_EventMembers_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_EventMembers_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisteredToEvent_eura_Events", "Events")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("NetworksModel.FK_RegisteredToEvent_eura_Events", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("NetworksModel.FK_RegisteredToEvent_eura_Events", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("NetworksModel.FK_RegisteredToEvent_eura_Events", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("NetworksModel.FK_RegisteredToEvent_eura_Events", "Events", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            EventId,
            State,
            Notifications,
            Rights,
            Comment,
            UserId,
            DateCreatedUtc,
            DateUpdatedUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="EventPublicMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class EventPublicMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventPublicMember object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static EventPublicMember CreateEventPublicMember(int id, int eventId, int state, string firstName, string lastName, string email)
        {
            EventPublicMember eventPublicMember = new EventPublicMember();
            eventPublicMember.Id = id;
            eventPublicMember.EventId = eventId;
            eventPublicMember.State = state;
            eventPublicMember.FirstName = firstName;
            eventPublicMember.LastName = lastName;
            eventPublicMember.Email = email;
            return eventPublicMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private int _EventId;
        partial void OnEventIdChanging(int value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private int _State;
        partial void OnStateChanging(int value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private string _Email;
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private string _Company;
        partial void OnCompanyChanging(string value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Job
        {
            get
            {
                return _Job;
            }
            set
            {
                OnJobChanging(value);
                ReportPropertyChanging("Job");
                _Job = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Job");
                OnJobChanged();
            }
        }
        private string _Job;
        partial void OnJobChanging(string value);
        partial void OnJobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateUpdatedUtc
        {
            get
            {
                return _DateUpdatedUtc;
            }
            set
            {
                OnDateUpdatedUtcChanging(value);
                ReportPropertyChanging("DateUpdatedUtc");
                _DateUpdatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdatedUtc");
                OnDateUpdatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateUpdatedUtc;
        partial void OnDateUpdatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateUpdatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string RemoteAddress
        {
            get
            {
                return _RemoteAddress;
            }
            set
            {
                OnRemoteAddressChanging(value);
                ReportPropertyChanging("RemoteAddress");
                _RemoteAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RemoteAddress");
                OnRemoteAddressChanged();
            }
        }
        private string _RemoteAddress;
        partial void OnRemoteAddressChanging(string value);
        partial void OnRemoteAddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_EventPublicMembers_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("NetworksModel.FK_dbo_EventPublicMembers_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("NetworksModel.FK_dbo_EventPublicMembers_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("NetworksModel.FK_dbo_EventPublicMembers_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("NetworksModel.FK_dbo_EventPublicMembers_Event", "Event", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            EventId,
            State,
            FirstName,
            LastName,
            Email,
            Company,
            Job,
            Phone,
            DateCreatedUtc,
            DateUpdatedUtc,
            RemoteAddress,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Use the Ads instead.
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Use the Ads instead.
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ExchangeMaterial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ExchangeMaterial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExchangeMaterial object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static ExchangeMaterial CreateExchangeMaterial(int id, int companyId, System.DateTime date, string title, string description, byte type, byte status, int createdByUserId, int networkId)
        {
            ExchangeMaterial exchangeMaterial = new ExchangeMaterial();
            exchangeMaterial.Id = id;
            exchangeMaterial.CompanyId = companyId;
            exchangeMaterial.Date = date;
            exchangeMaterial.Title = title;
            exchangeMaterial.Description = description;
            exchangeMaterial.Type = type;
            exchangeMaterial.Status = status;
            exchangeMaterial.CreatedByUserId = createdByUserId;
            exchangeMaterial.NetworkId = networkId;
            return exchangeMaterial;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private byte _Type;
        partial void OnTypeChanging(byte value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private byte _Status;
        partial void OnStatusChanging(byte value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeMaterials_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_ExchangeMaterials_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_ExchangeMaterials_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_ExchangeMaterials_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_ExchangeMaterials_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeMaterials_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ExchangeMaterials_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ExchangeMaterials_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ExchangeMaterials_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_ExchangeMaterials_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeMaterials_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_ExchangeMaterials_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_ExchangeMaterials_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_ExchangeMaterials_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_ExchangeMaterials_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            Date,
            Title,
            Description,
            Type,
            Status,
            CreatedByUserId,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Use the Ads instead.
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Use the Ads instead.
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ExchangeSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ExchangeSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExchangeSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="skillId">Initial value of the SkillId property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static ExchangeSkill CreateExchangeSkill(int id, int companyId, System.DateTime date, int skillId, byte type, string title, string description, byte status, int createdByUserId, int networkId)
        {
            ExchangeSkill exchangeSkill = new ExchangeSkill();
            exchangeSkill.Id = id;
            exchangeSkill.CompanyId = companyId;
            exchangeSkill.Date = date;
            exchangeSkill.SkillId = skillId;
            exchangeSkill.Type = type;
            exchangeSkill.Title = title;
            exchangeSkill.Description = description;
            exchangeSkill.Status = status;
            exchangeSkill.CreatedByUserId = createdByUserId;
            exchangeSkill.NetworkId = networkId;
            return exchangeSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private int _SkillId;
        partial void OnSkillIdChanging(int value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private byte _Type;
        partial void OnTypeChanging(byte value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private byte _Status;
        partial void OnStatusChanging(byte value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSkills_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_ExchangeSkills_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_ExchangeSkills_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_ExchangeSkills_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_ExchangeSkills_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSkills_CreatedBy", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ExchangeSkills_CreatedBy", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ExchangeSkills_CreatedBy", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ExchangeSkills_CreatedBy", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_ExchangeSkills_CreatedBy", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSkills_Skill", "Skills")]
        public Skill Skill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_ExchangeSkills_Skill", "Skills").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_ExchangeSkills_Skill", "Skills").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Skill> SkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_ExchangeSkills_Skill", "Skills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Skill>("NetworksModel.FK_ExchangeSkills_Skill", "Skills", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSkills_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_ExchangeSkills_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_ExchangeSkills_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_ExchangeSkills_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_ExchangeSkills_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            Date,
            SkillId,
            Type,
            Title,
            Description,
            Status,
            CreatedByUserId,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Use the Ads instead.
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Use the Ads instead.
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ExchangeSurface")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ExchangeSurface : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExchangeSurface object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="area">Initial value of the Area property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static ExchangeSurface CreateExchangeSurface(int id, int companyId, System.DateTime date, byte status, byte type, int area, string title, string description, int createdByUserId, int networkId)
        {
            ExchangeSurface exchangeSurface = new ExchangeSurface();
            exchangeSurface.Id = id;
            exchangeSurface.CompanyId = companyId;
            exchangeSurface.Date = date;
            exchangeSurface.Status = status;
            exchangeSurface.Type = type;
            exchangeSurface.Area = area;
            exchangeSurface.Title = title;
            exchangeSurface.Description = description;
            exchangeSurface.CreatedByUserId = createdByUserId;
            exchangeSurface.NetworkId = networkId;
            return exchangeSurface;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private byte _Status;
        partial void OnStatusChanging(byte value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private byte _Type;
        partial void OnTypeChanging(byte value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private int _Area;
        partial void OnAreaChanging(int value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSurfaces_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_ExchangeSurfaces_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_ExchangeSurfaces_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_ExchangeSurfaces_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_ExchangeSurfaces_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSurfaces_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ExchangeSurfaces_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ExchangeSurfaces_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ExchangeSurfaces_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_ExchangeSurfaces_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSurfaces_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_ExchangeSurfaces_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_ExchangeSurfaces_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_ExchangeSurfaces_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_ExchangeSurfaces_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            Date,
            Status,
            Type,
            Area,
            Title,
            Description,
            CreatedByUserId,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupCategoryId">Initial value of the GroupCategoryId property.</param>
        /// <param name="isPrivate">Initial value of the IsPrivate property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="notificationFrequency">Initial value of the NotificationFrequency property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Group CreateGroup(int id, int groupCategoryId, bool isPrivate, string name, string description, System.DateTime date, byte notificationFrequency, int createdByUserId, int networkId, bool isDeleted)
        {
            Group group = new Group();
            group.Id = id;
            group.GroupCategoryId = groupCategoryId;
            group.IsPrivate = isPrivate;
            group.Name = name;
            group.Description = description;
            group.Date = date;
            group.NotificationFrequency = notificationFrequency;
            group.CreatedByUserId = createdByUserId;
            group.NetworkId = networkId;
            group.IsDeleted = isDeleted;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int GroupCategoryId
        {
            get
            {
                return _GroupCategoryId;
            }
            set
            {
                OnGroupCategoryIdChanging(value);
                ReportPropertyChanging("GroupCategoryId");
                _GroupCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupCategoryId");
                OnGroupCategoryIdChanged();
            }
        }
        private int _GroupCategoryId;
        partial void OnGroupCategoryIdChanging(int value);
        partial void OnGroupCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsPrivate
        {
            get
            {
                return _IsPrivate;
            }
            set
            {
                OnIsPrivateChanging(value);
                ReportPropertyChanging("IsPrivate");
                _IsPrivate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrivate");
                OnIsPrivateChanged();
            }
        }
        private bool _IsPrivate;
        partial void OnIsPrivateChanging(bool value);
        partial void OnIsPrivateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte NotificationFrequency
        {
            get
            {
                return _NotificationFrequency;
            }
            set
            {
                OnNotificationFrequencyChanging(value);
                ReportPropertyChanging("NotificationFrequency");
                _NotificationFrequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotificationFrequency");
                OnNotificationFrequencyChanged();
            }
        }
        private byte _NotificationFrequency;
        partial void OnNotificationFrequencyChanging(byte value);
        partial void OnNotificationFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ImportedId
        {
            get
            {
                return _ImportedId;
            }
            set
            {
                OnImportedIdChanging(value);
                ReportPropertyChanging("ImportedId");
                _ImportedId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportedId");
                OnImportedIdChanged();
            }
        }
        private string _ImportedId;
        partial void OnImportedIdChanging(string value);
        partial void OnImportedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private bool _IsDeleted;
        partial void OnIsDeletedChanging(bool value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Groups_Group", "GroupCategories")]
        public GroupCategory GroupCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("NetworksModel.FK_Groups_Group", "GroupCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("NetworksModel.FK_Groups_Group", "GroupCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupCategory> GroupCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("NetworksModel.FK_Groups_Group", "GroupCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupCategory>("NetworksModel.FK_Groups_Group", "GroupCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupsMembers_Group", "GroupMembers")]
        public EntityCollection<GroupMember> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupMember>("NetworksModel.FK_GroupsMembers_Group", "GroupMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupMember>("NetworksModel.FK_GroupsMembers_Group", "GroupMembers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Groups_CreatedBy", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Groups_CreatedBy", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Groups_CreatedBy", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Groups_CreatedBy", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Groups_CreatedBy", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_GroupTimeline", "TimelineItems")]
        public EntityCollection<TimelineItem> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_GroupTimeline", "TimelineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_GroupTimeline", "TimelineItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_Group", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("NetworksModel.FK_Events_Group", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("NetworksModel.FK_Events_Group", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Groups_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Groups_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Groups_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Groups_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Groups_NetworkId", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupSkills_Groups", "GroupSkill")]
        public EntityCollection<GroupSkill> Skills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupSkill>("NetworksModel.FK_GroupSkills_Groups", "GroupSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupSkill>("NetworksModel.FK_GroupSkills_Groups", "GroupSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupInterests_Group", "GroupInterest")]
        public EntityCollection<GroupInterest> Interests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupInterest>("NetworksModel.FK_dbo_GroupInterests_Group", "GroupInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupInterest>("NetworksModel.FK_dbo_GroupInterests_Group", "GroupInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupRecreations_Group", "GroupRecreation")]
        public EntityCollection<GroupRecreation> Recreations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupRecreation>("NetworksModel.FK_dbo_GroupRecreations_Group", "GroupRecreation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupRecreation>("NetworksModel.FK_dbo_GroupRecreations_Group", "GroupRecreation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupTags_Relation", "GroupTag")]
        public EntityCollection<GroupTag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupTag>("NetworksModel.FK_dbo_GroupTags_Relation", "GroupTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupTag>("NetworksModel.FK_dbo_GroupTags_Relation", "GroupTag", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            GroupCategoryId,
            IsPrivate,
            Name,
            Description,
            Date,
            NotificationFrequency,
            CreatedByUserId,
            NetworkId,
            ImportedId,
            IsDeleted,
            Alias,
        }

        #endregion

    }
    
    /// <summary>
    /// 
    /// </summary>
    /// <LongDescription>
    /// Maybe we should remove that and use the tags V2 system instead?
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="GroupCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class GroupCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static GroupCategory CreateGroupCategory(int id, int parentId, string name)
        {
            GroupCategory groupCategory = new GroupCategory();
            groupCategory.Id = id;
            groupCategory.ParentId = parentId;
            groupCategory.Name = name;
            return groupCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private int _ParentId;
        partial void OnParentIdChanging(int value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupCategories_ParentCategory", "GroupCategories1")]
        public GroupCategory GroupCategories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("NetworksModel.FK_GroupCategories_ParentCategory", "GroupCategories1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("NetworksModel.FK_GroupCategories_ParentCategory", "GroupCategories1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupCategory> GroupCategories1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("NetworksModel.FK_GroupCategories_ParentCategory", "GroupCategories1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupCategory>("NetworksModel.FK_GroupCategories_ParentCategory", "GroupCategories1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupCategories_ParentCategory", "GroupCategories")]
        public GroupCategory GroupCategory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("NetworksModel.FK_GroupCategories_ParentCategory", "GroupCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("NetworksModel.FK_GroupCategories_ParentCategory", "GroupCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupCategory> GroupCategory1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("NetworksModel.FK_GroupCategories_ParentCategory", "GroupCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupCategory>("NetworksModel.FK_GroupCategories_ParentCategory", "GroupCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Groups_Group", "Groups")]
        public EntityCollection<Group> Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("NetworksModel.FK_Groups_Group", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("NetworksModel.FK_Groups_Group", "Groups", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ParentId,
            Name,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="GroupInterest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class GroupInterest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupInterest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="interestId">Initial value of the InterestId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static GroupInterest CreateGroupInterest(int id, int groupId, int interestId, System.DateTime dateCreatedUtc, int createdByUserId)
        {
            GroupInterest groupInterest = new GroupInterest();
            groupInterest.Id = id;
            groupInterest.GroupId = groupId;
            groupInterest.InterestId = interestId;
            groupInterest.DateCreatedUtc = dateCreatedUtc;
            groupInterest.CreatedByUserId = createdByUserId;
            return groupInterest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private int _GroupId;
        partial void OnGroupIdChanging(int value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int InterestId
        {
            get
            {
                return _InterestId;
            }
            set
            {
                OnInterestIdChanging(value);
                ReportPropertyChanging("InterestId");
                _InterestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InterestId");
                OnInterestIdChanged();
            }
        }
        private int _InterestId;
        partial void OnInterestIdChanging(int value);
        partial void OnInterestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DeletedDateUtc
        {
            get
            {
                return _DeletedDateUtc;
            }
            set
            {
                OnDeletedDateUtcChanging(value);
                ReportPropertyChanging("DeletedDateUtc");
                _DeletedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDateUtc");
                OnDeletedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DeletedDateUtc;
        partial void OnDeletedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnDeletedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupInterests_CreatedBy", "User")]
        public User CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupInterests_CreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupInterests_CreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupInterests_CreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_GroupInterests_CreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupInterests_DeletedBy", "User")]
        public User DeletedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupInterests_DeletedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupInterests_DeletedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupInterests_DeletedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_GroupInterests_DeletedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupInterests_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_dbo_GroupInterests_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_dbo_GroupInterests_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_dbo_GroupInterests_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("NetworksModel.FK_dbo_GroupInterests_Group", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupInterests_Skill", "Interest")]
        public Interest Interest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Interest>("NetworksModel.FK_dbo_GroupInterests_Skill", "Interest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Interest>("NetworksModel.FK_dbo_GroupInterests_Skill", "Interest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Interest> InterestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Interest>("NetworksModel.FK_dbo_GroupInterests_Skill", "Interest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Interest>("NetworksModel.FK_dbo_GroupInterests_Skill", "Interest", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            GroupId,
            InterestId,
            DateCreatedUtc,
            CreatedByUserId,
            DeletedDateUtc,
            DeletedByUserId,
            DeleteReason,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="GroupMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class GroupMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupMember object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="accepted">Initial value of the Accepted property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static GroupMember CreateGroupMember(int id, int groupId, short accepted, int userId)
        {
            GroupMember groupMember = new GroupMember();
            groupMember.Id = id;
            groupMember.GroupId = groupId;
            groupMember.Accepted = accepted;
            groupMember.UserId = userId;
            return groupMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private int _GroupId;
        partial void OnGroupIdChanging(int value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short Accepted
        {
            get
            {
                return _Accepted;
            }
            set
            {
                OnAcceptedChanging(value);
                ReportPropertyChanging("Accepted");
                _Accepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Accepted");
                OnAcceptedChanged();
            }
        }
        private short _Accepted;
        partial void OnAcceptedChanging(short value);
        partial void OnAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Notifications
        {
            get
            {
                return _Notifications;
            }
            set
            {
                OnNotificationsChanging(value);
                ReportPropertyChanging("Notifications");
                _Notifications = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notifications");
                OnNotificationsChanged();
            }
        }
        private Nullable<int> _Notifications;
        partial void OnNotificationsChanging(Nullable<int> value);
        partial void OnNotificationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Rights
        {
            get
            {
                return _Rights;
            }
            set
            {
                OnRightsChanging(value);
                ReportPropertyChanging("Rights");
                _Rights = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rights");
                OnRightsChanged();
            }
        }
        private Nullable<int> _Rights;
        partial void OnRightsChanging(Nullable<int> value);
        partial void OnRightsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> NotificationFrequency
        {
            get
            {
                return _NotificationFrequency;
            }
            set
            {
                OnNotificationFrequencyChanging(value);
                ReportPropertyChanging("NotificationFrequency");
                _NotificationFrequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotificationFrequency");
                OnNotificationFrequencyChanged();
            }
        }
        private Nullable<byte> _NotificationFrequency;
        partial void OnNotificationFrequencyChanging(Nullable<byte> value);
        partial void OnNotificationFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> InvitedByUserId
        {
            get
            {
                return _InvitedByUserId;
            }
            set
            {
                OnInvitedByUserIdChanging(value);
                ReportPropertyChanging("InvitedByUserId");
                _InvitedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitedByUserId");
                OnInvitedByUserIdChanged();
            }
        }
        private Nullable<int> _InvitedByUserId;
        partial void OnInvitedByUserIdChanging(Nullable<int> value);
        partial void OnInvitedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateAcceptedUtc
        {
            get
            {
                return _DateAcceptedUtc;
            }
            set
            {
                OnDateAcceptedUtcChanging(value);
                ReportPropertyChanging("DateAcceptedUtc");
                _DateAcceptedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAcceptedUtc");
                OnDateAcceptedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateAcceptedUtc;
        partial void OnDateAcceptedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateAcceptedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AcceptedByUserId
        {
            get
            {
                return _AcceptedByUserId;
            }
            set
            {
                OnAcceptedByUserIdChanging(value);
                ReportPropertyChanging("AcceptedByUserId");
                _AcceptedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedByUserId");
                OnAcceptedByUserIdChanged();
            }
        }
        private Nullable<int> _AcceptedByUserId;
        partial void OnAcceptedByUserIdChanging(Nullable<int> value);
        partial void OnAcceptedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateJoined
        {
            get
            {
                return _DateJoined;
            }
            set
            {
                OnDateJoinedChanging(value);
                ReportPropertyChanging("DateJoined");
                _DateJoined = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateJoined");
                OnDateJoinedChanged();
            }
        }
        private Nullable<System.DateTime> _DateJoined;
        partial void OnDateJoinedChanging(Nullable<System.DateTime> value);
        partial void OnDateJoinedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateInvitedUtc
        {
            get
            {
                return _DateInvitedUtc;
            }
            set
            {
                OnDateInvitedUtcChanging(value);
                ReportPropertyChanging("DateInvitedUtc");
                _DateInvitedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInvitedUtc");
                OnDateInvitedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateInvitedUtc;
        partial void OnDateInvitedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateInvitedUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupMembers_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_GroupMembers_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_GroupMembers_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_GroupMembers_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_GroupMembers_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupsMembers_Group", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_GroupsMembers_Group", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_GroupsMembers_Group", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_GroupsMembers_Group", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("NetworksModel.FK_GroupsMembers_Group", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupsMembers_AcceptedBy", "User")]
        public User AcceptedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_GroupsMembers_AcceptedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_GroupsMembers_AcceptedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> AcceptedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_GroupsMembers_AcceptedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_GroupsMembers_AcceptedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupsMembers_InvitedBy", "User")]
        public User InvitedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_GroupsMembers_InvitedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_GroupsMembers_InvitedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> InvitedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_GroupsMembers_InvitedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_GroupsMembers_InvitedBy", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            GroupId,
            Accepted,
            Notifications,
            Rights,
            NotificationFrequency,
            UserId,
            InvitedByUserId,
            DateAcceptedUtc,
            AcceptedByUserId,
            DateJoined,
            DateInvitedUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="GroupRecreation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class GroupRecreation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupRecreation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="recreationId">Initial value of the RecreationId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static GroupRecreation CreateGroupRecreation(int id, int groupId, int recreationId, System.DateTime dateCreatedUtc, int createdByUserId)
        {
            GroupRecreation groupRecreation = new GroupRecreation();
            groupRecreation.Id = id;
            groupRecreation.GroupId = groupId;
            groupRecreation.RecreationId = recreationId;
            groupRecreation.DateCreatedUtc = dateCreatedUtc;
            groupRecreation.CreatedByUserId = createdByUserId;
            return groupRecreation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private int _GroupId;
        partial void OnGroupIdChanging(int value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int RecreationId
        {
            get
            {
                return _RecreationId;
            }
            set
            {
                OnRecreationIdChanging(value);
                ReportPropertyChanging("RecreationId");
                _RecreationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecreationId");
                OnRecreationIdChanged();
            }
        }
        private int _RecreationId;
        partial void OnRecreationIdChanging(int value);
        partial void OnRecreationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DeletedDateUtc
        {
            get
            {
                return _DeletedDateUtc;
            }
            set
            {
                OnDeletedDateUtcChanging(value);
                ReportPropertyChanging("DeletedDateUtc");
                _DeletedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDateUtc");
                OnDeletedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DeletedDateUtc;
        partial void OnDeletedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnDeletedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupRecreations_CreatedBy", "User")]
        public User CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupRecreations_CreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupRecreations_CreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupRecreations_CreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_GroupRecreations_CreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupRecreations_DeletedBy", "User")]
        public User DeletedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupRecreations_DeletedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupRecreations_DeletedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupRecreations_DeletedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_GroupRecreations_DeletedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupRecreations_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_dbo_GroupRecreations_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_dbo_GroupRecreations_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_dbo_GroupRecreations_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("NetworksModel.FK_dbo_GroupRecreations_Group", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupRecreations_Skill", "Recreation")]
        public Recreation Recreation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recreation>("NetworksModel.FK_dbo_GroupRecreations_Skill", "Recreation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recreation>("NetworksModel.FK_dbo_GroupRecreations_Skill", "Recreation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recreation> RecreationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recreation>("NetworksModel.FK_dbo_GroupRecreations_Skill", "Recreation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recreation>("NetworksModel.FK_dbo_GroupRecreations_Skill", "Recreation", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            GroupId,
            RecreationId,
            DateCreatedUtc,
            CreatedByUserId,
            DeletedDateUtc,
            DeletedByUserId,
            DeleteReason,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="GroupSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class GroupSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="skillId">Initial value of the SkillId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static GroupSkill CreateGroupSkill(int id, int groupId, int skillId, System.DateTime dateCreatedUtc, int createdByUserId)
        {
            GroupSkill groupSkill = new GroupSkill();
            groupSkill.Id = id;
            groupSkill.GroupId = groupId;
            groupSkill.SkillId = skillId;
            groupSkill.DateCreatedUtc = dateCreatedUtc;
            groupSkill.CreatedByUserId = createdByUserId;
            return groupSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private int _GroupId;
        partial void OnGroupIdChanging(int value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private int _SkillId;
        partial void OnSkillIdChanging(int value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DeletedDateUtc
        {
            get
            {
                return _DeletedDateUtc;
            }
            set
            {
                OnDeletedDateUtcChanging(value);
                ReportPropertyChanging("DeletedDateUtc");
                _DeletedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDateUtc");
                OnDeletedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DeletedDateUtc;
        partial void OnDeletedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnDeletedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupSkills_Groups", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_GroupSkills_Groups", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_GroupSkills_Groups", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_GroupSkills_Groups", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("NetworksModel.FK_GroupSkills_Groups", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupSkills_Skills", "Skill")]
        public Skill Skill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_GroupSkills_Skills", "Skill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_GroupSkills_Skills", "Skill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Skill> SkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_GroupSkills_Skills", "Skill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Skill>("NetworksModel.FK_GroupSkills_Skills", "Skill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupSkills_CreatedBy", "User")]
        public User CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupSkills_CreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupSkills_CreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupSkills_CreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_GroupSkills_CreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupSkills_DeletedBy", "User")]
        public User DeletedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupSkills_DeletedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupSkills_DeletedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupSkills_DeletedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_GroupSkills_DeletedBy", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            GroupId,
            SkillId,
            DateCreatedUtc,
            CreatedByUserId,
            DeletedDateUtc,
            DeletedByUserId,
            DeleteReason,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="GroupTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class GroupTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupTag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="relationId">Initial value of the RelationId property.</param>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static GroupTag CreateGroupTag(int id, int relationId, int tagId, System.DateTime dateCreatedUtc, int createdByUserId, int sortOrder)
        {
            GroupTag groupTag = new GroupTag();
            groupTag.Id = id;
            groupTag.RelationId = relationId;
            groupTag.TagId = tagId;
            groupTag.DateCreatedUtc = dateCreatedUtc;
            groupTag.CreatedByUserId = createdByUserId;
            groupTag.SortOrder = sortOrder;
            return groupTag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int RelationId
        {
            get
            {
                return _RelationId;
            }
            set
            {
                OnRelationIdChanging(value);
                ReportPropertyChanging("RelationId");
                _RelationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationId");
                OnRelationIdChanged();
            }
        }
        private int _RelationId;
        partial void OnRelationIdChanging(int value);
        partial void OnRelationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                OnTagIdChanging(value);
                ReportPropertyChanging("TagId");
                _TagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagId");
                OnTagIdChanged();
            }
        }
        private int _TagId;
        partial void OnTagIdChanging(int value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateDeletedUtc
        {
            get
            {
                return _DateDeletedUtc;
            }
            set
            {
                OnDateDeletedUtcChanging(value);
                ReportPropertyChanging("DateDeletedUtc");
                _DateDeletedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeletedUtc");
                OnDateDeletedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateDeletedUtc;
        partial void OnDateDeletedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateDeletedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private int _SortOrder;
        partial void OnSortOrderChanging(int value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupTags_Relation", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_dbo_GroupTags_Relation", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_dbo_GroupTags_Relation", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_dbo_GroupTags_Relation", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("NetworksModel.FK_dbo_GroupTags_Relation", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupTags_CreatedByUser", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupTags_CreatedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupTags_CreatedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupTags_CreatedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_GroupTags_CreatedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupTags_DeletedByUser", "User")]
        public User DeletedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupTags_DeletedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupTags_DeletedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_GroupTags_DeletedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_GroupTags_DeletedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupTags_Tag", "TagDefinition")]
        public TagDefinition TagDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_GroupTags_Tag", "TagDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_GroupTags_Tag", "TagDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TagDefinition> TagDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_GroupTags_Tag", "TagDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TagDefinition>("NetworksModel.FK_dbo_GroupTags_Tag", "TagDefinition", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            RelationId,
            TagId,
            DateCreatedUtc,
            CreatedByUserId,
            DateDeletedUtc,
            DeletedByUserId,
            DeleteReason,
            SortOrder,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Hint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Hint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Hint object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="hintTypeId">Initial value of the HintTypeId property.</param>
        public static Hint CreateHint(int id, string alias, bool isEnabled, int hintTypeId)
        {
            Hint hint = new Hint();
            hint.Id = id;
            hint.Alias = alias;
            hint.IsEnabled = isEnabled;
            hint.HintTypeId = hintTypeId;
            return hint;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private string _Location;
        partial void OnLocationChanging(string value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private bool _IsEnabled;
        partial void OnIsEnabledChanging(bool value);
        partial void OnIsEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int HintTypeId
        {
            get
            {
                return _HintTypeId;
            }
            set
            {
                OnHintTypeIdChanging(value);
                ReportPropertyChanging("HintTypeId");
                _HintTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HintTypeId");
                OnHintTypeIdChanged();
            }
        }
        private int _HintTypeId;
        partial void OnHintTypeIdChanging(int value);
        partial void OnHintTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private Nullable<int> _NetworkId;
        partial void OnNetworkIdChanging(Nullable<int> value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Hints_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Hints_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Hints_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Hints_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_Hints_Network", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_HintsToUsers_Hint", "HintsToUser")]
        public EntityCollection<HintsToUser> HintsToUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HintsToUser>("NetworksModel.FK_dbo_HintsToUsers_Hint", "HintsToUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HintsToUser>("NetworksModel.FK_dbo_HintsToUsers_Hint", "HintsToUser", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Alias,
            Title,
            Location,
            Description,
            IsEnabled,
            HintTypeId,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="HintsToUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class HintsToUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HintsToUser object.
        /// </summary>
        /// <param name="hintId">Initial value of the HintId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static HintsToUser CreateHintsToUser(int hintId, int userId)
        {
            HintsToUser hintsToUser = new HintsToUser();
            hintsToUser.HintId = hintId;
            hintsToUser.UserId = userId;
            return hintsToUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int HintId
        {
            get
            {
                return _HintId;
            }
            set
            {
                if (_HintId != value)
                {
                    OnHintIdChanging(value);
                    ReportPropertyChanging("HintId");
                    _HintId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HintId");
                    OnHintIdChanged();
                }
            }
        }
        private int _HintId;
        partial void OnHintIdChanging(int value);
        partial void OnHintIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateDismissedUtc
        {
            get
            {
                return _DateDismissedUtc;
            }
            set
            {
                OnDateDismissedUtcChanging(value);
                ReportPropertyChanging("DateDismissedUtc");
                _DateDismissedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDismissedUtc");
                OnDateDismissedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateDismissedUtc;
        partial void OnDateDismissedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateDismissedUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_HintsToUsers_Hint", "Hint")]
        public Hint Hint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hint>("NetworksModel.FK_dbo_HintsToUsers_Hint", "Hint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hint>("NetworksModel.FK_dbo_HintsToUsers_Hint", "Hint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hint> HintReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hint>("NetworksModel.FK_dbo_HintsToUsers_Hint", "Hint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hint>("NetworksModel.FK_dbo_HintsToUsers_Hint", "Hint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_HintsToUsers_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_HintsToUsers_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_HintsToUsers_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_HintsToUsers_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_HintsToUsers_User", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            HintId,
            UserId,
            DateDismissedUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// Log of received emails
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="InboundEmailMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class InboundEmailMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InboundEmailMessage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="senderEmailAccount">Initial value of the SenderEmailAccount property.</param>
        /// <param name="senderEmailDomain">Initial value of the SenderEmailDomain property.</param>
        /// <param name="receiverEmailAccount">Initial value of the ReceiverEmailAccount property.</param>
        /// <param name="receiverEmailDomain">Initial value of the ReceiverEmailDomain property.</param>
        /// <param name="provider">Initial value of the Provider property.</param>
        /// <param name="dateReceivedUtc">Initial value of the DateReceivedUtc property.</param>
        /// <param name="sourceEmailFileName">Initial value of the SourceEmailFileName property.</param>
        /// <param name="success">Initial value of the Success property.</param>
        public static InboundEmailMessage CreateInboundEmailMessage(int id, int networkId, string senderEmailAccount, string senderEmailDomain, string receiverEmailAccount, string receiverEmailDomain, int provider, System.DateTime dateReceivedUtc, string sourceEmailFileName, bool success)
        {
            InboundEmailMessage inboundEmailMessage = new InboundEmailMessage();
            inboundEmailMessage.Id = id;
            inboundEmailMessage.NetworkId = networkId;
            inboundEmailMessage.SenderEmailAccount = senderEmailAccount;
            inboundEmailMessage.SenderEmailDomain = senderEmailDomain;
            inboundEmailMessage.ReceiverEmailAccount = receiverEmailAccount;
            inboundEmailMessage.ReceiverEmailDomain = receiverEmailDomain;
            inboundEmailMessage.Provider = provider;
            inboundEmailMessage.DateReceivedUtc = dateReceivedUtc;
            inboundEmailMessage.SourceEmailFileName = sourceEmailFileName;
            inboundEmailMessage.Success = success;
            return inboundEmailMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string SenderEmailAccount
        {
            get
            {
                return _SenderEmailAccount;
            }
            set
            {
                OnSenderEmailAccountChanging(value);
                ReportPropertyChanging("SenderEmailAccount");
                _SenderEmailAccount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SenderEmailAccount");
                OnSenderEmailAccountChanged();
            }
        }
        private string _SenderEmailAccount;
        partial void OnSenderEmailAccountChanging(string value);
        partial void OnSenderEmailAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string SenderEmailTag
        {
            get
            {
                return _SenderEmailTag;
            }
            set
            {
                OnSenderEmailTagChanging(value);
                ReportPropertyChanging("SenderEmailTag");
                _SenderEmailTag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SenderEmailTag");
                OnSenderEmailTagChanged();
            }
        }
        private string _SenderEmailTag;
        partial void OnSenderEmailTagChanging(string value);
        partial void OnSenderEmailTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string SenderEmailDomain
        {
            get
            {
                return _SenderEmailDomain;
            }
            set
            {
                OnSenderEmailDomainChanging(value);
                ReportPropertyChanging("SenderEmailDomain");
                _SenderEmailDomain = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SenderEmailDomain");
                OnSenderEmailDomainChanged();
            }
        }
        private string _SenderEmailDomain;
        partial void OnSenderEmailDomainChanging(string value);
        partial void OnSenderEmailDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string ReceiverEmailAccount
        {
            get
            {
                return _ReceiverEmailAccount;
            }
            set
            {
                OnReceiverEmailAccountChanging(value);
                ReportPropertyChanging("ReceiverEmailAccount");
                _ReceiverEmailAccount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReceiverEmailAccount");
                OnReceiverEmailAccountChanged();
            }
        }
        private string _ReceiverEmailAccount;
        partial void OnReceiverEmailAccountChanging(string value);
        partial void OnReceiverEmailAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ReceiverEmailTag
        {
            get
            {
                return _ReceiverEmailTag;
            }
            set
            {
                OnReceiverEmailTagChanging(value);
                ReportPropertyChanging("ReceiverEmailTag");
                _ReceiverEmailTag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceiverEmailTag");
                OnReceiverEmailTagChanged();
            }
        }
        private string _ReceiverEmailTag;
        partial void OnReceiverEmailTagChanging(string value);
        partial void OnReceiverEmailTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string ReceiverEmailDomain
        {
            get
            {
                return _ReceiverEmailDomain;
            }
            set
            {
                OnReceiverEmailDomainChanging(value);
                ReportPropertyChanging("ReceiverEmailDomain");
                _ReceiverEmailDomain = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReceiverEmailDomain");
                OnReceiverEmailDomainChanged();
            }
        }
        private string _ReceiverEmailDomain;
        partial void OnReceiverEmailDomainChanging(string value);
        partial void OnReceiverEmailDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Provider
        {
            get
            {
                return _Provider;
            }
            set
            {
                OnProviderChanging(value);
                ReportPropertyChanging("Provider");
                _Provider = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Provider");
                OnProviderChanged();
            }
        }
        private int _Provider;
        partial void OnProviderChanging(int value);
        partial void OnProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateReceivedUtc
        {
            get
            {
                return _DateReceivedUtc;
            }
            set
            {
                OnDateReceivedUtcChanging(value);
                ReportPropertyChanging("DateReceivedUtc");
                _DateReceivedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateReceivedUtc");
                OnDateReceivedUtcChanged();
            }
        }
        private System.DateTime _DateReceivedUtc;
        partial void OnDateReceivedUtcChanging(System.DateTime value);
        partial void OnDateReceivedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string SourceEmailFileName
        {
            get
            {
                return _SourceEmailFileName;
            }
            set
            {
                OnSourceEmailFileNameChanging(value);
                ReportPropertyChanging("SourceEmailFileName");
                _SourceEmailFileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceEmailFileName");
                OnSourceEmailFileNameChanged();
            }
        }
        private string _SourceEmailFileName;
        partial void OnSourceEmailFileNameChanging(string value);
        partial void OnSourceEmailFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<double> ProviderSpamScore
        {
            get
            {
                return _ProviderSpamScore;
            }
            set
            {
                OnProviderSpamScoreChanging(value);
                ReportPropertyChanging("ProviderSpamScore");
                _ProviderSpamScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProviderSpamScore");
                OnProviderSpamScoreChanged();
            }
        }
        private Nullable<double> _ProviderSpamScore;
        partial void OnProviderSpamScoreChanging(Nullable<double> value);
        partial void OnProviderSpamScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> DkimSigned
        {
            get
            {
                return _DkimSigned;
            }
            set
            {
                OnDkimSignedChanging(value);
                ReportPropertyChanging("DkimSigned");
                _DkimSigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DkimSigned");
                OnDkimSignedChanged();
            }
        }
        private Nullable<bool> _DkimSigned;
        partial void OnDkimSignedChanging(Nullable<bool> value);
        partial void OnDkimSignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> DkimValid
        {
            get
            {
                return _DkimValid;
            }
            set
            {
                OnDkimValidChanging(value);
                ReportPropertyChanging("DkimValid");
                _DkimValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DkimValid");
                OnDkimValidChanged();
            }
        }
        private Nullable<bool> _DkimValid;
        partial void OnDkimValidChanging(Nullable<bool> value);
        partial void OnDkimValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string SpfTestResult
        {
            get
            {
                return _SpfTestResult;
            }
            set
            {
                OnSpfTestResultChanging(value);
                ReportPropertyChanging("SpfTestResult");
                _SpfTestResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpfTestResult");
                OnSpfTestResultChanged();
            }
        }
        private string _SpfTestResult;
        partial void OnSpfTestResultChanging(string value);
        partial void OnSpfTestResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string SpfTestDetail
        {
            get
            {
                return _SpfTestDetail;
            }
            set
            {
                OnSpfTestDetailChanging(value);
                ReportPropertyChanging("SpfTestDetail");
                _SpfTestDetail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpfTestDetail");
                OnSpfTestDetailChanged();
            }
        }
        private string _SpfTestDetail;
        partial void OnSpfTestDetailChanging(string value);
        partial void OnSpfTestDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return _Success;
            }
            set
            {
                OnSuccessChanging(value);
                ReportPropertyChanging("Success");
                _Success = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Success");
                OnSuccessChanged();
            }
        }
        private bool _Success;
        partial void OnSuccessChanging(bool value);
        partial void OnSuccessChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_InboundEmailMessages_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_InboundEmailMessages_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_InboundEmailMessages_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_InboundEmailMessages_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_InboundEmailMessages_Network", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItems_InboundEmailId", "TimelineItem")]
        public EntityCollection<TimelineItem> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_dbo_TimelineItems_InboundEmailId", "TimelineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_dbo_TimelineItems_InboundEmailId", "TimelineItem", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            NetworkId,
            SenderEmailAccount,
            SenderEmailTag,
            SenderEmailDomain,
            ReceiverEmailAccount,
            ReceiverEmailTag,
            ReceiverEmailDomain,
            Provider,
            DateReceivedUtc,
            SourceEmailFileName,
            ProviderSpamScore,
            DkimSigned,
            DkimValid,
            SpfTestResult,
            SpfTestDetail,
            Success,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="InformationNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class InformationNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InformationNote object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="startDateUtc">Initial value of the StartDateUtc property.</param>
        /// <param name="endDateUtc">Initial value of the EndDateUtc property.</param>
        public static InformationNote CreateInformationNote(int id, int userId, string name, string description, int networkId, System.DateTime startDateUtc, System.DateTime endDateUtc)
        {
            InformationNote informationNote = new InformationNote();
            informationNote.Id = id;
            informationNote.UserId = userId;
            informationNote.Name = name;
            informationNote.Description = description;
            informationNote.NetworkId = networkId;
            informationNote.StartDateUtc = startDateUtc;
            informationNote.EndDateUtc = endDateUtc;
            return informationNote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime StartDateUtc
        {
            get
            {
                return _StartDateUtc;
            }
            set
            {
                OnStartDateUtcChanging(value);
                ReportPropertyChanging("StartDateUtc");
                _StartDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateUtc");
                OnStartDateUtcChanged();
            }
        }
        private System.DateTime _StartDateUtc;
        partial void OnStartDateUtcChanging(System.DateTime value);
        partial void OnStartDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime EndDateUtc
        {
            get
            {
                return _EndDateUtc;
            }
            set
            {
                OnEndDateUtcChanging(value);
                ReportPropertyChanging("EndDateUtc");
                _EndDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateUtc");
                OnEndDateUtcChanged();
            }
        }
        private System.DateTime _EndDateUtc;
        partial void OnEndDateUtcChanging(System.DateTime value);
        partial void OnEndDateUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_InformationNotes_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_InformationNotes_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_InformationNotes_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_InformationNotes_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_InformationNotes_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_InformationNotes_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_InformationNotes_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_InformationNotes_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_InformationNotes_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_InformationNotes_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            Name,
            Description,
            NetworkId,
            StartDateUtc,
            EndDateUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Interest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Interest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Interest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static Interest CreateInterest(int id, int parentId, string tagName, System.DateTime date, int createdByUserId)
        {
            Interest interest = new Interest();
            interest.Id = id;
            interest.ParentId = parentId;
            interest.TagName = tagName;
            interest.Date = date;
            interest.CreatedByUserId = createdByUserId;
            return interest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private int _ParentId;
        partial void OnParentIdChanging(int value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private string _TagName;
        partial void OnTagNameChanging(string value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Interests_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Interests_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Interests_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Interests_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Interests_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserInterests_Interest", "UserInterests")]
        public EntityCollection<UserInterest> UserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInterest>("NetworksModel.FK_UserInterests_Interest", "UserInterests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInterest>("NetworksModel.FK_UserInterests_Interest", "UserInterests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupInterests_Skill", "GroupInterest")]
        public EntityCollection<GroupInterest> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupInterest>("NetworksModel.FK_dbo_GroupInterests_Skill", "GroupInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupInterest>("NetworksModel.FK_dbo_GroupInterests_Skill", "GroupInterest", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ParentId,
            TagName,
            Date,
            CreatedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Invited")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Invited : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invited object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="unregistred">Initial value of the Unregistred property.</param>
        /// <param name="invitedByUserId">Initial value of the InvitedByUserId property.</param>
        public static Invited CreateInvited(int id, int companyId, string email, System.Guid code, System.DateTime date, bool unregistred, int invitedByUserId)
        {
            Invited invited = new Invited();
            invited.Id = id;
            invited.CompanyId = companyId;
            invited.Email = email;
            invited.Code = code;
            invited.Date = date;
            invited.Unregistred = unregistred;
            invited.InvitedByUserId = invitedByUserId;
            return invited;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private string _Email;
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private System.Guid _Code;
        partial void OnCodeChanging(System.Guid value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Unregistred
        {
            get
            {
                return _Unregistred;
            }
            set
            {
                OnUnregistredChanging(value);
                ReportPropertyChanging("Unregistred");
                _Unregistred = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Unregistred");
                OnUnregistredChanged();
            }
        }
        private bool _Unregistred;
        partial void OnUnregistredChanging(bool value);
        partial void OnUnregistredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int InvitedByUserId
        {
            get
            {
                return _InvitedByUserId;
            }
            set
            {
                OnInvitedByUserIdChanging(value);
                ReportPropertyChanging("InvitedByUserId");
                _InvitedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitedByUserId");
                OnInvitedByUserIdChanged();
            }
        }
        private int _InvitedByUserId;
        partial void OnInvitedByUserIdChanging(int value);
        partial void OnInvitedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<int> _UserId;
        partial void OnUserIdChanging(Nullable<int> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompanyAccessLevel
        {
            get
            {
                return _CompanyAccessLevel;
            }
            set
            {
                OnCompanyAccessLevelChanging(value);
                ReportPropertyChanging("CompanyAccessLevel");
                _CompanyAccessLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyAccessLevel");
                OnCompanyAccessLevelChanged();
            }
        }
        private Nullable<int> _CompanyAccessLevel;
        partial void OnCompanyAccessLevelChanging(Nullable<int> value);
        partial void OnCompanyAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DeletedDateUtc
        {
            get
            {
                return _DeletedDateUtc;
            }
            set
            {
                OnDeletedDateUtcChanging(value);
                ReportPropertyChanging("DeletedDateUtc");
                _DeletedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDateUtc");
                OnDeletedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DeletedDateUtc;
        partial void OnDeletedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnDeletedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Invited_Company", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Invited_Company", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Invited_Company", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Invited_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_Invited_Company", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Invited_Inviter", "Users")]
        public User Inviter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Invited_Inviter", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Invited_Inviter", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> InviterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Invited_Inviter", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Invited_Inviter", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Invited_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Invited_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Invited_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Invited_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Invited_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisterRequests_AcceptedInvitation", "RegisterRequest")]
        public EntityCollection<RegisterRequest> RegisterRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegisterRequest>("NetworksModel.FK_RegisterRequests_AcceptedInvitation", "RegisterRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegisterRequest>("NetworksModel.FK_RegisterRequests_AcceptedInvitation", "RegisterRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Invited_DeletedByUser", "User")]
        public User DeletedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Invited_DeletedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Invited_DeletedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Invited_DeletedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Invited_DeletedByUser", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            Email,
            Code,
            Date,
            Unregistred,
            InvitedByUserId,
            UserId,
            CompanyAccessLevel,
            DeletedDateUtc,
            DeletedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// Maybe we should replace that with tags V2.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Job CreateJob(int id)
        {
            Job job = new Job();
            job.Id = id;
            return job;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Libelle
        {
            get
            {
                return _Libelle;
            }
            set
            {
                OnLibelleChanging(value);
                ReportPropertyChanging("Libelle");
                _Libelle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Libelle");
                OnLibelleChanged();
            }
        }
        private string _Libelle;
        partial void OnLibelleChanging(string value);
        partial void OnLibelleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private string _GroupName;
        partial void OnGroupNameChanging(string value);
        partial void OnGroupNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_JobByBusiness_Job", "JobByBusiness")]
        public EntityCollection<JobByBusiness> JobByBusinesses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobByBusiness>("NetworksModel.FK_JobByBusiness_Job", "JobByBusiness");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobByBusiness>("NetworksModel.FK_JobByBusiness_Job", "JobByBusiness", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Users_Jobs", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("NetworksModel.FK_Users_Jobs", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("NetworksModel.FK_Users_Jobs", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Libelle,
            Alias,
            GroupName,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="JobByBusiness")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class JobByBusiness : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobByBusiness object.
        /// </summary>
        /// <param name="jobId">Initial value of the JobId property.</param>
        /// <param name="businessId">Initial value of the BusinessId property.</param>
        public static JobByBusiness CreateJobByBusiness(int jobId, int businessId)
        {
            JobByBusiness jobByBusiness = new JobByBusiness();
            jobByBusiness.JobId = jobId;
            jobByBusiness.BusinessId = businessId;
            return jobByBusiness;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                if (_JobId != value)
                {
                    OnJobIdChanging(value);
                    ReportPropertyChanging("JobId");
                    _JobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobId");
                    OnJobIdChanged();
                }
            }
        }
        private int _JobId;
        partial void OnJobIdChanging(int value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int BusinessId
        {
            get
            {
                return _BusinessId;
            }
            set
            {
                if (_BusinessId != value)
                {
                    OnBusinessIdChanging(value);
                    ReportPropertyChanging("BusinessId");
                    _BusinessId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessId");
                    OnBusinessIdChanged();
                }
            }
        }
        private int _BusinessId;
        partial void OnBusinessIdChanging(int value);
        partial void OnBusinessIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_JobByBusiness_Job", "Jobs")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("NetworksModel.FK_JobByBusiness_Job", "Jobs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("NetworksModel.FK_JobByBusiness_Job", "Jobs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("NetworksModel.FK_JobByBusiness_Job", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("NetworksModel.FK_JobByBusiness_Job", "Jobs", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            JobId,
            BusinessId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Link")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Link : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Link object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="link1">Initial value of the Link1 property.</param>
        public static Link CreateLink(int id, string link1)
        {
            Link link = new Link();
            link.Id = id;
            link.Link1 = link1;
            return link;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Link1
        {
            get
            {
                return _Link1;
            }
            set
            {
                OnLink1Changing(value);
                ReportPropertyChanging("Link1");
                _Link1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Link1");
                OnLink1Changed();
            }
        }
        private string _Link1;
        partial void OnLink1Changing(string value);
        partial void OnLink1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<int> _UserId;
        partial void OnUserIdChanging(Nullable<int> value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Links_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Links_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Links_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Links_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Links_Users", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Link1,
            Name,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="List")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class List : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new List object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerType">Initial value of the OwnerType property.</param>
        /// <param name="ownerValue">Initial value of the OwnerValue property.</param>
        /// <param name="focus">Initial value of the Focus property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static List CreateList(int id, int ownerType, int ownerValue, bool focus, int createdByUserId)
        {
            List list = new List();
            list.Id = id;
            list.OwnerType = ownerType;
            list.OwnerValue = ownerValue;
            list.Focus = focus;
            list.CreatedByUserId = createdByUserId;
            return list;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int OwnerType
        {
            get
            {
                return _OwnerType;
            }
            set
            {
                OnOwnerTypeChanging(value);
                ReportPropertyChanging("OwnerType");
                _OwnerType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerType");
                OnOwnerTypeChanged();
            }
        }
        private int _OwnerType;
        partial void OnOwnerTypeChanging(int value);
        partial void OnOwnerTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int OwnerValue
        {
            get
            {
                return _OwnerValue;
            }
            set
            {
                OnOwnerValueChanging(value);
                ReportPropertyChanging("OwnerValue");
                _OwnerValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerValue");
                OnOwnerValueChanged();
            }
        }
        private int _OwnerValue;
        partial void OnOwnerValueChanging(int value);
        partial void OnOwnerValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Focus
        {
            get
            {
                return _Focus;
            }
            set
            {
                OnFocusChanging(value);
                ReportPropertyChanging("Focus");
                _Focus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Focus");
                OnFocusChanged();
            }
        }
        private bool _Focus;
        partial void OnFocusChanging(bool value);
        partial void OnFocusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ListItems_Lists", "ListItems")]
        public EntityCollection<ListItem> ListItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListItem>("NetworksModel.FK_ListItems_Lists", "ListItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListItem>("NetworksModel.FK_ListItems_Lists", "ListItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Lists_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Lists_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Lists_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Lists_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Lists_User", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            OwnerType,
            OwnerValue,
            Focus,
            CreatedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ListItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ListItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="listId">Initial value of the ListId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static ListItem CreateListItem(int id, int listId, string text, int createdByUserId)
        {
            ListItem listItem = new ListItem();
            listItem.Id = id;
            listItem.ListId = listId;
            listItem.Text = text;
            listItem.CreatedByUserId = createdByUserId;
            return listItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ListId
        {
            get
            {
                return _ListId;
            }
            set
            {
                OnListIdChanging(value);
                ReportPropertyChanging("ListId");
                _ListId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListId");
                OnListIdChanged();
            }
        }
        private int _ListId;
        partial void OnListIdChanging(int value);
        partial void OnListIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private string _Text;
        partial void OnTextChanging(string value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ListItems_Lists", "Lists")]
        public List List
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("NetworksModel.FK_ListItems_Lists", "Lists").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("NetworksModel.FK_ListItems_Lists", "Lists").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<List> ListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("NetworksModel.FK_ListItems_Lists", "Lists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<List>("NetworksModel.FK_ListItems_Lists", "Lists", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ListItems_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ListItems_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ListItems_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ListItems_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_ListItems_Users", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ListId,
            Text,
            CreatedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Replaced by UserPresences.
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Replaced by UserPresences.
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Live")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Live : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Live object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="dateTime">Initial value of the DateTime property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static Live CreateLive(int id, int userId, byte status, System.DateTime dateTime, int networkId)
        {
            Live live = new Live();
            live.Id = id;
            live.UserId = userId;
            live.Status = status;
            live.DateTime = dateTime;
            live.NetworkId = networkId;
            return live;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private byte _Status;
        partial void OnStatusChanging(byte value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private System.DateTime _DateTime;
        partial void OnDateTimeChanging(System.DateTime value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Live_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Live_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Live_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Live_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Live_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Live_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Live_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Live_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Live_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Live_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            Status,
            DateTime,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="LostItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class LostItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LostItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static LostItem CreateLostItem(int id, string title, string message, System.DateTime date, bool state, int userId, int networkId)
        {
            LostItem lostItem = new LostItem();
            lostItem.Id = id;
            lostItem.Title = title;
            lostItem.Message = message;
            lostItem.Date = date;
            lostItem.State = state;
            lostItem.UserId = userId;
            lostItem.NetworkId = networkId;
            return lostItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private string _Message;
        partial void OnMessageChanging(string value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private bool _State;
        partial void OnStateChanging(bool value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_LostItems_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_LostItems_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_LostItems_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_LostItems_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_LostItems_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_LostItems_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_LostItems_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_LostItems_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_LostItems_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_LostItems_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Title,
            Message,
            Date,
            State,
            UserId,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Menu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Menu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Menu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Menu CreateMenu(int id, int companyId, string text)
        {
            Menu menu = new Menu();
            menu.Id = id;
            menu.CompanyId = companyId;
            menu.Text = text;
            return menu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private string _Text;
        partial void OnTextChanging(string value);
        partial void OnTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_MenuPlanning_Menus", "MenuPlanning")]
        public EntityCollection<MenuPlanning> MenuPlannings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuPlanning>("NetworksModel.FK_MenuPlanning_Menus", "MenuPlanning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuPlanning>("NetworksModel.FK_MenuPlanning_Menus", "MenuPlanning", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            Text,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="MenuPlanning")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class MenuPlanning : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MenuPlanning object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="menuId">Initial value of the MenuId property.</param>
        /// <param name="placeId">Initial value of the PlaceId property.</param>
        public static MenuPlanning CreateMenuPlanning(int id, System.DateTime date, int companyId, int menuId, int placeId)
        {
            MenuPlanning menuPlanning = new MenuPlanning();
            menuPlanning.Id = id;
            menuPlanning.Date = date;
            menuPlanning.CompanyId = companyId;
            menuPlanning.MenuId = menuId;
            menuPlanning.PlaceId = placeId;
            return menuPlanning;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int MenuId
        {
            get
            {
                return _MenuId;
            }
            set
            {
                OnMenuIdChanging(value);
                ReportPropertyChanging("MenuId");
                _MenuId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MenuId");
                OnMenuIdChanged();
            }
        }
        private int _MenuId;
        partial void OnMenuIdChanging(int value);
        partial void OnMenuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                OnPlaceIdChanging(value);
                ReportPropertyChanging("PlaceId");
                _PlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceId");
                OnPlaceIdChanged();
            }
        }
        private int _PlaceId;
        partial void OnPlaceIdChanging(int value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private string _Text;
        partial void OnTextChanging(string value);
        partial void OnTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_MenuPlanning_Menus", "Menus")]
        public Menu Menu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("NetworksModel.FK_MenuPlanning_Menus", "Menus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("NetworksModel.FK_MenuPlanning_Menus", "Menus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Menu> MenuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("NetworksModel.FK_MenuPlanning_Menus", "Menus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Menu>("NetworksModel.FK_MenuPlanning_Menus", "Menus", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Date,
            CompanyId,
            MenuId,
            PlaceId,
            Text,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="displayed">Initial value of the Displayed property.</param>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="toUserId">Initial value of the ToUserId property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        public static Message CreateMessage(int id, System.DateTime createDate, bool displayed, int fromUserId, int toUserId, byte source)
        {
            Message message = new Message();
            message.Id = id;
            message.CreateDate = createDate;
            message.Displayed = displayed;
            message.FromUserId = fromUserId;
            message.ToUserId = toUserId;
            message.Source = source;
            return message;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private string _Text;
        partial void OnTextChanging(string value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private System.DateTime _CreateDate;
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private string _Subject;
        partial void OnSubjectChanging(string value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private Nullable<bool> _Archived;
        partial void OnArchivedChanging(Nullable<bool> value);
        partial void OnArchivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Displayed
        {
            get
            {
                return _Displayed;
            }
            set
            {
                OnDisplayedChanging(value);
                ReportPropertyChanging("Displayed");
                _Displayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Displayed");
                OnDisplayedChanged();
            }
        }
        private bool _Displayed;
        partial void OnDisplayedChanging(bool value);
        partial void OnDisplayedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private int _FromUserId;
        partial void OnFromUserIdChanging(int value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private int _ToUserId;
        partial void OnToUserIdChanging(int value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private byte _Source;
        partial void OnSourceChanging(byte value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> InboundEmailId
        {
            get
            {
                return _InboundEmailId;
            }
            set
            {
                OnInboundEmailIdChanging(value);
                ReportPropertyChanging("InboundEmailId");
                _InboundEmailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InboundEmailId");
                OnInboundEmailIdChanged();
            }
        }
        private Nullable<int> _InboundEmailId;
        partial void OnInboundEmailIdChanging(Nullable<int> value);
        partial void OnInboundEmailIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Messages_FromUser", "Users")]
        public User From
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Messages_FromUser", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Messages_FromUser", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FromReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Messages_FromUser", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Messages_FromUser", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Messages_ToUser", "Users")]
        public User To
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Messages_ToUser", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Messages_ToUser", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ToReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Messages_ToUser", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Messages_ToUser", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Text,
            CreateDate,
            Subject,
            Archived,
            Displayed,
            FromUserId,
            ToUserId,
            Source,
            InboundEmailId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Network")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Network : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Network object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="networkTypeId">Initial value of the NetworkTypeId property.</param>
        public static Network CreateNetwork(int id, string name, string displayName, int networkTypeId)
        {
            Network network = new Network();
            network.Id = id;
            network.Name = name;
            network.DisplayName = displayName;
            network.NetworkTypeId = networkTypeId;
            return network;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private string _DisplayName;
        partial void OnDisplayNameChanging(string value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private string _ZipCode;
        partial void OnZipCodeChanging(string value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private string _Country;
        partial void OnCountryChanging(string value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private string _Color;
        partial void OnColorChanging(string value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private string _Address;
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private string _About;
        partial void OnAboutChanging(string value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Sector
        {
            get
            {
                return _Sector;
            }
            set
            {
                OnSectorChanging(value);
                ReportPropertyChanging("Sector");
                _Sector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sector");
                OnSectorChanged();
            }
        }
        private string _Sector;
        partial void OnSectorChanging(string value);
        partial void OnSectorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<double> lat
        {
            get
            {
                return _lat;
            }
            set
            {
                OnlatChanging(value);
                ReportPropertyChanging("lat");
                _lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lat");
                OnlatChanged();
            }
        }
        private Nullable<double> _lat;
        partial void OnlatChanging(Nullable<double> value);
        partial void OnlatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<double> lon
        {
            get
            {
                return _lon;
            }
            set
            {
                OnlonChanging(value);
                ReportPropertyChanging("lon");
                _lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lon");
                OnlonChanged();
            }
        }
        private Nullable<double> _lon;
        partial void OnlonChanging(Nullable<double> value);
        partial void OnlonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FoursquareId
        {
            get
            {
                return _FoursquareId;
            }
            set
            {
                OnFoursquareIdChanging(value);
                ReportPropertyChanging("FoursquareId");
                _FoursquareId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FoursquareId");
                OnFoursquareIdChanged();
            }
        }
        private string _FoursquareId;
        partial void OnFoursquareIdChanging(string value);
        partial void OnFoursquareIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string SiteUrl
        {
            get
            {
                return _SiteUrl;
            }
            set
            {
                OnSiteUrlChanging(value);
                ReportPropertyChanging("SiteUrl");
                _SiteUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteUrl");
                OnSiteUrlChanged();
            }
        }
        private string _SiteUrl;
        partial void OnSiteUrlChanging(string value);
        partial void OnSiteUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkTypeId
        {
            get
            {
                return _NetworkTypeId;
            }
            set
            {
                OnNetworkTypeIdChanging(value);
                ReportPropertyChanging("NetworkTypeId");
                _NetworkTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkTypeId");
                OnNetworkTypeIdChanged();
            }
        }
        private int _NetworkTypeId;
        partial void OnNetworkTypeIdChanging(int value);
        partial void OnNetworkTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string TwitterUrl
        {
            get
            {
                return _TwitterUrl;
            }
            set
            {
                OnTwitterUrlChanging(value);
                ReportPropertyChanging("TwitterUrl");
                _TwitterUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TwitterUrl");
                OnTwitterUrlChanged();
            }
        }
        private string _TwitterUrl;
        partial void OnTwitterUrlChanging(string value);
        partial void OnTwitterUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FacebookUrl
        {
            get
            {
                return _FacebookUrl;
            }
            set
            {
                OnFacebookUrlChanging(value);
                ReportPropertyChanging("FacebookUrl");
                _FacebookUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FacebookUrl");
                OnFacebookUrlChanged();
            }
        }
        private string _FacebookUrl;
        partial void OnFacebookUrlChanging(string value);
        partial void OnFacebookUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string BlogUrl
        {
            get
            {
                return _BlogUrl;
            }
            set
            {
                OnBlogUrlChanging(value);
                ReportPropertyChanging("BlogUrl");
                _BlogUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlogUrl");
                OnBlogUrlChanged();
            }
        }
        private string _BlogUrl;
        partial void OnBlogUrlChanging(string value);
        partial void OnBlogUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DefaultCulture
        {
            get
            {
                return _DefaultCulture;
            }
            set
            {
                OnDefaultCultureChanging(value);
                ReportPropertyChanging("DefaultCulture");
                _DefaultCulture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DefaultCulture");
                OnDefaultCultureChanged();
            }
        }
        private string _DefaultCulture;
        partial void OnDefaultCultureChanging(string value);
        partial void OnDefaultCultureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Achievements_NetworkId", "Achievement")]
        public EntityCollection<Achievement> Achievements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Achievement>("NetworksModel.FK_Achievements_NetworkId", "Achievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Achievement>("NetworksModel.FK_Achievements_NetworkId", "Achievement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_AdCategories_NetworkId", "AdCategory")]
        public EntityCollection<AdCategory> AdCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdCategory>("NetworksModel.FK_AdCategories_NetworkId", "AdCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdCategory>("NetworksModel.FK_AdCategories_NetworkId", "AdCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Buildings_NetworkId", "Building")]
        public EntityCollection<Building> Buildings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Building>("NetworksModel.FK_Buildings_NetworkId", "Building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Building>("NetworksModel.FK_Buildings_NetworkId", "Building", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Companies_NetworkId", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("NetworksModel.FK_Companies_NetworkId", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("NetworksModel.FK_Companies_NetworkId", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_DeviceConfiguration_NetworkId", "DeviceConfiguration")]
        public EntityCollection<DeviceConfiguration> DeviceConfigurations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeviceConfiguration>("NetworksModel.FK_DeviceConfiguration_NetworkId", "DeviceConfiguration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeviceConfiguration>("NetworksModel.FK_DeviceConfiguration_NetworkId", "DeviceConfiguration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Devices_NetworkId", "Device")]
        public EntityCollection<Device> Devices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Device>("NetworksModel.FK_Devices_NetworkId", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Device>("NetworksModel.FK_Devices_NetworkId", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_EventCategories_NetworkId", "EventCategory")]
        public EntityCollection<EventCategory> EventCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventCategory>("NetworksModel.FK_EventCategories_NetworkId", "EventCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventCategory>("NetworksModel.FK_EventCategories_NetworkId", "EventCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_NetworkId", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("NetworksModel.FK_Events_NetworkId", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("NetworksModel.FK_Events_NetworkId", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeMaterials_NetworkId", "ExchangeMaterial")]
        public EntityCollection<ExchangeMaterial> ExchangeMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeMaterial>("NetworksModel.FK_ExchangeMaterials_NetworkId", "ExchangeMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeMaterial>("NetworksModel.FK_ExchangeMaterials_NetworkId", "ExchangeMaterial", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSkills_NetworkId", "ExchangeSkill")]
        public EntityCollection<ExchangeSkill> ExchangeSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeSkill>("NetworksModel.FK_ExchangeSkills_NetworkId", "ExchangeSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeSkill>("NetworksModel.FK_ExchangeSkills_NetworkId", "ExchangeSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSurfaces_NetworkId", "ExchangeSurface")]
        public EntityCollection<ExchangeSurface> ExchangeSurfaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeSurface>("NetworksModel.FK_ExchangeSurfaces_NetworkId", "ExchangeSurface");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeSurface>("NetworksModel.FK_ExchangeSurfaces_NetworkId", "ExchangeSurface", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Groups_NetworkId", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("NetworksModel.FK_Groups_NetworkId", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("NetworksModel.FK_Groups_NetworkId", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_InformationNotes_NetworkId", "InformationNote")]
        public EntityCollection<InformationNote> InformationNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InformationNote>("NetworksModel.FK_InformationNotes_NetworkId", "InformationNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InformationNote>("NetworksModel.FK_InformationNotes_NetworkId", "InformationNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Live_NetworkId", "Live")]
        public EntityCollection<Live> Lives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Live>("NetworksModel.FK_Live_NetworkId", "Live");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Live>("NetworksModel.FK_Live_NetworkId", "Live", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_LostItems_NetworkId", "LostItem")]
        public EntityCollection<LostItem> LostItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LostItem>("NetworksModel.FK_LostItems_NetworkId", "LostItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LostItem>("NetworksModel.FK_LostItems_NetworkId", "LostItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Numbers_NetworkId", "Number")]
        public EntityCollection<Number> Numbers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Number>("NetworksModel.FK_Numbers_NetworkId", "Number");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Number>("NetworksModel.FK_Numbers_NetworkId", "Number", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Places_NetworkId", "Place")]
        public EntityCollection<Place> Places
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Place>("NetworksModel.FK_Places_NetworkId", "Place");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Place>("NetworksModel.FK_Places_NetworkId", "Place", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisterRequests_NetworkId", "RegisterRequest")]
        public EntityCollection<RegisterRequest> RegisterRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegisterRequest>("NetworksModel.FK_RegisterRequests_NetworkId", "RegisterRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegisterRequest>("NetworksModel.FK_RegisterRequests_NetworkId", "RegisterRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RequestsForProposal_NetworkId", "RequestForProposal")]
        public EntityCollection<RequestForProposal> RequestsForProposals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestForProposal>("NetworksModel.FK_RequestsForProposal_NetworkId", "RequestForProposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestForProposal>("NetworksModel.FK_RequestsForProposal_NetworkId", "RequestForProposal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_NetworkId", "TimelineItem")]
        public EntityCollection<TimelineItem> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_NetworkId", "TimelineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_NetworkId", "TimelineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TouchCommunications_NetworkId", "TouchCommunication")]
        public EntityCollection<TouchCommunication> TouchCommunications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TouchCommunication>("NetworksModel.FK_TouchCommunications_NetworkId", "TouchCommunication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TouchCommunication>("NetworksModel.FK_TouchCommunications_NetworkId", "TouchCommunication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CareerOpportunities_Network", "CareerOpportunity")]
        public EntityCollection<CareerOpportunity> CareerOpportunities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CareerOpportunity>("NetworksModel.FK_CareerOpportunities_Network", "CareerOpportunity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CareerOpportunity>("NetworksModel.FK_CareerOpportunities_Network", "CareerOpportunity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkStates_Network", "SocialNetworkState")]
        public EntityCollection<SocialNetworkState> SocialNetworkStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialNetworkState>("NetworksModel.FK_SocialNetworkStates_Network", "SocialNetworkState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialNetworkState>("NetworksModel.FK_SocialNetworkStates_Network", "SocialNetworkState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Users_NetworkId", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("NetworksModel.FK_Users_NetworkId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("NetworksModel.FK_Users_NetworkId", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Resumes_NetworkId", "Resume")]
        public EntityCollection<Resume> Resumes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resume>("NetworksModel.FK_Resumes_NetworkId", "Resume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resume>("NetworksModel.FK_Resumes_NetworkId", "Resume", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CreateNetworkRequests_NetworkId", "CreateNetworkRequest")]
        public EntityCollection<CreateNetworkRequest> CreateNetworkRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CreateNetworkRequest>("NetworksModel.FK_CreateNetworkRequests_NetworkId", "CreateNetworkRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CreateNetworkRequest>("NetworksModel.FK_CreateNetworkRequests_NetworkId", "CreateNetworkRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_StatsCounterHits_Network", "StatsCounterHit")]
        public EntityCollection<StatsCounterHit> StatsCounterHits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StatsCounterHit>("NetworksModel.FK_StatsCounterHits_Network", "StatsCounterHit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StatsCounterHit>("NetworksModel.FK_StatsCounterHits_Network", "StatsCounterHit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyRequests_Network", "CompanyRequest")]
        public EntityCollection<CompanyRequest> CompanyRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRequest>("NetworksModel.FK_dbo_CompanyRequests_Network", "CompanyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRequest>("NetworksModel.FK_dbo_CompanyRequests_Network", "CompanyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Networks_Type", "NetworkType")]
        public NetworkType NetworkType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetworkType>("NetworksModel.FK_Networks_Type", "NetworkType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetworkType>("NetworksModel.FK_Networks_Type", "NetworkType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NetworkType> NetworkTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetworkType>("NetworksModel.FK_Networks_Type", "NetworkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NetworkType>("NetworksModel.FK_Networks_Type", "NetworkType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Clubs_Network", "Club")]
        public EntityCollection<Club> Clubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Club>("NetworksModel.FK_dbo_Clubs_Network", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Club>("NetworksModel.FK_dbo_Clubs_Network", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_EmailMessages_Network", "EmailMessage")]
        public EntityCollection<EmailMessage> EmailMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailMessage>("NetworksModel.FK_dbo_EmailMessages_Network", "EmailMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailMessage>("NetworksModel.FK_dbo_EmailMessages_Network", "EmailMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserEmailChangeRequests_Networks", "UserEmailChangeRequest")]
        public EntityCollection<UserEmailChangeRequest> UserEmailChangeRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEmailChangeRequest>("NetworksModel.FK_UserEmailChangeRequests_Networks", "UserEmailChangeRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEmailChangeRequest>("NetworksModel.FK_UserEmailChangeRequests_Networks", "UserEmailChangeRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_InboundEmailMessages_Network", "InboundEmailMessage")]
        public EntityCollection<InboundEmailMessage> InboundEmailMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InboundEmailMessage>("NetworksModel.FK_dbo_InboundEmailMessages_Network", "InboundEmailMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InboundEmailMessage>("NetworksModel.FK_dbo_InboundEmailMessages_Network", "InboundEmailMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_Network", "ApplyRequest")]
        public EntityCollection<ApplyRequest> ApplyRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_Network", "ApplyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_Network", "ApplyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_SubscriptionTemplates_Network", "SubscriptionTemplate")]
        public EntityCollection<SubscriptionTemplate> SubscriptionTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriptionTemplate>("NetworksModel.FK_dbo_SubscriptionTemplates_Network", "SubscriptionTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriptionTemplate>("NetworksModel.FK_dbo_SubscriptionTemplates_Network", "SubscriptionTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_Network", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_Network", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_Network", "Subscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_StripeTransactions_Networks", "StripeTransaction")]
        public EntityCollection<StripeTransaction> StripeTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StripeTransaction>("NetworksModel.FK_dbo_StripeTransactions_Networks", "StripeTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StripeTransaction>("NetworksModel.FK_dbo_StripeTransactions_Networks", "StripeTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TagDefinitions_Networks", "TagDefinition")]
        public EntityCollection<TagDefinition> TagDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagDefinition>("NetworksModel.FK_dbo_TagDefinitions_Networks", "TagDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagDefinition>("NetworksModel.FK_dbo_TagDefinitions_Networks", "TagDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResources_Networks", "PartnerResource")]
        public EntityCollection<PartnerResource> PartnerResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartnerResource>("NetworksModel.FK_dbo_PartnerResources_Networks", "PartnerResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartnerResource>("NetworksModel.FK_dbo_PartnerResources_Networks", "PartnerResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyCategories_Networks", "CompanyCategory")]
        public EntityCollection<CompanyCategory> CompanyCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyCategory>("NetworksModel.FK_CompanyCategories_Networks", "CompanyCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyCategory>("NetworksModel.FK_CompanyCategories_Networks", "CompanyCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyRelationshipTypes_Networks", "CompanyRelationshipType")]
        public EntityCollection<CompanyRelationshipType> CompanyRelationshipTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRelationshipType>("NetworksModel.FK_CompanyRelationshipTypes_Networks", "CompanyRelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRelationshipType>("NetworksModel.FK_CompanyRelationshipTypes_Networks", "CompanyRelationshipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TagCategories_Network", "TagCategory")]
        public EntityCollection<TagCategory> TagCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagCategory>("NetworksModel.FK_dbo_TagCategories_Network", "TagCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagCategory>("NetworksModel.FK_dbo_TagCategories_Network", "TagCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Ads_NetworkId", "Ad")]
        public EntityCollection<Ad> Ads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ad>("NetworksModel.FK_Ads_NetworkId", "Ad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ad>("NetworksModel.FK_Ads_NetworkId", "Ad", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Hints_Network", "Hint")]
        public EntityCollection<Hint> Hints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hint>("NetworksModel.FK_dbo_Hints_Network", "Hint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hint>("NetworksModel.FK_dbo_Hints_Network", "Hint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Network", "Page")]
        public EntityCollection<Page> Pages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Page>("NetworksModel.FK_dbo_Network", "Page");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Page>("NetworksModel.FK_dbo_Network", "Page", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            DisplayName,
            ZipCode,
            City,
            Country,
            Color,
            Address,
            About,
            Sector,
            lat,
            lon,
            FoursquareId,
            SiteUrl,
            NetworkTypeId,
            TwitterUrl,
            FacebookUrl,
            BlogUrl,
            DefaultCulture,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="NetworkType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class NetworkType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetworkType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static NetworkType CreateNetworkType(int id, string name)
        {
            NetworkType networkType = new NetworkType();
            networkType.Id = id;
            networkType.Name = name;
            return networkType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Networks_Type", "Network")]
        public EntityCollection<Network> Networks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Network>("NetworksModel.FK_Networks_Type", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Network>("NetworksModel.FK_Networks_Type", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Notification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Notification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Notification object.
        /// </summary>
        /// <param name="contactRequest">Initial value of the ContactRequest property.</param>
        /// <param name="publication">Initial value of the Publication property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="eventInvitation">Initial value of the EventInvitation property.</param>
        /// <param name="privateMessage">Initial value of the PrivateMessage property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="privateGroupJoinRequest">Initial value of the PrivateGroupJoinRequest property.</param>
        /// <param name="mailChimp">Initial value of the MailChimp property.</param>
        public static Notification CreateNotification(bool contactRequest, bool publication, bool comment, bool eventInvitation, bool privateMessage, int userId, bool privateGroupJoinRequest, bool mailChimp)
        {
            Notification notification = new Notification();
            notification.ContactRequest = contactRequest;
            notification.Publication = publication;
            notification.Comment = comment;
            notification.EventInvitation = eventInvitation;
            notification.PrivateMessage = privateMessage;
            notification.UserId = userId;
            notification.PrivateGroupJoinRequest = privateGroupJoinRequest;
            notification.MailChimp = mailChimp;
            return notification;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool ContactRequest
        {
            get
            {
                return _ContactRequest;
            }
            set
            {
                OnContactRequestChanging(value);
                ReportPropertyChanging("ContactRequest");
                _ContactRequest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactRequest");
                OnContactRequestChanged();
            }
        }
        private bool _ContactRequest;
        partial void OnContactRequestChanging(bool value);
        partial void OnContactRequestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Publication
        {
            get
            {
                return _Publication;
            }
            set
            {
                OnPublicationChanging(value);
                ReportPropertyChanging("Publication");
                _Publication = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Publication");
                OnPublicationChanged();
            }
        }
        private bool _Publication;
        partial void OnPublicationChanging(bool value);
        partial void OnPublicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private bool _Comment;
        partial void OnCommentChanging(bool value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool EventInvitation
        {
            get
            {
                return _EventInvitation;
            }
            set
            {
                OnEventInvitationChanging(value);
                ReportPropertyChanging("EventInvitation");
                _EventInvitation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventInvitation");
                OnEventInvitationChanged();
            }
        }
        private bool _EventInvitation;
        partial void OnEventInvitationChanging(bool value);
        partial void OnEventInvitationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool PrivateMessage
        {
            get
            {
                return _PrivateMessage;
            }
            set
            {
                OnPrivateMessageChanging(value);
                ReportPropertyChanging("PrivateMessage");
                _PrivateMessage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivateMessage");
                OnPrivateMessageChanged();
            }
        }
        private bool _PrivateMessage;
        partial void OnPrivateMessageChanging(bool value);
        partial void OnPrivateMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> StartPage
        {
            get
            {
                return _StartPage;
            }
            set
            {
                OnStartPageChanging(value);
                ReportPropertyChanging("StartPage");
                _StartPage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartPage");
                OnStartPageChanged();
            }
        }
        private Nullable<int> _StartPage;
        partial void OnStartPageChanging(Nullable<int> value);
        partial void OnStartPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Newsletter
        {
            get
            {
                return _Newsletter;
            }
            set
            {
                OnNewsletterChanging(value);
                ReportPropertyChanging("Newsletter");
                _Newsletter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Newsletter");
                OnNewsletterChanged();
            }
        }
        private Nullable<bool> _Newsletter;
        partial void OnNewsletterChanging(Nullable<bool> value);
        partial void OnNewsletterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Lang
        {
            get
            {
                return _Lang;
            }
            set
            {
                OnLangChanging(value);
                ReportPropertyChanging("Lang");
                _Lang = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lang");
                OnLangChanged();
            }
        }
        private Nullable<bool> _Lang;
        partial void OnLangChanging(Nullable<bool> value);
        partial void OnLangChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> NotifyOnPersonalEmailAddress
        {
            get
            {
                return _NotifyOnPersonalEmailAddress;
            }
            set
            {
                OnNotifyOnPersonalEmailAddressChanging(value);
                ReportPropertyChanging("NotifyOnPersonalEmailAddress");
                _NotifyOnPersonalEmailAddress = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotifyOnPersonalEmailAddress");
                OnNotifyOnPersonalEmailAddressChanged();
            }
        }
        private Nullable<bool> _NotifyOnPersonalEmailAddress;
        partial void OnNotifyOnPersonalEmailAddressChanging(Nullable<bool> value);
        partial void OnNotifyOnPersonalEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Culture
        {
            get
            {
                return _Culture;
            }
            set
            {
                OnCultureChanging(value);
                ReportPropertyChanging("Culture");
                _Culture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Culture");
                OnCultureChanged();
            }
        }
        private string _Culture;
        partial void OnCultureChanging(string value);
        partial void OnCultureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> DailyNewsletter
        {
            get
            {
                return _DailyNewsletter;
            }
            set
            {
                OnDailyNewsletterChanging(value);
                ReportPropertyChanging("DailyNewsletter");
                _DailyNewsletter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DailyNewsletter");
                OnDailyNewsletterChanged();
            }
        }
        private Nullable<bool> _DailyNewsletter;
        partial void OnDailyNewsletterChanging(Nullable<bool> value);
        partial void OnDailyNewsletterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool PrivateGroupJoinRequest
        {
            get
            {
                return _PrivateGroupJoinRequest;
            }
            set
            {
                OnPrivateGroupJoinRequestChanging(value);
                ReportPropertyChanging("PrivateGroupJoinRequest");
                _PrivateGroupJoinRequest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivateGroupJoinRequest");
                OnPrivateGroupJoinRequestChanged();
            }
        }
        private bool _PrivateGroupJoinRequest;
        partial void OnPrivateGroupJoinRequestChanging(bool value);
        partial void OnPrivateGroupJoinRequestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool MailChimp
        {
            get
            {
                return _MailChimp;
            }
            set
            {
                OnMailChimpChanging(value);
                ReportPropertyChanging("MailChimp");
                _MailChimp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MailChimp");
                OnMailChimpChanged();
            }
        }
        private bool _MailChimp;
        partial void OnMailChimpChanging(bool value);
        partial void OnMailChimpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string MailChimpStatus
        {
            get
            {
                return _MailChimpStatus;
            }
            set
            {
                OnMailChimpStatusChanging(value);
                ReportPropertyChanging("MailChimpStatus");
                _MailChimpStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailChimpStatus");
                OnMailChimpStatusChanged();
            }
        }
        private string _MailChimpStatus;
        partial void OnMailChimpStatusChanging(string value);
        partial void OnMailChimpStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> MailChimpStatusDateUtc
        {
            get
            {
                return _MailChimpStatusDateUtc;
            }
            set
            {
                OnMailChimpStatusDateUtcChanging(value);
                ReportPropertyChanging("MailChimpStatusDateUtc");
                _MailChimpStatusDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MailChimpStatusDateUtc");
                OnMailChimpStatusDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _MailChimpStatusDateUtc;
        partial void OnMailChimpStatusDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnMailChimpStatusDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> MainTimelineItems
        {
            get
            {
                return _MainTimelineItems;
            }
            set
            {
                OnMainTimelineItemsChanging(value);
                ReportPropertyChanging("MainTimelineItems");
                _MainTimelineItems = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainTimelineItems");
                OnMainTimelineItemsChanged();
            }
        }
        private Nullable<bool> _MainTimelineItems;
        partial void OnMainTimelineItemsChanging(Nullable<bool> value);
        partial void OnMainTimelineItemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> MainTimelineComments
        {
            get
            {
                return _MainTimelineComments;
            }
            set
            {
                OnMainTimelineCommentsChanging(value);
                ReportPropertyChanging("MainTimelineComments");
                _MainTimelineComments = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainTimelineComments");
                OnMainTimelineCommentsChanged();
            }
        }
        private Nullable<bool> _MainTimelineComments;
        partial void OnMainTimelineCommentsChanging(Nullable<bool> value);
        partial void OnMainTimelineCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> CompanyTimelineItems
        {
            get
            {
                return _CompanyTimelineItems;
            }
            set
            {
                OnCompanyTimelineItemsChanging(value);
                ReportPropertyChanging("CompanyTimelineItems");
                _CompanyTimelineItems = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyTimelineItems");
                OnCompanyTimelineItemsChanged();
            }
        }
        private Nullable<bool> _CompanyTimelineItems;
        partial void OnCompanyTimelineItemsChanging(Nullable<bool> value);
        partial void OnCompanyTimelineItemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> CompanyTimelineComments
        {
            get
            {
                return _CompanyTimelineComments;
            }
            set
            {
                OnCompanyTimelineCommentsChanging(value);
                ReportPropertyChanging("CompanyTimelineComments");
                _CompanyTimelineComments = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyTimelineComments");
                OnCompanyTimelineCommentsChanged();
            }
        }
        private Nullable<bool> _CompanyTimelineComments;
        partial void OnCompanyTimelineCommentsChanging(Nullable<bool> value);
        partial void OnCompanyTimelineCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Notifications_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Notifications_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Notifications_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Notifications_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Notifications_User", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            ContactRequest,
            Publication,
            Comment,
            EventInvitation,
            PrivateMessage,
            StartPage,
            Newsletter,
            Lang,
            NotifyOnPersonalEmailAddress,
            Culture,
            UserId,
            DailyNewsletter,
            PrivateGroupJoinRequest,
            MailChimp,
            MailChimpStatus,
            MailChimpStatusDateUtc,
            MainTimelineItems,
            MainTimelineComments,
            CompanyTimelineItems,
            CompanyTimelineComments,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Number")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Number : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Number object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="number1">Initial value of the Number1 property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static Number CreateNumber(int id, string name, string number1, int networkId)
        {
            Number number = new Number();
            number.Id = id;
            number.Name = name;
            number.Number1 = number1;
            number.NetworkId = networkId;
            return number;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Number1
        {
            get
            {
                return _Number1;
            }
            set
            {
                OnNumber1Changing(value);
                ReportPropertyChanging("Number1");
                _Number1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number1");
                OnNumber1Changed();
            }
        }
        private string _Number1;
        partial void OnNumber1Changing(string value);
        partial void OnNumber1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Numbers_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Numbers_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Numbers_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Numbers_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Numbers_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            Number1,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Page")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Page : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Page object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="uniqueId">Initial value of the UniqueId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="textId">Initial value of the TextId property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="isPublic">Initial value of the IsPublic property.</param>
        /// <param name="isListed">Initial value of the IsListed property.</param>
        /// <param name="isSearchEnginesIndexed">Initial value of the IsSearchEnginesIndexed property.</param>
        /// <param name="isReadOnly">Initial value of the IsReadOnly property.</param>
        public static Page CreatePage(int id, int networkId, System.Guid uniqueId, System.DateTime dateCreatedUtc, string alias, int textId, bool isEnabled, bool isPublic, bool isListed, bool isSearchEnginesIndexed, bool isReadOnly)
        {
            Page page = new Page();
            page.Id = id;
            page.NetworkId = networkId;
            page.UniqueId = uniqueId;
            page.DateCreatedUtc = dateCreatedUtc;
            page.Alias = alias;
            page.TextId = textId;
            page.IsEnabled = isEnabled;
            page.IsPublic = isPublic;
            page.IsListed = isListed;
            page.IsSearchEnginesIndexed = isSearchEnginesIndexed;
            page.IsReadOnly = isReadOnly;
            return page;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid UniqueId
        {
            get
            {
                return _UniqueId;
            }
            set
            {
                OnUniqueIdChanging(value);
                ReportPropertyChanging("UniqueId");
                _UniqueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueId");
                OnUniqueIdChanged();
            }
        }
        private System.Guid _UniqueId;
        partial void OnUniqueIdChanging(System.Guid value);
        partial void OnUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TextId
        {
            get
            {
                return _TextId;
            }
            set
            {
                OnTextIdChanging(value);
                ReportPropertyChanging("TextId");
                _TextId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TextId");
                OnTextIdChanged();
            }
        }
        private int _TextId;
        partial void OnTextIdChanging(int value);
        partial void OnTextIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private bool _IsEnabled;
        partial void OnIsEnabledChanging(bool value);
        partial void OnIsEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private bool _IsPublic;
        partial void OnIsPublicChanging(bool value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsListed
        {
            get
            {
                return _IsListed;
            }
            set
            {
                OnIsListedChanging(value);
                ReportPropertyChanging("IsListed");
                _IsListed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsListed");
                OnIsListedChanged();
            }
        }
        private bool _IsListed;
        partial void OnIsListedChanging(bool value);
        partial void OnIsListedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsSearchEnginesIndexed
        {
            get
            {
                return _IsSearchEnginesIndexed;
            }
            set
            {
                OnIsSearchEnginesIndexedChanging(value);
                ReportPropertyChanging("IsSearchEnginesIndexed");
                _IsSearchEnginesIndexed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSearchEnginesIndexed");
                OnIsSearchEnginesIndexedChanged();
            }
        }
        private bool _IsSearchEnginesIndexed;
        partial void OnIsSearchEnginesIndexedChanging(bool value);
        partial void OnIsSearchEnginesIndexedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsReadOnly
        {
            get
            {
                return _IsReadOnly;
            }
            set
            {
                OnIsReadOnlyChanging(value);
                ReportPropertyChanging("IsReadOnly");
                _IsReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReadOnly");
                OnIsReadOnlyChanged();
            }
        }
        private bool _IsReadOnly;
        partial void OnIsReadOnlyChanging(bool value);
        partial void OnIsReadOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string SecretCode
        {
            get
            {
                return _SecretCode;
            }
            set
            {
                OnSecretCodeChanging(value);
                ReportPropertyChanging("SecretCode");
                _SecretCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecretCode");
                OnSecretCodeChanged();
            }
        }
        private string _SecretCode;
        partial void OnSecretCodeChanging(string value);
        partial void OnSecretCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_Network", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            NetworkId,
            UniqueId,
            DateCreatedUtc,
            Alias,
            TextId,
            IsEnabled,
            IsPublic,
            IsListed,
            IsSearchEnginesIndexed,
            IsReadOnly,
            SecretCode,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="PartnerResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class PartnerResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartnerResource object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="available">Initial value of the Available property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        public static PartnerResource CreatePartnerResource(int id, int networkId, string name, bool available, int createdByUserId, System.DateTime dateCreatedUtc, string alias, bool isApproved)
        {
            PartnerResource partnerResource = new PartnerResource();
            partnerResource.Id = id;
            partnerResource.NetworkId = networkId;
            partnerResource.Name = name;
            partnerResource.Available = available;
            partnerResource.CreatedByUserId = createdByUserId;
            partnerResource.DateCreatedUtc = dateCreatedUtc;
            partnerResource.Alias = alias;
            partnerResource.IsApproved = isApproved;
            return partnerResource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Available
        {
            get
            {
                return _Available;
            }
            set
            {
                OnAvailableChanging(value);
                ReportPropertyChanging("Available");
                _Available = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Available");
                OnAvailableChanged();
            }
        }
        private bool _Available;
        partial void OnAvailableChanging(bool value);
        partial void OnAvailableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateDeletedUtc
        {
            get
            {
                return _DateDeletedUtc;
            }
            set
            {
                OnDateDeletedUtcChanging(value);
                ReportPropertyChanging("DateDeletedUtc");
                _DateDeletedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeletedUtc");
                OnDateDeletedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateDeletedUtc;
        partial void OnDateDeletedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateDeletedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PictureName
        {
            get
            {
                return _PictureName;
            }
            set
            {
                OnPictureNameChanging(value);
                ReportPropertyChanging("PictureName");
                _PictureName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PictureName");
                OnPictureNameChanged();
            }
        }
        private string _PictureName;
        partial void OnPictureNameChanging(string value);
        partial void OnPictureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateLastPictureUpdateUtc
        {
            get
            {
                return _DateLastPictureUpdateUtc;
            }
            set
            {
                OnDateLastPictureUpdateUtcChanging(value);
                ReportPropertyChanging("DateLastPictureUpdateUtc");
                _DateLastPictureUpdateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateLastPictureUpdateUtc");
                OnDateLastPictureUpdateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateLastPictureUpdateUtc;
        partial void OnDateLastPictureUpdateUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateLastPictureUpdateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private bool _IsApproved;
        partial void OnIsApprovedChanging(bool value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateApprovedUtc
        {
            get
            {
                return _DateApprovedUtc;
            }
            set
            {
                OnDateApprovedUtcChanging(value);
                ReportPropertyChanging("DateApprovedUtc");
                _DateApprovedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateApprovedUtc");
                OnDateApprovedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateApprovedUtc;
        partial void OnDateApprovedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateApprovedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ApprovedByUserId
        {
            get
            {
                return _ApprovedByUserId;
            }
            set
            {
                OnApprovedByUserIdChanging(value);
                ReportPropertyChanging("ApprovedByUserId");
                _ApprovedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedByUserId");
                OnApprovedByUserIdChanged();
            }
        }
        private Nullable<int> _ApprovedByUserId;
        partial void OnApprovedByUserIdChanging(Nullable<int> value);
        partial void OnApprovedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResources_Networks", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_PartnerResources_Networks", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_PartnerResources_Networks", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_PartnerResources_Networks", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_PartnerResources_Networks", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResources_CreatedByUser", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_CreatedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_CreatedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_CreatedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_CreatedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResources_DeletedByUser", "User")]
        public User DeletedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_DeletedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_DeletedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_DeletedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_DeletedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResourcesProfileFields_PartnerResources", "PartnerResourceProfileField")]
        public EntityCollection<PartnerResourceProfileField> PartnerResourceProfileFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartnerResourceProfileField>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_PartnerResources", "PartnerResourceProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartnerResourceProfileField>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_PartnerResources", "PartnerResourceProfileField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResourceTags_PartnerResources", "PartnerResourceTag")]
        public EntityCollection<PartnerResourceTag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartnerResourceTag>("NetworksModel.FK_dbo_PartnerResourceTags_PartnerResources", "PartnerResourceTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartnerResourceTag>("NetworksModel.FK_dbo_PartnerResourceTags_PartnerResources", "PartnerResourceTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItems_PartnerResources", "TimelineItem")]
        public EntityCollection<TimelineItem> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_dbo_TimelineItems_PartnerResources", "TimelineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_dbo_TimelineItems_PartnerResources", "TimelineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResources_ApprovedByUser", "User")]
        public User ApprovedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_ApprovedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_ApprovedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApprovedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_ApprovedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_PartnerResources_ApprovedByUser", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            NetworkId,
            Name,
            Available,
            CreatedByUserId,
            DeletedByUserId,
            DateCreatedUtc,
            DateDeletedUtc,
            Alias,
            PictureName,
            DateLastPictureUpdateUtc,
            IsApproved,
            DateApprovedUtc,
            ApprovedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="PartnerResourceProfileField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class PartnerResourceProfileField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartnerResourceProfileField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partnerResourceId">Initial value of the PartnerResourceId property.</param>
        /// <param name="profileFieldId">Initial value of the ProfileFieldId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="updateCount">Initial value of the UpdateCount property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        public static PartnerResourceProfileField CreatePartnerResourceProfileField(int id, int partnerResourceId, int profileFieldId, string value, System.DateTime dateCreatedUtc, short updateCount, byte source)
        {
            PartnerResourceProfileField partnerResourceProfileField = new PartnerResourceProfileField();
            partnerResourceProfileField.Id = id;
            partnerResourceProfileField.PartnerResourceId = partnerResourceId;
            partnerResourceProfileField.ProfileFieldId = profileFieldId;
            partnerResourceProfileField.Value = value;
            partnerResourceProfileField.DateCreatedUtc = dateCreatedUtc;
            partnerResourceProfileField.UpdateCount = updateCount;
            partnerResourceProfileField.Source = source;
            return partnerResourceProfileField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PartnerResourceId
        {
            get
            {
                return _PartnerResourceId;
            }
            set
            {
                OnPartnerResourceIdChanging(value);
                ReportPropertyChanging("PartnerResourceId");
                _PartnerResourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartnerResourceId");
                OnPartnerResourceIdChanged();
            }
        }
        private int _PartnerResourceId;
        partial void OnPartnerResourceIdChanging(int value);
        partial void OnPartnerResourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ProfileFieldId
        {
            get
            {
                return _ProfileFieldId;
            }
            set
            {
                OnProfileFieldIdChanging(value);
                ReportPropertyChanging("ProfileFieldId");
                _ProfileFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileFieldId");
                OnProfileFieldIdChanged();
            }
        }
        private int _ProfileFieldId;
        partial void OnProfileFieldIdChanging(int value);
        partial void OnProfileFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private string _Value;
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateUpdatedUtc
        {
            get
            {
                return _DateUpdatedUtc;
            }
            set
            {
                OnDateUpdatedUtcChanging(value);
                ReportPropertyChanging("DateUpdatedUtc");
                _DateUpdatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdatedUtc");
                OnDateUpdatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateUpdatedUtc;
        partial void OnDateUpdatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateUpdatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short UpdateCount
        {
            get
            {
                return _UpdateCount;
            }
            set
            {
                OnUpdateCountChanging(value);
                ReportPropertyChanging("UpdateCount");
                _UpdateCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateCount");
                OnUpdateCountChanged();
            }
        }
        private short _UpdateCount;
        partial void OnUpdateCountChanging(short value);
        partial void OnUpdateCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private string _Data;
        partial void OnDataChanging(string value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private byte _Source;
        partial void OnSourceChanging(byte value);
        partial void OnSourceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResourcesProfileFields_PartnerResources", "PartnerResource")]
        public PartnerResource PartnerResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerResource>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_PartnerResources", "PartnerResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerResource>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_PartnerResources", "PartnerResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartnerResource> PartnerResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerResource>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_PartnerResources", "PartnerResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartnerResource>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_PartnerResources", "PartnerResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResourcesProfileFields_ProfileFields", "ProfileField")]
        public ProfileField ProfileField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_ProfileFields", "ProfileField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_ProfileFields", "ProfileField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProfileField> ProfileFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_ProfileFields", "ProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProfileField>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_ProfileFields", "ProfileField", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            PartnerResourceId,
            ProfileFieldId,
            Value,
            DateCreatedUtc,
            DateUpdatedUtc,
            UpdateCount,
            Data,
            Source,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="PartnerResourceTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class PartnerResourceTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PartnerResourceTag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partnerResourceId">Initial value of the PartnerResourceId property.</param>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        public static PartnerResourceTag CreatePartnerResourceTag(int id, int partnerResourceId, int tagId, System.DateTime dateCreatedUtc)
        {
            PartnerResourceTag partnerResourceTag = new PartnerResourceTag();
            partnerResourceTag.Id = id;
            partnerResourceTag.PartnerResourceId = partnerResourceId;
            partnerResourceTag.TagId = tagId;
            partnerResourceTag.DateCreatedUtc = dateCreatedUtc;
            return partnerResourceTag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PartnerResourceId
        {
            get
            {
                return _PartnerResourceId;
            }
            set
            {
                OnPartnerResourceIdChanging(value);
                ReportPropertyChanging("PartnerResourceId");
                _PartnerResourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartnerResourceId");
                OnPartnerResourceIdChanged();
            }
        }
        private int _PartnerResourceId;
        partial void OnPartnerResourceIdChanging(int value);
        partial void OnPartnerResourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                OnTagIdChanging(value);
                ReportPropertyChanging("TagId");
                _TagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagId");
                OnTagIdChanged();
            }
        }
        private int _TagId;
        partial void OnTagIdChanging(int value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResourceTags_PartnerResources", "PartnerResource")]
        public PartnerResource PartnerResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerResource>("NetworksModel.FK_dbo_PartnerResourceTags_PartnerResources", "PartnerResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerResource>("NetworksModel.FK_dbo_PartnerResourceTags_PartnerResources", "PartnerResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartnerResource> PartnerResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerResource>("NetworksModel.FK_dbo_PartnerResourceTags_PartnerResources", "PartnerResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartnerResource>("NetworksModel.FK_dbo_PartnerResourceTags_PartnerResources", "PartnerResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResourceTags_TagDefinitions", "TagDefinition")]
        public TagDefinition TagDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_PartnerResourceTags_TagDefinitions", "TagDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_PartnerResourceTags_TagDefinitions", "TagDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TagDefinition> TagDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_PartnerResourceTags_TagDefinitions", "TagDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TagDefinition>("NetworksModel.FK_dbo_PartnerResourceTags_TagDefinitions", "TagDefinition", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            PartnerResourceId,
            TagId,
            DateCreatedUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Picture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Picture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Picture object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="albumId">Initial value of the AlbumId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Picture CreatePicture(int id, int albumId, System.DateTime date, int userId)
        {
            Picture picture = new Picture();
            picture.Id = id;
            picture.AlbumId = albumId;
            picture.Date = date;
            picture.UserId = userId;
            return picture;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int AlbumId
        {
            get
            {
                return _AlbumId;
            }
            set
            {
                OnAlbumIdChanging(value);
                ReportPropertyChanging("AlbumId");
                _AlbumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlbumId");
                OnAlbumIdChanged();
            }
        }
        private int _AlbumId;
        partial void OnAlbumIdChanging(int value);
        partial void OnAlbumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private string _Comment;
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Pictures_Album", "Albums")]
        public Album Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("NetworksModel.FK_Pictures_Album", "Albums").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("NetworksModel.FK_Pictures_Album", "Albums").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Album> AlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("NetworksModel.FK_Pictures_Album", "Albums");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Album>("NetworksModel.FK_Pictures_Album", "Albums", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            AlbumId,
            Date,
            Comment,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Place")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Place : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Place object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="main">Initial value of the Main property.</param>
        public static Place CreatePlace(int id, int categoryId, string name, string alias, int createdByUserId, int networkId, bool main)
        {
            Place place = new Place();
            place.Id = id;
            place.CategoryId = categoryId;
            place.Name = name;
            place.Alias = alias;
            place.CreatedByUserId = createdByUserId;
            place.NetworkId = networkId;
            place.Main = main;
            return place;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private int _CategoryId;
        partial void OnCategoryIdChanging(int value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private string _Address;
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private string _ZipCode;
        partial void OnZipCodeChanging(string value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private string _Country;
        partial void OnCountryChanging(string value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private string _Building;
        partial void OnBuildingChanging(string value);
        partial void OnBuildingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Floor
        {
            get
            {
                return _Floor;
            }
            set
            {
                OnFloorChanging(value);
                ReportPropertyChanging("Floor");
                _Floor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Floor");
                OnFloorChanged();
            }
        }
        private Nullable<int> _Floor;
        partial void OnFloorChanging(Nullable<int> value);
        partial void OnFloorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Access
        {
            get
            {
                return _Access;
            }
            set
            {
                OnAccessChanging(value);
                ReportPropertyChanging("Access");
                _Access = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Access");
                OnAccessChanged();
            }
        }
        private string _Access;
        partial void OnAccessChanging(string value);
        partial void OnAccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Door
        {
            get
            {
                return _Door;
            }
            set
            {
                OnDoorChanging(value);
                ReportPropertyChanging("Door");
                _Door = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Door");
                OnDoorChanged();
            }
        }
        private string _Door;
        partial void OnDoorChanging(string value);
        partial void OnDoorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<int> _ParentId;
        partial void OnParentIdChanging(Nullable<int> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> PeopleOwner
        {
            get
            {
                return _PeopleOwner;
            }
            set
            {
                OnPeopleOwnerChanging(value);
                ReportPropertyChanging("PeopleOwner");
                _PeopleOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeopleOwner");
                OnPeopleOwnerChanged();
            }
        }
        private Nullable<System.Guid> _PeopleOwner;
        partial void OnPeopleOwnerChanging(Nullable<System.Guid> value);
        partial void OnPeopleOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompanyOwner
        {
            get
            {
                return _CompanyOwner;
            }
            set
            {
                OnCompanyOwnerChanging(value);
                ReportPropertyChanging("CompanyOwner");
                _CompanyOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyOwner");
                OnCompanyOwnerChanged();
            }
        }
        private Nullable<int> _CompanyOwner;
        partial void OnCompanyOwnerChanging(Nullable<int> value);
        partial void OnCompanyOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<double> lat
        {
            get
            {
                return _lat;
            }
            set
            {
                OnlatChanging(value);
                ReportPropertyChanging("lat");
                _lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lat");
                OnlatChanged();
            }
        }
        private Nullable<double> _lat;
        partial void OnlatChanging(Nullable<double> value);
        partial void OnlatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<double> lon
        {
            get
            {
                return _lon;
            }
            set
            {
                OnlonChanging(value);
                ReportPropertyChanging("lon");
                _lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lon");
                OnlonChanged();
            }
        }
        private Nullable<double> _lon;
        partial void OnlonChanging(Nullable<double> value);
        partial void OnlonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FoursquareId
        {
            get
            {
                return _FoursquareId;
            }
            set
            {
                OnFoursquareIdChanging(value);
                ReportPropertyChanging("FoursquareId");
                _FoursquareId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FoursquareId");
                OnFoursquareIdChanged();
            }
        }
        private string _FoursquareId;
        partial void OnFoursquareIdChanging(string value);
        partial void OnFoursquareIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Main
        {
            get
            {
                return _Main;
            }
            set
            {
                OnMainChanging(value);
                ReportPropertyChanging("Main");
                _Main = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Main");
                OnMainChanged();
            }
        }
        private bool _Main;
        partial void OnMainChanging(bool value);
        partial void OnMainChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Places_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Places_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Places_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Places_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_Places_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Places_PlaceCategories", "PlaceCategories")]
        public PlaceCategory PlaceCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlaceCategory>("NetworksModel.FK_Places_PlaceCategories", "PlaceCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlaceCategory>("NetworksModel.FK_Places_PlaceCategories", "PlaceCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PlaceCategory> PlaceCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlaceCategory>("NetworksModel.FK_Places_PlaceCategories", "PlaceCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PlaceCategory>("NetworksModel.FK_Places_PlaceCategories", "PlaceCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_PlacesHistory_Places", "PlaceHistory")]
        public EntityCollection<PlaceHistory> PlaceHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlaceHistory>("NetworksModel.FK_PlacesHistory_Places", "PlaceHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlaceHistory>("NetworksModel.FK_PlacesHistory_Places", "PlaceHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_Place", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("NetworksModel.FK_Events_Place", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("NetworksModel.FK_Events_Place", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Places_ParentPlace", "Place1")]
        public EntityCollection<Place> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Place>("NetworksModel.FK_Places_ParentPlace", "Place1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Place>("NetworksModel.FK_Places_ParentPlace", "Place1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Places_ParentPlace", "Place")]
        public Place Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_Places_ParentPlace", "Place").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_Places_ParentPlace", "Place").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Place> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_Places_ParentPlace", "Place");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Place>("NetworksModel.FK_Places_ParentPlace", "Place", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Places_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Places_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Places_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Places_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Places_NetworkId", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyPlaces_Places", "CompanyPlace")]
        public EntityCollection<CompanyPlace> CompanyPlaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPlace>("NetworksModel.FK_dbo_CompanyPlaces_Places", "CompanyPlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPlace>("NetworksModel.FK_dbo_CompanyPlaces_Places", "CompanyPlace", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PlaceProfileFields_Places", "PlaceProfileField")]
        public EntityCollection<PlaceProfileField> PlaceProfileFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlaceProfileField>("NetworksModel.FK_dbo_PlaceProfileFields_Places", "PlaceProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlaceProfileField>("NetworksModel.FK_dbo_PlaceProfileFields_Places", "PlaceProfileField", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CategoryId,
            Name,
            Alias,
            Description,
            Address,
            ZipCode,
            City,
            Country,
            Building,
            Floor,
            Access,
            Door,
            ParentId,
            PeopleOwner,
            CompanyOwner,
            Phone,
            CreatedByUserId,
            lat,
            lon,
            FoursquareId,
            NetworkId,
            Main,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="PlaceCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class PlaceCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlaceCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PlaceCategory CreatePlaceCategory(int id, int parentId, string name)
        {
            PlaceCategory placeCategory = new PlaceCategory();
            placeCategory.Id = id;
            placeCategory.ParentId = parentId;
            placeCategory.Name = name;
            return placeCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private int _ParentId;
        partial void OnParentIdChanging(int value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private string _Color;
        partial void OnColorChanging(string value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private string _Symbol;
        partial void OnSymbolChanging(string value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FoursquareId
        {
            get
            {
                return _FoursquareId;
            }
            set
            {
                OnFoursquareIdChanging(value);
                ReportPropertyChanging("FoursquareId");
                _FoursquareId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FoursquareId");
                OnFoursquareIdChanged();
            }
        }
        private string _FoursquareId;
        partial void OnFoursquareIdChanging(string value);
        partial void OnFoursquareIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> LastUpdateDateUtc
        {
            get
            {
                return _LastUpdateDateUtc;
            }
            set
            {
                OnLastUpdateDateUtcChanging(value);
                ReportPropertyChanging("LastUpdateDateUtc");
                _LastUpdateDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateDateUtc");
                OnLastUpdateDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _LastUpdateDateUtc;
        partial void OnLastUpdateDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnLastUpdateDateUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Places_PlaceCategories", "Places")]
        public EntityCollection<Place> Places
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Place>("NetworksModel.FK_Places_PlaceCategories", "Places");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Place>("NetworksModel.FK_Places_PlaceCategories", "Places", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ParentId,
            Name,
            Color,
            Symbol,
            FoursquareId,
            LastUpdateDateUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="PlaceHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class PlaceHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlaceHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="placeId">Initial value of the PlaceId property.</param>
        /// <param name="placeParentId">Initial value of the PlaceParentId property.</param>
        /// <param name="day">Initial value of the Day property.</param>
        /// <param name="hour">Initial value of the Hour property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static PlaceHistory CreatePlaceHistory(int id, int placeId, int placeParentId, System.DateTime day, System.TimeSpan hour, int userId)
        {
            PlaceHistory placeHistory = new PlaceHistory();
            placeHistory.Id = id;
            placeHistory.PlaceId = placeId;
            placeHistory.PlaceParentId = placeParentId;
            placeHistory.Day = day;
            placeHistory.Hour = hour;
            placeHistory.UserId = userId;
            return placeHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                OnPlaceIdChanging(value);
                ReportPropertyChanging("PlaceId");
                _PlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceId");
                OnPlaceIdChanged();
            }
        }
        private int _PlaceId;
        partial void OnPlaceIdChanging(int value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PlaceParentId
        {
            get
            {
                return _PlaceParentId;
            }
            set
            {
                OnPlaceParentIdChanging(value);
                ReportPropertyChanging("PlaceParentId");
                _PlaceParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceParentId");
                OnPlaceParentIdChanged();
            }
        }
        private int _PlaceParentId;
        partial void OnPlaceParentIdChanging(int value);
        partial void OnPlaceParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private System.DateTime _Day;
        partial void OnDayChanging(System.DateTime value);
        partial void OnDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.TimeSpan Hour
        {
            get
            {
                return _Hour;
            }
            set
            {
                OnHourChanging(value);
                ReportPropertyChanging("Hour");
                _Hour = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hour");
                OnHourChanged();
            }
        }
        private System.TimeSpan _Hour;
        partial void OnHourChanging(System.TimeSpan value);
        partial void OnHourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Activity
        {
            get
            {
                return _Activity;
            }
            set
            {
                OnActivityChanging(value);
                ReportPropertyChanging("Activity");
                _Activity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Activity");
                OnActivityChanged();
            }
        }
        private Nullable<int> _Activity;
        partial void OnActivityChanging(Nullable<int> value);
        partial void OnActivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_PlacesHistory_Places", "Places")]
        public Place Place
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_PlacesHistory_Places", "Places").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_PlacesHistory_Places", "Places").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Place> PlaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_PlacesHistory_Places", "Places");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Place>("NetworksModel.FK_PlacesHistory_Places", "Places", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            PlaceId,
            PlaceParentId,
            Day,
            Hour,
            Activity,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="PlaceProfileField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class PlaceProfileField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlaceProfileField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="placeId">Initial value of the PlaceId property.</param>
        /// <param name="profileFieldId">Initial value of the ProfileFieldId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="updateCount">Initial value of the UpdateCount property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        public static PlaceProfileField CreatePlaceProfileField(int id, int placeId, int profileFieldId, string value, System.DateTime dateCreatedUtc, short updateCount, byte source)
        {
            PlaceProfileField placeProfileField = new PlaceProfileField();
            placeProfileField.Id = id;
            placeProfileField.PlaceId = placeId;
            placeProfileField.ProfileFieldId = profileFieldId;
            placeProfileField.Value = value;
            placeProfileField.DateCreatedUtc = dateCreatedUtc;
            placeProfileField.UpdateCount = updateCount;
            placeProfileField.Source = source;
            return placeProfileField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                OnPlaceIdChanging(value);
                ReportPropertyChanging("PlaceId");
                _PlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceId");
                OnPlaceIdChanged();
            }
        }
        private int _PlaceId;
        partial void OnPlaceIdChanging(int value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ProfileFieldId
        {
            get
            {
                return _ProfileFieldId;
            }
            set
            {
                OnProfileFieldIdChanging(value);
                ReportPropertyChanging("ProfileFieldId");
                _ProfileFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileFieldId");
                OnProfileFieldIdChanged();
            }
        }
        private int _ProfileFieldId;
        partial void OnProfileFieldIdChanging(int value);
        partial void OnProfileFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private string _Value;
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateUpdatedUtc
        {
            get
            {
                return _DateUpdatedUtc;
            }
            set
            {
                OnDateUpdatedUtcChanging(value);
                ReportPropertyChanging("DateUpdatedUtc");
                _DateUpdatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdatedUtc");
                OnDateUpdatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateUpdatedUtc;
        partial void OnDateUpdatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateUpdatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short UpdateCount
        {
            get
            {
                return _UpdateCount;
            }
            set
            {
                OnUpdateCountChanging(value);
                ReportPropertyChanging("UpdateCount");
                _UpdateCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateCount");
                OnUpdateCountChanged();
            }
        }
        private short _UpdateCount;
        partial void OnUpdateCountChanging(short value);
        partial void OnUpdateCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private byte _Source;
        partial void OnSourceChanging(byte value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private string _Data;
        partial void OnDataChanging(string value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PlaceProfileFields_Places", "Place")]
        public Place Place
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_dbo_PlaceProfileFields_Places", "Place").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_dbo_PlaceProfileFields_Places", "Place").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Place> PlaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("NetworksModel.FK_dbo_PlaceProfileFields_Places", "Place");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Place>("NetworksModel.FK_dbo_PlaceProfileFields_Places", "Place", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PlaceProfileFields_ProfileFields", "ProfileField")]
        public ProfileField ProfileField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_PlaceProfileFields_ProfileFields", "ProfileField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_PlaceProfileFields_ProfileFields", "ProfileField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProfileField> ProfileFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_PlaceProfileFields_ProfileFields", "ProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProfileField>("NetworksModel.FK_dbo_PlaceProfileFields_ProfileFields", "ProfileField", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            PlaceId,
            ProfileFieldId,
            Value,
            DateCreatedUtc,
            DateUpdatedUtc,
            UpdateCount,
            Source,
            Data,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Poll")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Poll : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Poll object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="question">Initial value of the Question property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static Poll CreatePoll(int id, string question, int createdByUserId)
        {
            Poll poll = new Poll();
            poll.Id = id;
            poll.Question = question;
            poll.CreatedByUserId = createdByUserId;
            return poll;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private string _Question;
        partial void OnQuestionChanging(string value);
        partial void OnQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_PollAnswers_Polls", "PollAnswers")]
        public EntityCollection<PollAnswer> PollAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PollAnswer>("NetworksModel.FK_PollAnswers_Polls", "PollAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PollAnswer>("NetworksModel.FK_PollAnswers_Polls", "PollAnswers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_PollChoices_Polls", "PollChoices")]
        public EntityCollection<PollChoice> PollChoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PollChoice>("NetworksModel.FK_PollChoices_Polls", "PollChoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PollChoice>("NetworksModel.FK_PollChoices_Polls", "PollChoices", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Question,
            CreatedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="PollAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class PollAnswer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PollAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pollId">Initial value of the PollId property.</param>
        /// <param name="choiceId">Initial value of the ChoiceId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static PollAnswer CreatePollAnswer(int id, int pollId, int choiceId, int userId)
        {
            PollAnswer pollAnswer = new PollAnswer();
            pollAnswer.Id = id;
            pollAnswer.PollId = pollId;
            pollAnswer.ChoiceId = choiceId;
            pollAnswer.UserId = userId;
            return pollAnswer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PollId
        {
            get
            {
                return _PollId;
            }
            set
            {
                OnPollIdChanging(value);
                ReportPropertyChanging("PollId");
                _PollId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PollId");
                OnPollIdChanged();
            }
        }
        private int _PollId;
        partial void OnPollIdChanging(int value);
        partial void OnPollIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ChoiceId
        {
            get
            {
                return _ChoiceId;
            }
            set
            {
                OnChoiceIdChanging(value);
                ReportPropertyChanging("ChoiceId");
                _ChoiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChoiceId");
                OnChoiceIdChanged();
            }
        }
        private int _ChoiceId;
        partial void OnChoiceIdChanging(int value);
        partial void OnChoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_PollAnswers_PollChoices", "PollChoices")]
        public PollChoice PollChoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PollChoice>("NetworksModel.FK_PollAnswers_PollChoices", "PollChoices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PollChoice>("NetworksModel.FK_PollAnswers_PollChoices", "PollChoices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PollChoice> PollChoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PollChoice>("NetworksModel.FK_PollAnswers_PollChoices", "PollChoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PollChoice>("NetworksModel.FK_PollAnswers_PollChoices", "PollChoices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_PollAnswers_Polls", "Polls")]
        public Poll Poll
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("NetworksModel.FK_PollAnswers_Polls", "Polls").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("NetworksModel.FK_PollAnswers_Polls", "Polls").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Poll> PollReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("NetworksModel.FK_PollAnswers_Polls", "Polls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Poll>("NetworksModel.FK_PollAnswers_Polls", "Polls", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            PollId,
            ChoiceId,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="PollChoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class PollChoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PollChoice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pollId">Initial value of the PollId property.</param>
        /// <param name="choice">Initial value of the Choice property.</param>
        public static PollChoice CreatePollChoice(int id, int pollId, string choice)
        {
            PollChoice pollChoice = new PollChoice();
            pollChoice.Id = id;
            pollChoice.PollId = pollId;
            pollChoice.Choice = choice;
            return pollChoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PollId
        {
            get
            {
                return _PollId;
            }
            set
            {
                OnPollIdChanging(value);
                ReportPropertyChanging("PollId");
                _PollId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PollId");
                OnPollIdChanged();
            }
        }
        private int _PollId;
        partial void OnPollIdChanging(int value);
        partial void OnPollIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Choice
        {
            get
            {
                return _Choice;
            }
            set
            {
                OnChoiceChanging(value);
                ReportPropertyChanging("Choice");
                _Choice = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Choice");
                OnChoiceChanged();
            }
        }
        private string _Choice;
        partial void OnChoiceChanging(string value);
        partial void OnChoiceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_PollAnswers_PollChoices", "PollAnswers")]
        public EntityCollection<PollAnswer> PollAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PollAnswer>("NetworksModel.FK_PollAnswers_PollChoices", "PollAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PollAnswer>("NetworksModel.FK_PollAnswers_PollChoices", "PollAnswers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_PollChoices_Polls", "Polls")]
        public Poll Poll
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("NetworksModel.FK_PollChoices_Polls", "Polls").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("NetworksModel.FK_PollChoices_Polls", "Polls").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Poll> PollReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("NetworksModel.FK_PollChoices_Polls", "Polls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Poll>("NetworksModel.FK_PollChoices_Polls", "Polls", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            PollId,
            Choice,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ProfileField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ProfileField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProfileField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="applyToUsers">Initial value of the ApplyToUsers property.</param>
        /// <param name="applyToCompanies">Initial value of the ApplyToCompanies property.</param>
        public static ProfileField CreateProfileField(int id, string name, bool applyToUsers, bool applyToCompanies)
        {
            ProfileField profileField = new ProfileField();
            profileField.Id = id;
            profileField.Name = name;
            profileField.ApplyToUsers = applyToUsers;
            profileField.ApplyToCompanies = applyToCompanies;
            return profileField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool ApplyToUsers
        {
            get
            {
                return _ApplyToUsers;
            }
            set
            {
                OnApplyToUsersChanging(value);
                ReportPropertyChanging("ApplyToUsers");
                _ApplyToUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplyToUsers");
                OnApplyToUsersChanged();
            }
        }
        private bool _ApplyToUsers;
        partial void OnApplyToUsersChanging(bool value);
        partial void OnApplyToUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool ApplyToCompanies
        {
            get
            {
                return _ApplyToCompanies;
            }
            set
            {
                OnApplyToCompaniesChanging(value);
                ReportPropertyChanging("ApplyToCompanies");
                _ApplyToCompanies = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplyToCompanies");
                OnApplyToCompaniesChanged();
            }
        }
        private bool _ApplyToCompanies;
        partial void OnApplyToCompaniesChanging(bool value);
        partial void OnApplyToCompaniesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Rules
        {
            get
            {
                return _Rules;
            }
            set
            {
                OnRulesChanging(value);
                ReportPropertyChanging("Rules");
                _Rules = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rules");
                OnRulesChanged();
            }
        }
        private string _Rules;
        partial void OnRulesChanging(string value);
        partial void OnRulesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserProfileFields_ProfileFields", "UserProfileField")]
        public EntityCollection<UserProfileField> UserProfileFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfileField>("NetworksModel.FK_dbo_UserProfileFields_ProfileFields", "UserProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfileField>("NetworksModel.FK_dbo_UserProfileFields_ProfileFields", "UserProfileField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ProfileFieldsAvailiableValues_ProfileFields", "ProfileFieldsAvailiableValue")]
        public EntityCollection<ProfileFieldsAvailiableValue> AvailiableValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProfileFieldsAvailiableValue>("NetworksModel.FK_ProfileFieldsAvailiableValues_ProfileFields", "ProfileFieldsAvailiableValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProfileFieldsAvailiableValue>("NetworksModel.FK_ProfileFieldsAvailiableValues_ProfileFields", "ProfileFieldsAvailiableValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyProfileFields_ProfileFields", "CompanyProfileField")]
        public EntityCollection<CompanyProfileField> CompanyProfileFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyProfileField>("NetworksModel.FK_dbo_CompanyProfileFields_ProfileFields", "CompanyProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyProfileField>("NetworksModel.FK_dbo_CompanyProfileFields_ProfileFields", "CompanyProfileField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResourcesProfileFields_ProfileFields", "PartnerResourceProfileField")]
        public EntityCollection<PartnerResourceProfileField> PartnerResourceProfileFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartnerResourceProfileField>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_ProfileFields", "PartnerResourceProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartnerResourceProfileField>("NetworksModel.FK_dbo_PartnerResourcesProfileFields_ProfileFields", "PartnerResourceProfileField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PlaceProfileFields_ProfileFields", "PlaceProfileField")]
        public EntityCollection<PlaceProfileField> PlaceProfileFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlaceProfileField>("NetworksModel.FK_dbo_PlaceProfileFields_ProfileFields", "PlaceProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlaceProfileField>("NetworksModel.FK_dbo_PlaceProfileFields_ProfileFields", "PlaceProfileField", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            ApplyToUsers,
            ApplyToCompanies,
            Rules,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ProfileFieldsAvailiableValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ProfileFieldsAvailiableValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProfileFieldsAvailiableValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="profileFieldId">Initial value of the ProfileFieldId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ProfileFieldsAvailiableValue CreateProfileFieldsAvailiableValue(int id, int profileFieldId, string value)
        {
            ProfileFieldsAvailiableValue profileFieldsAvailiableValue = new ProfileFieldsAvailiableValue();
            profileFieldsAvailiableValue.Id = id;
            profileFieldsAvailiableValue.ProfileFieldId = profileFieldId;
            profileFieldsAvailiableValue.Value = value;
            return profileFieldsAvailiableValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ProfileFieldId
        {
            get
            {
                return _ProfileFieldId;
            }
            set
            {
                OnProfileFieldIdChanging(value);
                ReportPropertyChanging("ProfileFieldId");
                _ProfileFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileFieldId");
                OnProfileFieldIdChanged();
            }
        }
        private int _ProfileFieldId;
        partial void OnProfileFieldIdChanging(int value);
        partial void OnProfileFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private string _Value;
        partial void OnValueChanging(string value);
        partial void OnValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ProfileFieldsAvailiableValues_ProfileFields", "ProfileField")]
        public ProfileField ProfileField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_ProfileFieldsAvailiableValues_ProfileFields", "ProfileField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_ProfileFieldsAvailiableValues_ProfileFields", "ProfileField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProfileField> ProfileFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_ProfileFieldsAvailiableValues_ProfileFields", "ProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProfileField>("NetworksModel.FK_ProfileFieldsAvailiableValues_ProfileFields", "ProfileField", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ProfileFieldId,
            Value,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Replaced by groups.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerType">Initial value of the OwnerType property.</param>
        /// <param name="ownerValue">Initial value of the OwnerValue property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static Project CreateProject(int id, int ownerType, int ownerValue, int createdByUserId)
        {
            Project project = new Project();
            project.Id = id;
            project.OwnerType = ownerType;
            project.OwnerValue = ownerValue;
            project.CreatedByUserId = createdByUserId;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsPrivate
        {
            get
            {
                return _IsPrivate;
            }
            set
            {
                OnIsPrivateChanging(value);
                ReportPropertyChanging("IsPrivate");
                _IsPrivate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrivate");
                OnIsPrivateChanged();
            }
        }
        private Nullable<bool> _IsPrivate;
        partial void OnIsPrivateChanging(Nullable<bool> value);
        partial void OnIsPrivateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int OwnerType
        {
            get
            {
                return _OwnerType;
            }
            set
            {
                OnOwnerTypeChanging(value);
                ReportPropertyChanging("OwnerType");
                _OwnerType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerType");
                OnOwnerTypeChanged();
            }
        }
        private int _OwnerType;
        partial void OnOwnerTypeChanging(int value);
        partial void OnOwnerTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int OwnerValue
        {
            get
            {
                return _OwnerValue;
            }
            set
            {
                OnOwnerValueChanging(value);
                ReportPropertyChanging("OwnerValue");
                _OwnerValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerValue");
                OnOwnerValueChanged();
            }
        }
        private int _OwnerValue;
        partial void OnOwnerValueChanging(int value);
        partial void OnOwnerValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ProjectMembers_Project", "ProjectMembers")]
        public EntityCollection<ProjectMember> ProjectMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectMember>("NetworksModel.FK_ProjectMembers_Project", "ProjectMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectMember>("NetworksModel.FK_ProjectMembers_Project", "ProjectMembers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_ProjectTimeline", "TimelineItems")]
        public EntityCollection<TimelineItem> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_ProjectTimeline", "TimelineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_ProjectTimeline", "TimelineItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_Project", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("NetworksModel.FK_Events_Project", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("NetworksModel.FK_Events_Project", "Event", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            IsPrivate,
            Name,
            Description,
            OwnerType,
            OwnerValue,
            CreatedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Replaced by groups.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ProjectMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ProjectMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectMember object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static ProjectMember CreateProjectMember(int id, int projectId, int userId)
        {
            ProjectMember projectMember = new ProjectMember();
            projectMember.Id = id;
            projectMember.ProjectId = projectId;
            projectMember.UserId = userId;
            return projectMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private int _ProjectId;
        partial void OnProjectIdChanging(int value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Notifications
        {
            get
            {
                return _Notifications;
            }
            set
            {
                OnNotificationsChanging(value);
                ReportPropertyChanging("Notifications");
                _Notifications = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notifications");
                OnNotificationsChanged();
            }
        }
        private Nullable<int> _Notifications;
        partial void OnNotificationsChanging(Nullable<int> value);
        partial void OnNotificationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Rights
        {
            get
            {
                return _Rights;
            }
            set
            {
                OnRightsChanging(value);
                ReportPropertyChanging("Rights");
                _Rights = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rights");
                OnRightsChanged();
            }
        }
        private Nullable<int> _Rights;
        partial void OnRightsChanging(Nullable<int> value);
        partial void OnRightsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ProjectMembers_Project", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("NetworksModel.FK_ProjectMembers_Project", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("NetworksModel.FK_ProjectMembers_Project", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("NetworksModel.FK_ProjectMembers_Project", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("NetworksModel.FK_ProjectMembers_Project", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ProjectMembers_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ProjectMembers_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ProjectMembers_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_ProjectMembers_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_ProjectMembers_User", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ProjectId,
            Notifications,
            Rights,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Recreation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Recreation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Recreation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static Recreation CreateRecreation(int id, int parentId, string tagName, System.DateTime date, int createdByUserId)
        {
            Recreation recreation = new Recreation();
            recreation.Id = id;
            recreation.ParentId = parentId;
            recreation.TagName = tagName;
            recreation.Date = date;
            recreation.CreatedByUserId = createdByUserId;
            return recreation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private int _ParentId;
        partial void OnParentIdChanging(int value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private string _TagName;
        partial void OnTagNameChanging(string value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Recreations_Users", "Users")]
        public User CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Recreations_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Recreations_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Recreations_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Recreations_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserRecreations_Recreation", "UserRecreations")]
        public EntityCollection<UserRecreation> UserRecreations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRecreation>("NetworksModel.FK_UserRecreations_Recreation", "UserRecreations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRecreation>("NetworksModel.FK_UserRecreations_Recreation", "UserRecreations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupRecreations_Skill", "GroupRecreation")]
        public EntityCollection<GroupRecreation> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupRecreation>("NetworksModel.FK_dbo_GroupRecreations_Skill", "GroupRecreation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupRecreation>("NetworksModel.FK_dbo_GroupRecreations_Skill", "GroupRecreation", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ParentId,
            TagName,
            Date,
            CreatedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="RegisterRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class RegisterRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegisterRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="emailDomain">Initial value of the EmailDomain property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="emailAccountPart">Initial value of the EmailAccountPart property.</param>
        public static RegisterRequest CreateRegisterRequest(int id, string emailDomain, System.DateTime dateCreatedUtc, short status, int networkId, string emailAccountPart)
        {
            RegisterRequest registerRequest = new RegisterRequest();
            registerRequest.Id = id;
            registerRequest.EmailDomain = emailDomain;
            registerRequest.DateCreatedUtc = dateCreatedUtc;
            registerRequest.Status = status;
            registerRequest.NetworkId = networkId;
            registerRequest.EmailAccountPart = emailAccountPart;
            return registerRequest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string EmailDomain
        {
            get
            {
                return _EmailDomain;
            }
            set
            {
                OnEmailDomainChanging(value);
                ReportPropertyChanging("EmailDomain");
                _EmailDomain = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailDomain");
                OnEmailDomainChanged();
            }
        }
        private string _EmailDomain;
        partial void OnEmailDomainChanging(string value);
        partial void OnEmailDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private string _CompanyName;
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateUpdatedUtc
        {
            get
            {
                return _DateUpdatedUtc;
            }
            set
            {
                OnDateUpdatedUtcChanging(value);
                ReportPropertyChanging("DateUpdatedUtc");
                _DateUpdatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdatedUtc");
                OnDateUpdatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateUpdatedUtc;
        partial void OnDateUpdatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateUpdatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private short _Status;
        partial void OnStatusChanging(short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ReplyUserId
        {
            get
            {
                return _ReplyUserId;
            }
            set
            {
                OnReplyUserIdChanging(value);
                ReportPropertyChanging("ReplyUserId");
                _ReplyUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReplyUserId");
                OnReplyUserIdChanged();
            }
        }
        private Nullable<int> _ReplyUserId;
        partial void OnReplyUserIdChanging(Nullable<int> value);
        partial void OnReplyUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ValidatedByUserId
        {
            get
            {
                return _ValidatedByUserId;
            }
            set
            {
                OnValidatedByUserIdChanging(value);
                ReportPropertyChanging("ValidatedByUserId");
                _ValidatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidatedByUserId");
                OnValidatedByUserIdChanged();
            }
        }
        private Nullable<int> _ValidatedByUserId;
        partial void OnValidatedByUserIdChanging(Nullable<int> value);
        partial void OnValidatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string EmailAccountPart
        {
            get
            {
                return _EmailAccountPart;
            }
            set
            {
                OnEmailAccountPartChanging(value);
                ReportPropertyChanging("EmailAccountPart");
                _EmailAccountPart = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAccountPart");
                OnEmailAccountPartChanged();
            }
        }
        private string _EmailAccountPart;
        partial void OnEmailAccountPartChanging(string value);
        partial void OnEmailAccountPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string EmailTagPart
        {
            get
            {
                return _EmailTagPart;
            }
            set
            {
                OnEmailTagPartChanging(value);
                ReportPropertyChanging("EmailTagPart");
                _EmailTagPart = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailTagPart");
                OnEmailTagPartChanged();
            }
        }
        private string _EmailTagPart;
        partial void OnEmailTagPartChanging(string value);
        partial void OnEmailTagPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<int> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<int> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private Nullable<System.Guid> _Code;
        partial void OnCodeChanging(Nullable<System.Guid> value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AcceptedInvitationId
        {
            get
            {
                return _AcceptedInvitationId;
            }
            set
            {
                OnAcceptedInvitationIdChanging(value);
                ReportPropertyChanging("AcceptedInvitationId");
                _AcceptedInvitationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedInvitationId");
                OnAcceptedInvitationIdChanged();
            }
        }
        private Nullable<int> _AcceptedInvitationId;
        partial void OnAcceptedInvitationIdChanging(Nullable<int> value);
        partial void OnAcceptedInvitationIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisterRequests_ReplyUserId", "User")]
        public User RepliedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_RegisterRequests_ReplyUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_RegisterRequests_ReplyUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> RepliedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_RegisterRequests_ReplyUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_RegisterRequests_ReplyUserId", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisterRequests_ValidatedByUserId", "User")]
        public User ValidatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_RegisterRequests_ValidatedByUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_RegisterRequests_ValidatedByUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ValidatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_RegisterRequests_ValidatedByUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_RegisterRequests_ValidatedByUserId", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisterRequests_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_RegisterRequests_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_RegisterRequests_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_RegisterRequests_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_RegisterRequests_NetworkId", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisterRequests_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_RegisterRequests_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_RegisterRequests_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_RegisterRequests_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_RegisterRequests_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisterRequests_AcceptedInvitation", "Invited")]
        public Invited AcceptedInvitation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invited>("NetworksModel.FK_RegisterRequests_AcceptedInvitation", "Invited").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invited>("NetworksModel.FK_RegisterRequests_AcceptedInvitation", "Invited").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invited> AcceptedInvitationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invited>("NetworksModel.FK_RegisterRequests_AcceptedInvitation", "Invited");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invited>("NetworksModel.FK_RegisterRequests_AcceptedInvitation", "Invited", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            EmailDomain,
            CompanyName,
            DateCreatedUtc,
            DateUpdatedUtc,
            Status,
            ReplyUserId,
            ValidatedByUserId,
            NetworkId,
            EmailAccountPart,
            EmailTagPart,
            CompanyId,
            Code,
            AcceptedInvitationId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Relationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Relationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Relationship object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Relationship CreateRelationship(int id, string name)
        {
            Relationship relationship = new Relationship();
            relationship.Id = id;
            relationship.Name = name;
            return relationship;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private Nullable<int> _Gender;
        partial void OnGenderChanging(Nullable<int> value);
        partial void OnGenderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Users_Relationship", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("NetworksModel.FK_Users_Relationship", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("NetworksModel.FK_Users_Relationship", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            Gender,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="RequestForProposal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class RequestForProposal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestForProposal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companySector">Initial value of the CompanySector property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="companyEmail">Initial value of the CompanyEmail property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="deadline">Initial value of the Deadline property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static RequestForProposal CreateRequestForProposal(int id, string companySector, string companyName, string companyEmail, string category, string description, System.DateTime date, System.DateTime deadline, int networkId)
        {
            RequestForProposal requestForProposal = new RequestForProposal();
            requestForProposal.Id = id;
            requestForProposal.CompanySector = companySector;
            requestForProposal.CompanyName = companyName;
            requestForProposal.CompanyEmail = companyEmail;
            requestForProposal.Category = category;
            requestForProposal.Description = description;
            requestForProposal.Date = date;
            requestForProposal.Deadline = deadline;
            requestForProposal.NetworkId = networkId;
            return requestForProposal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string CompanySector
        {
            get
            {
                return _CompanySector;
            }
            set
            {
                OnCompanySectorChanging(value);
                ReportPropertyChanging("CompanySector");
                _CompanySector = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanySector");
                OnCompanySectorChanged();
            }
        }
        private string _CompanySector;
        partial void OnCompanySectorChanging(string value);
        partial void OnCompanySectorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private string _CompanyName;
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string CompanyEmail
        {
            get
            {
                return _CompanyEmail;
            }
            set
            {
                OnCompanyEmailChanging(value);
                ReportPropertyChanging("CompanyEmail");
                _CompanyEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyEmail");
                OnCompanyEmailChanged();
            }
        }
        private string _CompanyEmail;
        partial void OnCompanyEmailChanging(string value);
        partial void OnCompanyEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CompanyPhoneNumber
        {
            get
            {
                return _CompanyPhoneNumber;
            }
            set
            {
                OnCompanyPhoneNumberChanging(value);
                ReportPropertyChanging("CompanyPhoneNumber");
                _CompanyPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyPhoneNumber");
                OnCompanyPhoneNumberChanged();
            }
        }
        private string _CompanyPhoneNumber;
        partial void OnCompanyPhoneNumberChanging(string value);
        partial void OnCompanyPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private string _Category;
        partial void OnCategoryChanging(string value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> MinBudget
        {
            get
            {
                return _MinBudget;
            }
            set
            {
                OnMinBudgetChanging(value);
                ReportPropertyChanging("MinBudget");
                _MinBudget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinBudget");
                OnMinBudgetChanged();
            }
        }
        private Nullable<int> _MinBudget;
        partial void OnMinBudgetChanging(Nullable<int> value);
        partial void OnMinBudgetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> MaxBudget
        {
            get
            {
                return _MaxBudget;
            }
            set
            {
                OnMaxBudgetChanging(value);
                ReportPropertyChanging("MaxBudget");
                _MaxBudget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxBudget");
                OnMaxBudgetChanged();
            }
        }
        private Nullable<int> _MaxBudget;
        partial void OnMaxBudgetChanging(Nullable<int> value);
        partial void OnMaxBudgetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Deadline
        {
            get
            {
                return _Deadline;
            }
            set
            {
                OnDeadlineChanging(value);
                ReportPropertyChanging("Deadline");
                _Deadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deadline");
                OnDeadlineChanged();
            }
        }
        private System.DateTime _Deadline;
        partial void OnDeadlineChanging(System.DateTime value);
        partial void OnDeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RequestsForProposal_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_RequestsForProposal_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_RequestsForProposal_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_RequestsForProposal_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_RequestsForProposal_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanySector,
            CompanyName,
            CompanyEmail,
            CompanyPhoneNumber,
            Category,
            Description,
            MinBudget,
            MaxBudget,
            Date,
            Deadline,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Resume")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Resume : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Resume object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="objective">Initial value of the Objective property.</param>
        /// <param name="about">Initial value of the About property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="pin">Initial value of the Pin property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="requestType">Initial value of the RequestType property.</param>
        /// <param name="createdDateUtc">Initial value of the CreatedDateUtc property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Resume CreateResume(int id, string firstName, string lastName, int gender, string objective, string about, string email, string phone, string pin, int networkId, bool isApproved, byte requestType, System.DateTime createdDateUtc, bool isActive)
        {
            Resume resume = new Resume();
            resume.Id = id;
            resume.FirstName = firstName;
            resume.LastName = lastName;
            resume.Gender = gender;
            resume.Objective = objective;
            resume.About = about;
            resume.Email = email;
            resume.Phone = phone;
            resume.Pin = pin;
            resume.NetworkId = networkId;
            resume.IsApproved = isApproved;
            resume.RequestType = requestType;
            resume.CreatedDateUtc = createdDateUtc;
            resume.IsActive = isActive;
            return resume;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private int _Gender;
        partial void OnGenderChanging(int value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Objective
        {
            get
            {
                return _Objective;
            }
            set
            {
                OnObjectiveChanging(value);
                ReportPropertyChanging("Objective");
                _Objective = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Objective");
                OnObjectiveChanged();
            }
        }
        private string _Objective;
        partial void OnObjectiveChanging(string value);
        partial void OnObjectiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private string _About;
        partial void OnAboutChanging(string value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private string _Email;
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Pin
        {
            get
            {
                return _Pin;
            }
            set
            {
                OnPinChanging(value);
                ReportPropertyChanging("Pin");
                _Pin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pin");
                OnPinChanged();
            }
        }
        private string _Pin;
        partial void OnPinChanging(string value);
        partial void OnPinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private bool _IsApproved;
        partial void OnIsApprovedChanging(bool value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ResumeUrl
        {
            get
            {
                return _ResumeUrl;
            }
            set
            {
                OnResumeUrlChanging(value);
                ReportPropertyChanging("ResumeUrl");
                _ResumeUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResumeUrl");
                OnResumeUrlChanged();
            }
        }
        private string _ResumeUrl;
        partial void OnResumeUrlChanging(string value);
        partial void OnResumeUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte RequestType
        {
            get
            {
                return _RequestType;
            }
            set
            {
                OnRequestTypeChanging(value);
                ReportPropertyChanging("RequestType");
                _RequestType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestType");
                OnRequestTypeChanged();
            }
        }
        private byte _RequestType;
        partial void OnRequestTypeChanging(byte value);
        partial void OnRequestTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreatedDateUtc
        {
            get
            {
                return _CreatedDateUtc;
            }
            set
            {
                OnCreatedDateUtcChanging(value);
                ReportPropertyChanging("CreatedDateUtc");
                _CreatedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateUtc");
                OnCreatedDateUtcChanged();
            }
        }
        private System.DateTime _CreatedDateUtc;
        partial void OnCreatedDateUtcChanging(System.DateTime value);
        partial void OnCreatedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> EditedDateUtc
        {
            get
            {
                return _EditedDateUtc;
            }
            set
            {
                OnEditedDateUtcChanging(value);
                ReportPropertyChanging("EditedDateUtc");
                _EditedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditedDateUtc");
                OnEditedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _EditedDateUtc;
        partial void OnEditedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnEditedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string LinkedInUrl
        {
            get
            {
                return _LinkedInUrl;
            }
            set
            {
                OnLinkedInUrlChanging(value);
                ReportPropertyChanging("LinkedInUrl");
                _LinkedInUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LinkedInUrl");
                OnLinkedInUrlChanged();
            }
        }
        private string _LinkedInUrl;
        partial void OnLinkedInUrlChanging(string value);
        partial void OnLinkedInUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ViadeoUrl
        {
            get
            {
                return _ViadeoUrl;
            }
            set
            {
                OnViadeoUrlChanging(value);
                ReportPropertyChanging("ViadeoUrl");
                _ViadeoUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ViadeoUrl");
                OnViadeoUrlChanged();
            }
        }
        private string _ViadeoUrl;
        partial void OnViadeoUrlChanging(string value);
        partial void OnViadeoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Picture
        {
            get
            {
                return _Picture;
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private string _Picture;
        partial void OnPictureChanging(string value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private bool _IsActive;
        partial void OnIsActiveChanging(bool value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Resumes_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Resumes_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Resumes_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Resumes_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Resumes_NetworkId", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ResumeSkills_Resumes", "ResumeSkill")]
        public EntityCollection<ResumeSkill> ResumeSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResumeSkill>("NetworksModel.FK_ResumeSkills_Resumes", "ResumeSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResumeSkill>("NetworksModel.FK_ResumeSkills_Resumes", "ResumeSkill", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            FirstName,
            LastName,
            Gender,
            Birthday,
            Objective,
            About,
            Email,
            Phone,
            Pin,
            NetworkId,
            IsApproved,
            ResumeUrl,
            RequestType,
            CreatedDateUtc,
            EditedDateUtc,
            LinkedInUrl,
            ViadeoUrl,
            Picture,
            IsActive,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="ResumeSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class ResumeSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResumeSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="resumeId">Initial value of the ResumeId property.</param>
        /// <param name="skillId">Initial value of the SkillId property.</param>
        /// <param name="dateUtc">Initial value of the DateUtc property.</param>
        public static ResumeSkill CreateResumeSkill(int id, int resumeId, int skillId, System.DateTime dateUtc)
        {
            ResumeSkill resumeSkill = new ResumeSkill();
            resumeSkill.Id = id;
            resumeSkill.ResumeId = resumeId;
            resumeSkill.SkillId = skillId;
            resumeSkill.DateUtc = dateUtc;
            return resumeSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ResumeId
        {
            get
            {
                return _ResumeId;
            }
            set
            {
                OnResumeIdChanging(value);
                ReportPropertyChanging("ResumeId");
                _ResumeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResumeId");
                OnResumeIdChanged();
            }
        }
        private int _ResumeId;
        partial void OnResumeIdChanging(int value);
        partial void OnResumeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private int _SkillId;
        partial void OnSkillIdChanging(int value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateUtc
        {
            get
            {
                return _DateUtc;
            }
            set
            {
                OnDateUtcChanging(value);
                ReportPropertyChanging("DateUtc");
                _DateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUtc");
                OnDateUtcChanged();
            }
        }
        private System.DateTime _DateUtc;
        partial void OnDateUtcChanging(System.DateTime value);
        partial void OnDateUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ResumeSkills_Resumes", "Resume")]
        public Resume Resume
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resume>("NetworksModel.FK_ResumeSkills_Resumes", "Resume").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resume>("NetworksModel.FK_ResumeSkills_Resumes", "Resume").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resume> ResumeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resume>("NetworksModel.FK_ResumeSkills_Resumes", "Resume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resume>("NetworksModel.FK_ResumeSkills_Resumes", "Resume", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ResumeSkills_Skills", "Skill")]
        public Skill Skill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_ResumeSkills_Skills", "Skill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_ResumeSkills_Skills", "Skill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Skill> SkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_ResumeSkills_Skills", "Skill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Skill>("NetworksModel.FK_ResumeSkills_Skills", "Skill", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ResumeId,
            SkillId,
            DateUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="SeekFriend")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class SeekFriend : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SeekFriend object.
        /// </summary>
        /// <param name="seekerId">Initial value of the SeekerId property.</param>
        /// <param name="targetId">Initial value of the TargetId property.</param>
        public static SeekFriend CreateSeekFriend(int seekerId, int targetId)
        {
            SeekFriend seekFriend = new SeekFriend();
            seekFriend.SeekerId = seekerId;
            seekFriend.TargetId = targetId;
            return seekFriend;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> HasAccepted
        {
            get
            {
                return _HasAccepted;
            }
            set
            {
                OnHasAcceptedChanging(value);
                ReportPropertyChanging("HasAccepted");
                _HasAccepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasAccepted");
                OnHasAcceptedChanged();
            }
        }
        private Nullable<bool> _HasAccepted;
        partial void OnHasAcceptedChanging(Nullable<bool> value);
        partial void OnHasAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int SeekerId
        {
            get
            {
                return _SeekerId;
            }
            set
            {
                if (_SeekerId != value)
                {
                    OnSeekerIdChanging(value);
                    ReportPropertyChanging("SeekerId");
                    _SeekerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeekerId");
                    OnSeekerIdChanged();
                }
            }
        }
        private int _SeekerId;
        partial void OnSeekerIdChanging(int value);
        partial void OnSeekerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int TargetId
        {
            get
            {
                return _TargetId;
            }
            set
            {
                if (_TargetId != value)
                {
                    OnTargetIdChanging(value);
                    ReportPropertyChanging("TargetId");
                    _TargetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TargetId");
                    OnTargetIdChanged();
                }
            }
        }
        private int _TargetId;
        partial void OnTargetIdChanging(int value);
        partial void OnTargetIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SeekFriends_Seeker", "User")]
        public User Seeker
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SeekFriends_Seeker", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SeekFriends_Seeker", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SeekerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SeekFriends_Seeker", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_SeekFriends_Seeker", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SeekFriends_Target", "User")]
        public User Target
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SeekFriends_Target", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SeekFriends_Target", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> TargetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SeekFriends_Target", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_SeekFriends_Target", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            HasAccepted,
            ExpirationDate,
            CreateDate,
            SeekerId,
            TargetId,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Skill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Skill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Skill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static Skill CreateSkill(int id, int parentId, string tagName, System.DateTime date, int createdByUserId)
        {
            Skill skill = new Skill();
            skill.Id = id;
            skill.ParentId = parentId;
            skill.TagName = tagName;
            skill.Date = date;
            skill.CreatedByUserId = createdByUserId;
            return skill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private int _ParentId;
        partial void OnParentIdChanging(int value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private string _TagName;
        partial void OnTagNameChanging(string value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanySkills_Skill", "CompanySkills")]
        public EntityCollection<CompanySkill> CompanySkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanySkill>("NetworksModel.FK_CompanySkills_Skill", "CompanySkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanySkill>("NetworksModel.FK_CompanySkills_Skill", "CompanySkills", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSkills_Skill", "ExchangeSkills")]
        public EntityCollection<ExchangeSkill> ExchangeSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeSkill>("NetworksModel.FK_ExchangeSkills_Skill", "ExchangeSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeSkill>("NetworksModel.FK_ExchangeSkills_Skill", "ExchangeSkills", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserSkills_Skill", "UserSkills")]
        public EntityCollection<UserSkill> UserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSkill>("NetworksModel.FK_UserSkills_Skill", "UserSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSkill>("NetworksModel.FK_UserSkills_Skill", "UserSkills", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ResumeSkills_Skills", "ResumeSkill")]
        public EntityCollection<ResumeSkill> ResumeSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResumeSkill>("NetworksModel.FK_ResumeSkills_Skills", "ResumeSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResumeSkill>("NetworksModel.FK_ResumeSkills_Skills", "ResumeSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemSkills_Skill", "TimelineItemSkill")]
        public EntityCollection<TimelineItemSkill> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemSkill>("NetworksModel.FK_dbo_TimelineItemSkills_Skill", "TimelineItemSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemSkill>("NetworksModel.FK_dbo_TimelineItemSkills_Skill", "TimelineItemSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupSkills_Skills", "GroupSkill")]
        public EntityCollection<GroupSkill> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupSkill>("NetworksModel.FK_GroupSkills_Skills", "GroupSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupSkill>("NetworksModel.FK_GroupSkills_Skills", "GroupSkill", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ParentId,
            TagName,
            Date,
            CreatedByUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="SocialNetworkCompanySubscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class SocialNetworkCompanySubscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialNetworkCompanySubscription object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="socialNetworkConnectionsId">Initial value of the SocialNetworkConnectionsId property.</param>
        /// <param name="autoPublish">Initial value of the AutoPublish property.</param>
        public static SocialNetworkCompanySubscription CreateSocialNetworkCompanySubscription(int id, int companyId, int socialNetworkConnectionsId, bool autoPublish)
        {
            SocialNetworkCompanySubscription socialNetworkCompanySubscription = new SocialNetworkCompanySubscription();
            socialNetworkCompanySubscription.Id = id;
            socialNetworkCompanySubscription.CompanyId = companyId;
            socialNetworkCompanySubscription.SocialNetworkConnectionsId = socialNetworkConnectionsId;
            socialNetworkCompanySubscription.AutoPublish = autoPublish;
            return socialNetworkCompanySubscription;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SocialNetworkConnectionsId
        {
            get
            {
                return _SocialNetworkConnectionsId;
            }
            set
            {
                OnSocialNetworkConnectionsIdChanging(value);
                ReportPropertyChanging("SocialNetworkConnectionsId");
                _SocialNetworkConnectionsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SocialNetworkConnectionsId");
                OnSocialNetworkConnectionsIdChanged();
            }
        }
        private int _SocialNetworkConnectionsId;
        partial void OnSocialNetworkConnectionsIdChanging(int value);
        partial void OnSocialNetworkConnectionsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool AutoPublish
        {
            get
            {
                return _AutoPublish;
            }
            set
            {
                OnAutoPublishChanging(value);
                ReportPropertyChanging("AutoPublish");
                _AutoPublish = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoPublish");
                OnAutoPublishChanged();
            }
        }
        private bool _AutoPublish;
        partial void OnAutoPublishChanging(bool value);
        partial void OnAutoPublishChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ContentContainsFilter
        {
            get
            {
                return _ContentContainsFilter;
            }
            set
            {
                OnContentContainsFilterChanging(value);
                ReportPropertyChanging("ContentContainsFilter");
                _ContentContainsFilter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentContainsFilter");
                OnContentContainsFilterChanged();
            }
        }
        private string _ContentContainsFilter;
        partial void OnContentContainsFilterChanging(string value);
        partial void OnContentContainsFilterChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkCompanySubscriptions_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_SocialNetworkCompanySubscriptions_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_SocialNetworkCompanySubscriptions_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_SocialNetworkCompanySubscriptions_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_SocialNetworkCompanySubscriptions_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkCompanySubscriptions_SocialNetworkConnection", "SocialNetworkConnection")]
        public SocialNetworkConnection SocialNetworkConnection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialNetworkConnection>("NetworksModel.FK_SocialNetworkCompanySubscriptions_SocialNetworkConnection", "SocialNetworkConnection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialNetworkConnection>("NetworksModel.FK_SocialNetworkCompanySubscriptions_SocialNetworkConnection", "SocialNetworkConnection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SocialNetworkConnection> SocialNetworkConnectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialNetworkConnection>("NetworksModel.FK_SocialNetworkCompanySubscriptions_SocialNetworkConnection", "SocialNetworkConnection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SocialNetworkConnection>("NetworksModel.FK_SocialNetworkCompanySubscriptions_SocialNetworkConnection", "SocialNetworkConnection", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            SocialNetworkConnectionsId,
            AutoPublish,
            ContentContainsFilter,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="SocialNetworkConnection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class SocialNetworkConnection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialNetworkConnection object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="oAuthToken">Initial value of the OAuthToken property.</param>
        /// <param name="oAuthVerifier">Initial value of the OAuthVerifier property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static SocialNetworkConnection CreateSocialNetworkConnection(int id, int createdByUserId, byte type, string username, string oAuthToken, string oAuthVerifier, bool isActive)
        {
            SocialNetworkConnection socialNetworkConnection = new SocialNetworkConnection();
            socialNetworkConnection.Id = id;
            socialNetworkConnection.CreatedByUserId = createdByUserId;
            socialNetworkConnection.Type = type;
            socialNetworkConnection.Username = username;
            socialNetworkConnection.OAuthToken = oAuthToken;
            socialNetworkConnection.OAuthVerifier = oAuthVerifier;
            socialNetworkConnection.IsActive = isActive;
            return socialNetworkConnection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private byte _Type;
        partial void OnTypeChanging(byte value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private string _Username;
        partial void OnUsernameChanging(string value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string OAuthToken
        {
            get
            {
                return _OAuthToken;
            }
            set
            {
                OnOAuthTokenChanging(value);
                ReportPropertyChanging("OAuthToken");
                _OAuthToken = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OAuthToken");
                OnOAuthTokenChanged();
            }
        }
        private string _OAuthToken;
        partial void OnOAuthTokenChanging(string value);
        partial void OnOAuthTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string OAuthVerifier
        {
            get
            {
                return _OAuthVerifier;
            }
            set
            {
                OnOAuthVerifierChanging(value);
                ReportPropertyChanging("OAuthVerifier");
                _OAuthVerifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OAuthVerifier");
                OnOAuthVerifierChanged();
            }
        }
        private string _OAuthVerifier;
        partial void OnOAuthVerifierChanging(string value);
        partial void OnOAuthVerifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private bool _IsActive;
        partial void OnIsActiveChanging(bool value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> OAuthTokenDateUtc
        {
            get
            {
                return _OAuthTokenDateUtc;
            }
            set
            {
                OnOAuthTokenDateUtcChanging(value);
                ReportPropertyChanging("OAuthTokenDateUtc");
                _OAuthTokenDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OAuthTokenDateUtc");
                OnOAuthTokenDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _OAuthTokenDateUtc;
        partial void OnOAuthTokenDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnOAuthTokenDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OAuthTokenDurationMinutes
        {
            get
            {
                return _OAuthTokenDurationMinutes;
            }
            set
            {
                OnOAuthTokenDurationMinutesChanging(value);
                ReportPropertyChanging("OAuthTokenDurationMinutes");
                _OAuthTokenDurationMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OAuthTokenDurationMinutes");
                OnOAuthTokenDurationMinutesChanged();
            }
        }
        private Nullable<int> _OAuthTokenDurationMinutes;
        partial void OnOAuthTokenDurationMinutesChanging(Nullable<int> value);
        partial void OnOAuthTokenDurationMinutesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkConnections_User", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SocialNetworkConnections_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SocialNetworkConnections_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SocialNetworkConnections_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_SocialNetworkConnections_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkCompanySubscriptions_SocialNetworkConnection", "SocialNetworkCompanySubscription")]
        public EntityCollection<SocialNetworkCompanySubscription> SocialNetworkCompanySubscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialNetworkCompanySubscription>("NetworksModel.FK_SocialNetworkCompanySubscriptions_SocialNetworkConnection", "SocialNetworkCompanySubscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialNetworkCompanySubscription>("NetworksModel.FK_SocialNetworkCompanySubscriptions_SocialNetworkConnection", "SocialNetworkCompanySubscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkUserSubscriptions_SocialNetworkConnection", "SocialNetworkUserSubscription")]
        public EntityCollection<SocialNetworkUserSubscription> SocialNetworkUserSubscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialNetworkUserSubscription>("NetworksModel.FK_SocialNetworkUserSubscriptions_SocialNetworkConnection", "SocialNetworkUserSubscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialNetworkUserSubscription>("NetworksModel.FK_SocialNetworkUserSubscriptions_SocialNetworkConnection", "SocialNetworkUserSubscription", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CreatedByUserId,
            Type,
            Username,
            OAuthToken,
            OAuthVerifier,
            IsActive,
            OAuthTokenDateUtc,
            OAuthTokenDurationMinutes,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="SocialNetworkState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class SocialNetworkState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialNetworkState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="socialNetworkType">Initial value of the SocialNetworkType property.</param>
        /// <param name="isProcessing">Initial value of the IsProcessing property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        public static SocialNetworkState CreateSocialNetworkState(int id, int networkId, byte socialNetworkType, bool isProcessing, string username)
        {
            SocialNetworkState socialNetworkState = new SocialNetworkState();
            socialNetworkState.Id = id;
            socialNetworkState.NetworkId = networkId;
            socialNetworkState.SocialNetworkType = socialNetworkType;
            socialNetworkState.IsProcessing = isProcessing;
            socialNetworkState.Username = username;
            return socialNetworkState;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte SocialNetworkType
        {
            get
            {
                return _SocialNetworkType;
            }
            set
            {
                OnSocialNetworkTypeChanging(value);
                ReportPropertyChanging("SocialNetworkType");
                _SocialNetworkType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SocialNetworkType");
                OnSocialNetworkTypeChanged();
            }
        }
        private byte _SocialNetworkType;
        partial void OnSocialNetworkTypeChanging(byte value);
        partial void OnSocialNetworkTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<long> LastItemId
        {
            get
            {
                return _LastItemId;
            }
            set
            {
                OnLastItemIdChanging(value);
                ReportPropertyChanging("LastItemId");
                _LastItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastItemId");
                OnLastItemIdChanged();
            }
        }
        private Nullable<long> _LastItemId;
        partial void OnLastItemIdChanging(Nullable<long> value);
        partial void OnLastItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> LastStartDate
        {
            get
            {
                return _LastStartDate;
            }
            set
            {
                OnLastStartDateChanging(value);
                ReportPropertyChanging("LastStartDate");
                _LastStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastStartDate");
                OnLastStartDateChanged();
            }
        }
        private Nullable<System.DateTime> _LastStartDate;
        partial void OnLastStartDateChanging(Nullable<System.DateTime> value);
        partial void OnLastStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> LastEndDate
        {
            get
            {
                return _LastEndDate;
            }
            set
            {
                OnLastEndDateChanging(value);
                ReportPropertyChanging("LastEndDate");
                _LastEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastEndDate");
                OnLastEndDateChanged();
            }
        }
        private Nullable<System.DateTime> _LastEndDate;
        partial void OnLastEndDateChanging(Nullable<System.DateTime> value);
        partial void OnLastEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsProcessing
        {
            get
            {
                return _IsProcessing;
            }
            set
            {
                OnIsProcessingChanging(value);
                ReportPropertyChanging("IsProcessing");
                _IsProcessing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsProcessing");
                OnIsProcessingChanged();
            }
        }
        private bool _IsProcessing;
        partial void OnIsProcessingChanging(bool value);
        partial void OnIsProcessingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private string _Username;
        partial void OnUsernameChanging(string value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> OAuthDateUtc
        {
            get
            {
                return _OAuthDateUtc;
            }
            set
            {
                OnOAuthDateUtcChanging(value);
                ReportPropertyChanging("OAuthDateUtc");
                _OAuthDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OAuthDateUtc");
                OnOAuthDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _OAuthDateUtc;
        partial void OnOAuthDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnOAuthDateUtcChanged();
    
        /// <summary>
        /// The token from the web authorization callbacl
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string OAuthRequestToken
        {
            get
            {
                return _OAuthRequestToken;
            }
            set
            {
                OnOAuthRequestTokenChanging(value);
                ReportPropertyChanging("OAuthRequestToken");
                _OAuthRequestToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OAuthRequestToken");
                OnOAuthRequestTokenChanged();
            }
        }
        private string _OAuthRequestToken;
        partial void OnOAuthRequestTokenChanging(string value);
        partial void OnOAuthRequestTokenChanged();
    
        /// <summary>
        /// The verifier from the web authorization callbacl
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string OAuthRequestVerifier
        {
            get
            {
                return _OAuthRequestVerifier;
            }
            set
            {
                OnOAuthRequestVerifierChanging(value);
                ReportPropertyChanging("OAuthRequestVerifier");
                _OAuthRequestVerifier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OAuthRequestVerifier");
                OnOAuthRequestVerifierChanged();
            }
        }
        private string _OAuthRequestVerifier;
        partial void OnOAuthRequestVerifierChanging(string value);
        partial void OnOAuthRequestVerifierChanged();
    
        /// <summary>
        /// The final access token
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string OAuthAccessToken
        {
            get
            {
                return _OAuthAccessToken;
            }
            set
            {
                OnOAuthAccessTokenChanging(value);
                ReportPropertyChanging("OAuthAccessToken");
                _OAuthAccessToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OAuthAccessToken");
                OnOAuthAccessTokenChanged();
            }
        }
        private string _OAuthAccessToken;
        partial void OnOAuthAccessTokenChanging(string value);
        partial void OnOAuthAccessTokenChanged();
    
        /// <summary>
        /// The final access token secret
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string OAuthAccessSecret
        {
            get
            {
                return _OAuthAccessSecret;
            }
            set
            {
                OnOAuthAccessSecretChanging(value);
                ReportPropertyChanging("OAuthAccessSecret");
                _OAuthAccessSecret = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OAuthAccessSecret");
                OnOAuthAccessSecretChanged();
            }
        }
        private string _OAuthAccessSecret;
        partial void OnOAuthAccessSecretChanging(string value);
        partial void OnOAuthAccessSecretChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkStates_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_SocialNetworkStates_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_SocialNetworkStates_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_SocialNetworkStates_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_SocialNetworkStates_Network", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            NetworkId,
            SocialNetworkType,
            LastItemId,
            LastStartDate,
            LastEndDate,
            IsProcessing,
            Username,
            OAuthDateUtc,
            OAuthRequestToken,
            OAuthRequestVerifier,
            OAuthAccessToken,
            OAuthAccessSecret,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="SocialNetworkUserSubscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class SocialNetworkUserSubscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialNetworkUserSubscription object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="socialNetworkConnectionsId">Initial value of the SocialNetworkConnectionsId property.</param>
        /// <param name="autoPublish">Initial value of the AutoPublish property.</param>
        public static SocialNetworkUserSubscription CreateSocialNetworkUserSubscription(int id, int userId, int socialNetworkConnectionsId, bool autoPublish)
        {
            SocialNetworkUserSubscription socialNetworkUserSubscription = new SocialNetworkUserSubscription();
            socialNetworkUserSubscription.Id = id;
            socialNetworkUserSubscription.UserId = userId;
            socialNetworkUserSubscription.SocialNetworkConnectionsId = socialNetworkConnectionsId;
            socialNetworkUserSubscription.AutoPublish = autoPublish;
            return socialNetworkUserSubscription;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SocialNetworkConnectionsId
        {
            get
            {
                return _SocialNetworkConnectionsId;
            }
            set
            {
                OnSocialNetworkConnectionsIdChanging(value);
                ReportPropertyChanging("SocialNetworkConnectionsId");
                _SocialNetworkConnectionsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SocialNetworkConnectionsId");
                OnSocialNetworkConnectionsIdChanged();
            }
        }
        private int _SocialNetworkConnectionsId;
        partial void OnSocialNetworkConnectionsIdChanging(int value);
        partial void OnSocialNetworkConnectionsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool AutoPublish
        {
            get
            {
                return _AutoPublish;
            }
            set
            {
                OnAutoPublishChanging(value);
                ReportPropertyChanging("AutoPublish");
                _AutoPublish = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoPublish");
                OnAutoPublishChanged();
            }
        }
        private bool _AutoPublish;
        partial void OnAutoPublishChanging(bool value);
        partial void OnAutoPublishChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ContentContainsFilter
        {
            get
            {
                return _ContentContainsFilter;
            }
            set
            {
                OnContentContainsFilterChanging(value);
                ReportPropertyChanging("ContentContainsFilter");
                _ContentContainsFilter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentContainsFilter");
                OnContentContainsFilterChanged();
            }
        }
        private string _ContentContainsFilter;
        partial void OnContentContainsFilterChanging(string value);
        partial void OnContentContainsFilterChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkUserSubscriptions_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SocialNetworkUserSubscriptions_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SocialNetworkUserSubscriptions_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_SocialNetworkUserSubscriptions_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_SocialNetworkUserSubscriptions_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkUserSubscriptions_SocialNetworkConnection", "SocialNetworkConnection")]
        public SocialNetworkConnection SocialNetworkConnection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialNetworkConnection>("NetworksModel.FK_SocialNetworkUserSubscriptions_SocialNetworkConnection", "SocialNetworkConnection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialNetworkConnection>("NetworksModel.FK_SocialNetworkUserSubscriptions_SocialNetworkConnection", "SocialNetworkConnection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SocialNetworkConnection> SocialNetworkConnectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SocialNetworkConnection>("NetworksModel.FK_SocialNetworkUserSubscriptions_SocialNetworkConnection", "SocialNetworkConnection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SocialNetworkConnection>("NetworksModel.FK_SocialNetworkUserSubscriptions_SocialNetworkConnection", "SocialNetworkConnection", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            SocialNetworkConnectionsId,
            AutoPublish,
            ContentContainsFilter,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="StatsCounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class StatsCounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StatsCounter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static StatsCounter CreateStatsCounter(int id, string category, string name)
        {
            StatsCounter statsCounter = new StatsCounter();
            statsCounter.Id = id;
            statsCounter.Category = category;
            statsCounter.Name = name;
            return statsCounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private string _Category;
        partial void OnCategoryChanging(string value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_StatsCounterHits_Counter", "StatsCounterHit")]
        public EntityCollection<StatsCounterHit> Hits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StatsCounterHit>("NetworksModel.FK_StatsCounterHits_Counter", "StatsCounterHit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StatsCounterHit>("NetworksModel.FK_StatsCounterHits_Counter", "StatsCounterHit", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Category,
            Name,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="StatsCounterHit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class StatsCounterHit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StatsCounterHit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateUtc">Initial value of the DateUtc property.</param>
        /// <param name="counterId">Initial value of the CounterId property.</param>
        public static StatsCounterHit CreateStatsCounterHit(int id, System.DateTime dateUtc, int counterId)
        {
            StatsCounterHit statsCounterHit = new StatsCounterHit();
            statsCounterHit.Id = id;
            statsCounterHit.DateUtc = dateUtc;
            statsCounterHit.CounterId = counterId;
            return statsCounterHit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateUtc
        {
            get
            {
                return _DateUtc;
            }
            set
            {
                OnDateUtcChanging(value);
                ReportPropertyChanging("DateUtc");
                _DateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUtc");
                OnDateUtcChanged();
            }
        }
        private System.DateTime _DateUtc;
        partial void OnDateUtcChanging(System.DateTime value);
        partial void OnDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CounterId
        {
            get
            {
                return _CounterId;
            }
            set
            {
                OnCounterIdChanging(value);
                ReportPropertyChanging("CounterId");
                _CounterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterId");
                OnCounterIdChanged();
            }
        }
        private int _CounterId;
        partial void OnCounterIdChanging(int value);
        partial void OnCounterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private Nullable<int> _NetworkId;
        partial void OnNetworkIdChanging(Nullable<int> value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<int> _UserId;
        partial void OnUserIdChanging(Nullable<int> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return _Identifier;
            }
            set
            {
                OnIdentifierChanging(value);
                ReportPropertyChanging("Identifier");
                _Identifier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Identifier");
                OnIdentifierChanged();
            }
        }
        private string _Identifier;
        partial void OnIdentifierChanging(string value);
        partial void OnIdentifierChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_StatsCounterHits_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_StatsCounterHits_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_StatsCounterHits_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_StatsCounterHits_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_StatsCounterHits_Network", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_StatsCounterHits_Counter", "StatsCounter")]
        public StatsCounter Counter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatsCounter>("NetworksModel.FK_StatsCounterHits_Counter", "StatsCounter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatsCounter>("NetworksModel.FK_StatsCounterHits_Counter", "StatsCounter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatsCounter> CounterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatsCounter>("NetworksModel.FK_StatsCounterHits_Counter", "StatsCounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatsCounter>("NetworksModel.FK_StatsCounterHits_Counter", "StatsCounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_StatsCounterHits_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_StatsCounterHits_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_StatsCounterHits_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_StatsCounterHits_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_StatsCounterHits_User", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            DateUtc,
            CounterId,
            NetworkId,
            UserId,
            Identifier,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="StripeTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class StripeTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StripeTransaction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="tokenId">Initial value of the TokenId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="isChargeCreated">Initial value of the IsChargeCreated property.</param>
        /// <param name="isChargeCaptured">Initial value of the IsChargeCaptured property.</param>
        public static StripeTransaction CreateStripeTransaction(int id, int userId, int networkId, string tokenId, System.DateTime dateCreatedUtc, bool isChargeCreated, bool isChargeCaptured)
        {
            StripeTransaction stripeTransaction = new StripeTransaction();
            stripeTransaction.Id = id;
            stripeTransaction.UserId = userId;
            stripeTransaction.NetworkId = networkId;
            stripeTransaction.TokenId = tokenId;
            stripeTransaction.DateCreatedUtc = dateCreatedUtc;
            stripeTransaction.IsChargeCreated = isChargeCreated;
            stripeTransaction.IsChargeCaptured = isChargeCaptured;
            return stripeTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string TokenId
        {
            get
            {
                return _TokenId;
            }
            set
            {
                OnTokenIdChanging(value);
                ReportPropertyChanging("TokenId");
                _TokenId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TokenId");
                OnTokenIdChanged();
            }
        }
        private string _TokenId;
        partial void OnTokenIdChanging(string value);
        partial void OnTokenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ChargeId
        {
            get
            {
                return _ChargeId;
            }
            set
            {
                OnChargeIdChanging(value);
                ReportPropertyChanging("ChargeId");
                _ChargeId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChargeId");
                OnChargeIdChanged();
            }
        }
        private string _ChargeId;
        partial void OnChargeIdChanging(string value);
        partial void OnChargeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private string _CustomerId;
        partial void OnCustomerIdChanging(string value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CardId
        {
            get
            {
                return _CardId;
            }
            set
            {
                OnCardIdChanging(value);
                ReportPropertyChanging("CardId");
                _CardId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardId");
                OnCardIdChanged();
            }
        }
        private string _CardId;
        partial void OnCardIdChanging(string value);
        partial void OnCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> AmountUsd
        {
            get
            {
                return _AmountUsd;
            }
            set
            {
                OnAmountUsdChanging(value);
                ReportPropertyChanging("AmountUsd");
                _AmountUsd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountUsd");
                OnAmountUsdChanged();
            }
        }
        private Nullable<decimal> _AmountUsd;
        partial void OnAmountUsdChanging(Nullable<decimal> value);
        partial void OnAmountUsdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> AmountEur
        {
            get
            {
                return _AmountEur;
            }
            set
            {
                OnAmountEurChanging(value);
                ReportPropertyChanging("AmountEur");
                _AmountEur = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountEur");
                OnAmountEurChanged();
            }
        }
        private Nullable<decimal> _AmountEur;
        partial void OnAmountEurChanging(Nullable<decimal> value);
        partial void OnAmountEurChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateUpdatedUtc
        {
            get
            {
                return _DateUpdatedUtc;
            }
            set
            {
                OnDateUpdatedUtcChanging(value);
                ReportPropertyChanging("DateUpdatedUtc");
                _DateUpdatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdatedUtc");
                OnDateUpdatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateUpdatedUtc;
        partial void OnDateUpdatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateUpdatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsChargeCreated
        {
            get
            {
                return _IsChargeCreated;
            }
            set
            {
                OnIsChargeCreatedChanging(value);
                ReportPropertyChanging("IsChargeCreated");
                _IsChargeCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsChargeCreated");
                OnIsChargeCreatedChanged();
            }
        }
        private bool _IsChargeCreated;
        partial void OnIsChargeCreatedChanging(bool value);
        partial void OnIsChargeCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsChargeCaptured
        {
            get
            {
                return _IsChargeCaptured;
            }
            set
            {
                OnIsChargeCapturedChanging(value);
                ReportPropertyChanging("IsChargeCaptured");
                _IsChargeCaptured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsChargeCaptured");
                OnIsChargeCapturedChanged();
            }
        }
        private bool _IsChargeCaptured;
        partial void OnIsChargeCapturedChanging(bool value);
        partial void OnIsChargeCapturedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_StripeTransactions_Networks", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_StripeTransactions_Networks", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_StripeTransactions_Networks", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_StripeTransactions_Networks", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_StripeTransactions_Networks", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_StripeTransactions_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_StripeTransactions_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_StripeTransactions_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_StripeTransactions_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_StripeTransactions_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "StripeSubscriptions", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("NetworksModel.StripeSubscriptions", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("NetworksModel.StripeSubscriptions", "Subscription", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            NetworkId,
            TokenId,
            ChargeId,
            CustomerId,
            CardId,
            AmountUsd,
            AmountEur,
            DateCreatedUtc,
            DateUpdatedUtc,
            IsChargeCreated,
            IsChargeCaptured,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Subscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Subscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subscription object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="templateId">Initial value of the TemplateId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="autoRenew">Initial value of the AutoRenew property.</param>
        /// <param name="durationValue">Initial value of the DurationValue property.</param>
        /// <param name="durationKind">Initial value of the DurationKind property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isForAllCompanyUsers">Initial value of the IsForAllCompanyUsers property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="isPaid">Initial value of the IsPaid property.</param>
        /// <param name="paymentMethod">Initial value of the PaymentMethod property.</param>
        public static Subscription CreateSubscription(int id, int templateId, System.DateTime dateCreatedUtc, bool autoRenew, int durationValue, byte durationKind, string name, bool isForAllCompanyUsers, int networkId, bool isPaid, byte paymentMethod)
        {
            Subscription subscription = new Subscription();
            subscription.Id = id;
            subscription.TemplateId = templateId;
            subscription.DateCreatedUtc = dateCreatedUtc;
            subscription.AutoRenew = autoRenew;
            subscription.DurationValue = durationValue;
            subscription.DurationKind = durationKind;
            subscription.Name = name;
            subscription.IsForAllCompanyUsers = isForAllCompanyUsers;
            subscription.NetworkId = networkId;
            subscription.IsPaid = isPaid;
            subscription.PaymentMethod = paymentMethod;
            return subscription;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TemplateId
        {
            get
            {
                return _TemplateId;
            }
            set
            {
                OnTemplateIdChanging(value);
                ReportPropertyChanging("TemplateId");
                _TemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateId");
                OnTemplateIdChanged();
            }
        }
        private int _TemplateId;
        partial void OnTemplateIdChanging(int value);
        partial void OnTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OwnerUserId
        {
            get
            {
                return _OwnerUserId;
            }
            set
            {
                OnOwnerUserIdChanging(value);
                ReportPropertyChanging("OwnerUserId");
                _OwnerUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerUserId");
                OnOwnerUserIdChanged();
            }
        }
        private Nullable<int> _OwnerUserId;
        partial void OnOwnerUserIdChanging(Nullable<int> value);
        partial void OnOwnerUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OwnerCompanyId
        {
            get
            {
                return _OwnerCompanyId;
            }
            set
            {
                OnOwnerCompanyIdChanging(value);
                ReportPropertyChanging("OwnerCompanyId");
                _OwnerCompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerCompanyId");
                OnOwnerCompanyIdChanged();
            }
        }
        private Nullable<int> _OwnerCompanyId;
        partial void OnOwnerCompanyIdChanging(Nullable<int> value);
        partial void OnOwnerCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AppliesToUserId
        {
            get
            {
                return _AppliesToUserId;
            }
            set
            {
                OnAppliesToUserIdChanging(value);
                ReportPropertyChanging("AppliesToUserId");
                _AppliesToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppliesToUserId");
                OnAppliesToUserIdChanged();
            }
        }
        private Nullable<int> _AppliesToUserId;
        partial void OnAppliesToUserIdChanging(Nullable<int> value);
        partial void OnAppliesToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AppliesToCompanyId
        {
            get
            {
                return _AppliesToCompanyId;
            }
            set
            {
                OnAppliesToCompanyIdChanging(value);
                ReportPropertyChanging("AppliesToCompanyId");
                _AppliesToCompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppliesToCompanyId");
                OnAppliesToCompanyIdChanged();
            }
        }
        private Nullable<int> _AppliesToCompanyId;
        partial void OnAppliesToCompanyIdChanging(Nullable<int> value);
        partial void OnAppliesToCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateBeginUtc
        {
            get
            {
                return _DateBeginUtc;
            }
            set
            {
                OnDateBeginUtcChanging(value);
                ReportPropertyChanging("DateBeginUtc");
                _DateBeginUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateBeginUtc");
                OnDateBeginUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateBeginUtc;
        partial void OnDateBeginUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateBeginUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateEndUtc
        {
            get
            {
                return _DateEndUtc;
            }
            set
            {
                OnDateEndUtcChanging(value);
                ReportPropertyChanging("DateEndUtc");
                _DateEndUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEndUtc");
                OnDateEndUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateEndUtc;
        partial void OnDateEndUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateEndUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool AutoRenew
        {
            get
            {
                return _AutoRenew;
            }
            set
            {
                OnAutoRenewChanging(value);
                ReportPropertyChanging("AutoRenew");
                _AutoRenew = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoRenew");
                OnAutoRenewChanged();
            }
        }
        private bool _AutoRenew;
        partial void OnAutoRenewChanging(bool value);
        partial void OnAutoRenewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int DurationValue
        {
            get
            {
                return _DurationValue;
            }
            set
            {
                OnDurationValueChanging(value);
                ReportPropertyChanging("DurationValue");
                _DurationValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DurationValue");
                OnDurationValueChanged();
            }
        }
        private int _DurationValue;
        partial void OnDurationValueChanging(int value);
        partial void OnDurationValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte DurationKind
        {
            get
            {
                return _DurationKind;
            }
            set
            {
                OnDurationKindChanging(value);
                ReportPropertyChanging("DurationKind");
                _DurationKind = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DurationKind");
                OnDurationKindChanged();
            }
        }
        private byte _DurationKind;
        partial void OnDurationKindChanging(byte value);
        partial void OnDurationKindChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> PriceUsdWithoutVat
        {
            get
            {
                return _PriceUsdWithoutVat;
            }
            set
            {
                OnPriceUsdWithoutVatChanging(value);
                ReportPropertyChanging("PriceUsdWithoutVat");
                _PriceUsdWithoutVat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceUsdWithoutVat");
                OnPriceUsdWithoutVatChanged();
            }
        }
        private Nullable<decimal> _PriceUsdWithoutVat;
        partial void OnPriceUsdWithoutVatChanging(Nullable<decimal> value);
        partial void OnPriceUsdWithoutVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> PriceUsdWithVat
        {
            get
            {
                return _PriceUsdWithVat;
            }
            set
            {
                OnPriceUsdWithVatChanging(value);
                ReportPropertyChanging("PriceUsdWithVat");
                _PriceUsdWithVat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceUsdWithVat");
                OnPriceUsdWithVatChanged();
            }
        }
        private Nullable<decimal> _PriceUsdWithVat;
        partial void OnPriceUsdWithVatChanging(Nullable<decimal> value);
        partial void OnPriceUsdWithVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> PriceEurWithoutVat
        {
            get
            {
                return _PriceEurWithoutVat;
            }
            set
            {
                OnPriceEurWithoutVatChanging(value);
                ReportPropertyChanging("PriceEurWithoutVat");
                _PriceEurWithoutVat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceEurWithoutVat");
                OnPriceEurWithoutVatChanged();
            }
        }
        private Nullable<decimal> _PriceEurWithoutVat;
        partial void OnPriceEurWithoutVatChanging(Nullable<decimal> value);
        partial void OnPriceEurWithoutVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> PriceEurWithVat
        {
            get
            {
                return _PriceEurWithVat;
            }
            set
            {
                OnPriceEurWithVatChanging(value);
                ReportPropertyChanging("PriceEurWithVat");
                _PriceEurWithVat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceEurWithVat");
                OnPriceEurWithVatChanged();
            }
        }
        private Nullable<decimal> _PriceEurWithVat;
        partial void OnPriceEurWithVatChanging(Nullable<decimal> value);
        partial void OnPriceEurWithVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsForAllCompanyUsers
        {
            get
            {
                return _IsForAllCompanyUsers;
            }
            set
            {
                OnIsForAllCompanyUsersChanging(value);
                ReportPropertyChanging("IsForAllCompanyUsers");
                _IsForAllCompanyUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForAllCompanyUsers");
                OnIsForAllCompanyUsersChanged();
            }
        }
        private bool _IsForAllCompanyUsers;
        partial void OnIsForAllCompanyUsersChanging(bool value);
        partial void OnIsForAllCompanyUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsPaid
        {
            get
            {
                return _IsPaid;
            }
            set
            {
                OnIsPaidChanging(value);
                ReportPropertyChanging("IsPaid");
                _IsPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPaid");
                OnIsPaidChanged();
            }
        }
        private bool _IsPaid;
        partial void OnIsPaidChanging(bool value);
        partial void OnIsPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                OnPaymentMethodChanging(value);
                ReportPropertyChanging("PaymentMethod");
                _PaymentMethod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentMethod");
                OnPaymentMethodChanged();
            }
        }
        private byte _PaymentMethod;
        partial void OnPaymentMethodChanging(byte value);
        partial void OnPaymentMethodChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_AppliesToCompany", "Company")]
        public Company AppliesToCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_Subscriptions_AppliesToCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_Subscriptions_AppliesToCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> AppliesToCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_Subscriptions_AppliesToCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_dbo_Subscriptions_AppliesToCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_OwnerCompany", "Company")]
        public Company OwnerCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_Subscriptions_OwnerCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_Subscriptions_OwnerCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> OwnerCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_dbo_Subscriptions_OwnerCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_dbo_Subscriptions_OwnerCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_AppliesToUser", "User")]
        public User AppliesToUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Subscriptions_AppliesToUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Subscriptions_AppliesToUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> AppliesToUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Subscriptions_AppliesToUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_Subscriptions_AppliesToUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_OwnerUser", "User")]
        public User OwnerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Subscriptions_OwnerUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Subscriptions_OwnerUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> OwnerUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_Subscriptions_OwnerUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_Subscriptions_OwnerUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_Template", "SubscriptionTemplate")]
        public SubscriptionTemplate Template
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriptionTemplate>("NetworksModel.FK_dbo_Subscriptions_Template", "SubscriptionTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriptionTemplate>("NetworksModel.FK_dbo_Subscriptions_Template", "SubscriptionTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubscriptionTemplate> TemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriptionTemplate>("NetworksModel.FK_dbo_Subscriptions_Template", "SubscriptionTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubscriptionTemplate>("NetworksModel.FK_dbo_Subscriptions_Template", "SubscriptionTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Subscriptions_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Subscriptions_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_Subscriptions_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_Subscriptions_Network", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "StripeSubscriptions", "StripeTransaction")]
        public EntityCollection<StripeTransaction> StripeTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StripeTransaction>("NetworksModel.StripeSubscriptions", "StripeTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StripeTransaction>("NetworksModel.StripeSubscriptions", "StripeTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_SubscriptionNotifications_Subscriptions", "SubscriptionNotification")]
        public EntityCollection<SubscriptionNotification> SubscriptionNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriptionNotification>("NetworksModel.FK_dbo_SubscriptionNotifications_Subscriptions", "SubscriptionNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriptionNotification>("NetworksModel.FK_dbo_SubscriptionNotifications_Subscriptions", "SubscriptionNotification", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            TemplateId,
            DateCreatedUtc,
            OwnerUserId,
            OwnerCompanyId,
            AppliesToUserId,
            AppliesToCompanyId,
            DateBeginUtc,
            DateEndUtc,
            AutoRenew,
            DurationValue,
            DurationKind,
            PriceUsdWithoutVat,
            PriceUsdWithVat,
            PriceEurWithoutVat,
            PriceEurWithVat,
            Name,
            IsForAllCompanyUsers,
            NetworkId,
            IsPaid,
            PaymentMethod,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="SubscriptionNotification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class SubscriptionNotification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriptionNotification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="subscriptionId">Initial value of the SubscriptionId property.</param>
        /// <param name="dateSendUtc">Initial value of the DateSendUtc property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static SubscriptionNotification CreateSubscriptionNotification(int id, int subscriptionId, System.DateTime dateSendUtc, byte status)
        {
            SubscriptionNotification subscriptionNotification = new SubscriptionNotification();
            subscriptionNotification.Id = id;
            subscriptionNotification.SubscriptionId = subscriptionId;
            subscriptionNotification.DateSendUtc = dateSendUtc;
            subscriptionNotification.Status = status;
            return subscriptionNotification;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SubscriptionId
        {
            get
            {
                return _SubscriptionId;
            }
            set
            {
                OnSubscriptionIdChanging(value);
                ReportPropertyChanging("SubscriptionId");
                _SubscriptionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionId");
                OnSubscriptionIdChanged();
            }
        }
        private int _SubscriptionId;
        partial void OnSubscriptionIdChanging(int value);
        partial void OnSubscriptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateSendUtc
        {
            get
            {
                return _DateSendUtc;
            }
            set
            {
                OnDateSendUtcChanging(value);
                ReportPropertyChanging("DateSendUtc");
                _DateSendUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSendUtc");
                OnDateSendUtcChanged();
            }
        }
        private System.DateTime _DateSendUtc;
        partial void OnDateSendUtcChanging(System.DateTime value);
        partial void OnDateSendUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateSentUtc
        {
            get
            {
                return _DateSentUtc;
            }
            set
            {
                OnDateSentUtcChanging(value);
                ReportPropertyChanging("DateSentUtc");
                _DateSentUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSentUtc");
                OnDateSentUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateSentUtc;
        partial void OnDateSentUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateSentUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private byte _Status;
        partial void OnStatusChanging(byte value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_SubscriptionNotifications_Subscriptions", "Subscription")]
        public Subscription Subscription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscription>("NetworksModel.FK_dbo_SubscriptionNotifications_Subscriptions", "Subscription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscription>("NetworksModel.FK_dbo_SubscriptionNotifications_Subscriptions", "Subscription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subscription> SubscriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscription>("NetworksModel.FK_dbo_SubscriptionNotifications_Subscriptions", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subscription>("NetworksModel.FK_dbo_SubscriptionNotifications_Subscriptions", "Subscription", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            SubscriptionId,
            DateSendUtc,
            DateSentUtc,
            Status,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="SubscriptionTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class SubscriptionTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriptionTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="allowAutoRenew">Initial value of the AllowAutoRenew property.</param>
        /// <param name="isDefaultOnAccountCreate">Initial value of the IsDefaultOnAccountCreate property.</param>
        /// <param name="isUserSubscribable">Initial value of the IsUserSubscribable property.</param>
        /// <param name="durationValue">Initial value of the DurationValue property.</param>
        /// <param name="durationKind">Initial value of the DurationKind property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isForAllCompanyUsers">Initial value of the IsForAllCompanyUsers property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="isSubscriptionEnabled">Initial value of the IsSubscriptionEnabled property.</param>
        public static SubscriptionTemplate CreateSubscriptionTemplate(int id, bool allowAutoRenew, bool isDefaultOnAccountCreate, bool isUserSubscribable, int durationValue, byte durationKind, string name, bool isForAllCompanyUsers, int networkId, bool isSubscriptionEnabled)
        {
            SubscriptionTemplate subscriptionTemplate = new SubscriptionTemplate();
            subscriptionTemplate.Id = id;
            subscriptionTemplate.AllowAutoRenew = allowAutoRenew;
            subscriptionTemplate.IsDefaultOnAccountCreate = isDefaultOnAccountCreate;
            subscriptionTemplate.IsUserSubscribable = isUserSubscribable;
            subscriptionTemplate.DurationValue = durationValue;
            subscriptionTemplate.DurationKind = durationKind;
            subscriptionTemplate.Name = name;
            subscriptionTemplate.IsForAllCompanyUsers = isForAllCompanyUsers;
            subscriptionTemplate.NetworkId = networkId;
            subscriptionTemplate.IsSubscriptionEnabled = isSubscriptionEnabled;
            return subscriptionTemplate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool AllowAutoRenew
        {
            get
            {
                return _AllowAutoRenew;
            }
            set
            {
                OnAllowAutoRenewChanging(value);
                ReportPropertyChanging("AllowAutoRenew");
                _AllowAutoRenew = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowAutoRenew");
                OnAllowAutoRenewChanged();
            }
        }
        private bool _AllowAutoRenew;
        partial void OnAllowAutoRenewChanging(bool value);
        partial void OnAllowAutoRenewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsDefaultOnAccountCreate
        {
            get
            {
                return _IsDefaultOnAccountCreate;
            }
            set
            {
                OnIsDefaultOnAccountCreateChanging(value);
                ReportPropertyChanging("IsDefaultOnAccountCreate");
                _IsDefaultOnAccountCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefaultOnAccountCreate");
                OnIsDefaultOnAccountCreateChanged();
            }
        }
        private bool _IsDefaultOnAccountCreate;
        partial void OnIsDefaultOnAccountCreateChanging(bool value);
        partial void OnIsDefaultOnAccountCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsUserSubscribable
        {
            get
            {
                return _IsUserSubscribable;
            }
            set
            {
                OnIsUserSubscribableChanging(value);
                ReportPropertyChanging("IsUserSubscribable");
                _IsUserSubscribable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUserSubscribable");
                OnIsUserSubscribableChanged();
            }
        }
        private bool _IsUserSubscribable;
        partial void OnIsUserSubscribableChanging(bool value);
        partial void OnIsUserSubscribableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int DurationValue
        {
            get
            {
                return _DurationValue;
            }
            set
            {
                OnDurationValueChanging(value);
                ReportPropertyChanging("DurationValue");
                _DurationValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DurationValue");
                OnDurationValueChanged();
            }
        }
        private int _DurationValue;
        partial void OnDurationValueChanging(int value);
        partial void OnDurationValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte DurationKind
        {
            get
            {
                return _DurationKind;
            }
            set
            {
                OnDurationKindChanging(value);
                ReportPropertyChanging("DurationKind");
                _DurationKind = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DurationKind");
                OnDurationKindChanged();
            }
        }
        private byte _DurationKind;
        partial void OnDurationKindChanging(byte value);
        partial void OnDurationKindChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> PriceUsdWithoutVat
        {
            get
            {
                return _PriceUsdWithoutVat;
            }
            set
            {
                OnPriceUsdWithoutVatChanging(value);
                ReportPropertyChanging("PriceUsdWithoutVat");
                _PriceUsdWithoutVat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceUsdWithoutVat");
                OnPriceUsdWithoutVatChanged();
            }
        }
        private Nullable<decimal> _PriceUsdWithoutVat;
        partial void OnPriceUsdWithoutVatChanging(Nullable<decimal> value);
        partial void OnPriceUsdWithoutVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> PriceUsdWithVat
        {
            get
            {
                return _PriceUsdWithVat;
            }
            set
            {
                OnPriceUsdWithVatChanging(value);
                ReportPropertyChanging("PriceUsdWithVat");
                _PriceUsdWithVat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceUsdWithVat");
                OnPriceUsdWithVatChanged();
            }
        }
        private Nullable<decimal> _PriceUsdWithVat;
        partial void OnPriceUsdWithVatChanging(Nullable<decimal> value);
        partial void OnPriceUsdWithVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> PriceEurWithoutVat
        {
            get
            {
                return _PriceEurWithoutVat;
            }
            set
            {
                OnPriceEurWithoutVatChanging(value);
                ReportPropertyChanging("PriceEurWithoutVat");
                _PriceEurWithoutVat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceEurWithoutVat");
                OnPriceEurWithoutVatChanged();
            }
        }
        private Nullable<decimal> _PriceEurWithoutVat;
        partial void OnPriceEurWithoutVatChanging(Nullable<decimal> value);
        partial void OnPriceEurWithoutVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<decimal> PriceEurWithVat
        {
            get
            {
                return _PriceEurWithVat;
            }
            set
            {
                OnPriceEurWithVatChanging(value);
                ReportPropertyChanging("PriceEurWithVat");
                _PriceEurWithVat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceEurWithVat");
                OnPriceEurWithVatChanged();
            }
        }
        private Nullable<decimal> _PriceEurWithVat;
        partial void OnPriceEurWithVatChanging(Nullable<decimal> value);
        partial void OnPriceEurWithVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsForAllCompanyUsers
        {
            get
            {
                return _IsForAllCompanyUsers;
            }
            set
            {
                OnIsForAllCompanyUsersChanging(value);
                ReportPropertyChanging("IsForAllCompanyUsers");
                _IsForAllCompanyUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForAllCompanyUsers");
                OnIsForAllCompanyUsersChanged();
            }
        }
        private bool _IsForAllCompanyUsers;
        partial void OnIsForAllCompanyUsersChanging(bool value);
        partial void OnIsForAllCompanyUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ConfirmEmailTextId
        {
            get
            {
                return _ConfirmEmailTextId;
            }
            set
            {
                OnConfirmEmailTextIdChanging(value);
                ReportPropertyChanging("ConfirmEmailTextId");
                _ConfirmEmailTextId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfirmEmailTextId");
                OnConfirmEmailTextIdChanged();
            }
        }
        private Nullable<int> _ConfirmEmailTextId;
        partial void OnConfirmEmailTextIdChanging(Nullable<int> value);
        partial void OnConfirmEmailTextIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> RenewEmailTextId
        {
            get
            {
                return _RenewEmailTextId;
            }
            set
            {
                OnRenewEmailTextIdChanging(value);
                ReportPropertyChanging("RenewEmailTextId");
                _RenewEmailTextId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RenewEmailTextId");
                OnRenewEmailTextIdChanged();
            }
        }
        private Nullable<int> _RenewEmailTextId;
        partial void OnRenewEmailTextIdChanging(Nullable<int> value);
        partial void OnRenewEmailTextIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ExpireEmailTextId
        {
            get
            {
                return _ExpireEmailTextId;
            }
            set
            {
                OnExpireEmailTextIdChanging(value);
                ReportPropertyChanging("ExpireEmailTextId");
                _ExpireEmailTextId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireEmailTextId");
                OnExpireEmailTextIdChanged();
            }
        }
        private Nullable<int> _ExpireEmailTextId;
        partial void OnExpireEmailTextIdChanging(Nullable<int> value);
        partial void OnExpireEmailTextIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsSubscriptionEnabled
        {
            get
            {
                return _IsSubscriptionEnabled;
            }
            set
            {
                OnIsSubscriptionEnabledChanging(value);
                ReportPropertyChanging("IsSubscriptionEnabled");
                _IsSubscriptionEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSubscriptionEnabled");
                OnIsSubscriptionEnabledChanged();
            }
        }
        private bool _IsSubscriptionEnabled;
        partial void OnIsSubscriptionEnabledChanging(bool value);
        partial void OnIsSubscriptionEnabledChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_Template", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_Template", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_Template", "Subscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_SubscriptionTemplates_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_SubscriptionTemplates_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_SubscriptionTemplates_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_SubscriptionTemplates_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_SubscriptionTemplates_Network", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            AllowAutoRenew,
            IsDefaultOnAccountCreate,
            IsUserSubscribable,
            DurationValue,
            DurationKind,
            PriceUsdWithoutVat,
            PriceUsdWithVat,
            PriceEurWithoutVat,
            PriceEurWithVat,
            Name,
            IsForAllCompanyUsers,
            NetworkId,
            ConfirmEmailTextId,
            RenewEmailTextId,
            ExpireEmailTextId,
            IsSubscriptionEnabled,
        }

        #endregion

    }
    
    /// <summary>
    /// TAGS V2 Tag categories
    /// </summary>
    /// <LongDescription>
    /// TAGS V2 Tag categories allows to create different kind of tags with a set of usage rules for each.
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TagCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TagCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TagCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="canUsersCreate">Initial value of the CanUsersCreate property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static TagCategory CreateTagCategory(int id, string name, string alias, bool canUsersCreate, int sortOrder)
        {
            TagCategory tagCategory = new TagCategory();
            tagCategory.Id = id;
            tagCategory.Name = name;
            tagCategory.Alias = alias;
            tagCategory.CanUsersCreate = canUsersCreate;
            tagCategory.SortOrder = sortOrder;
            return tagCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool CanUsersCreate
        {
            get
            {
                return _CanUsersCreate;
            }
            set
            {
                OnCanUsersCreateChanging(value);
                ReportPropertyChanging("CanUsersCreate");
                _CanUsersCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanUsersCreate");
                OnCanUsersCreateChanged();
            }
        }
        private bool _CanUsersCreate;
        partial void OnCanUsersCreateChanging(bool value);
        partial void OnCanUsersCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private Nullable<int> _NetworkId;
        partial void OnNetworkIdChanging(Nullable<int> value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Rules
        {
            get
            {
                return _Rules;
            }
            set
            {
                OnRulesChanging(value);
                ReportPropertyChanging("Rules");
                _Rules = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rules");
                OnRulesChanged();
            }
        }
        private string _Rules;
        partial void OnRulesChanging(string value);
        partial void OnRulesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private int _SortOrder;
        partial void OnSortOrderChanging(int value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TagDefinitions_TagCategories", "TagDefinition")]
        public EntityCollection<TagDefinition> TagDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagDefinition>("NetworksModel.FK_dbo_TagDefinitions_TagCategories", "TagDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagDefinition>("NetworksModel.FK_dbo_TagDefinitions_TagCategories", "TagDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TagCategories_Network", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_TagCategories_Network", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_TagCategories_Network", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_TagCategories_Network", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_TagCategories_Network", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Name,
            Alias,
            CanUsersCreate,
            NetworkId,
            Rules,
            SortOrder,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TagDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TagDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TagDefinition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdDateUtc">Initial value of the CreatedDateUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        public static TagDefinition CreateTagDefinition(int id, int networkId, int categoryId, string name, System.DateTime createdDateUtc, int createdByUserId, string alias)
        {
            TagDefinition tagDefinition = new TagDefinition();
            tagDefinition.Id = id;
            tagDefinition.NetworkId = networkId;
            tagDefinition.CategoryId = categoryId;
            tagDefinition.Name = name;
            tagDefinition.CreatedDateUtc = createdDateUtc;
            tagDefinition.CreatedByUserId = createdByUserId;
            tagDefinition.Alias = alias;
            return tagDefinition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private int _CategoryId;
        partial void OnCategoryIdChanging(int value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreatedDateUtc
        {
            get
            {
                return _CreatedDateUtc;
            }
            set
            {
                OnCreatedDateUtcChanging(value);
                ReportPropertyChanging("CreatedDateUtc");
                _CreatedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateUtc");
                OnCreatedDateUtcChanged();
            }
        }
        private System.DateTime _CreatedDateUtc;
        partial void OnCreatedDateUtcChanging(System.DateTime value);
        partial void OnCreatedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private string _Data;
        partial void OnDataChanging(string value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TagDefinitions_Networks", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_TagDefinitions_Networks", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_TagDefinitions_Networks", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_dbo_TagDefinitions_Networks", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_dbo_TagDefinitions_Networks", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TagDefinitions_TagCategories", "TagCategory")]
        public TagCategory Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagCategory>("NetworksModel.FK_dbo_TagDefinitions_TagCategories", "TagCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagCategory>("NetworksModel.FK_dbo_TagDefinitions_TagCategories", "TagCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TagCategory> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagCategory>("NetworksModel.FK_dbo_TagDefinitions_TagCategories", "TagCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TagCategory>("NetworksModel.FK_dbo_TagDefinitions_TagCategories", "TagCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TagDefinitions_Users", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TagDefinitions_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TagDefinitions_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TagDefinitions_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_TagDefinitions_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResourceTags_TagDefinitions", "PartnerResourceTag")]
        public EntityCollection<PartnerResourceTag> PartnerResourceTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartnerResourceTag>("NetworksModel.FK_dbo_PartnerResourceTags_TagDefinitions", "PartnerResourceTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartnerResourceTag>("NetworksModel.FK_dbo_PartnerResourceTags_TagDefinitions", "PartnerResourceTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyTags_Tags", "CompanyTag")]
        public EntityCollection<CompanyTag> CompanyTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyTag>("NetworksModel.FK_dbo_CompanyTags_Tags", "CompanyTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyTag>("NetworksModel.FK_dbo_CompanyTags_Tags", "CompanyTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserTags_Tags", "UserTag")]
        public EntityCollection<UserTag> UserTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTag>("NetworksModel.FK_dbo_UserTags_Tags", "UserTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTag>("NetworksModel.FK_dbo_UserTags_Tags", "UserTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupTags_Tag", "GroupTag")]
        public EntityCollection<GroupTag> GroupTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupTag>("NetworksModel.FK_dbo_GroupTags_Tag", "GroupTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupTag>("NetworksModel.FK_dbo_GroupTags_Tag", "GroupTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemTags_Tag", "TimelineItemTag")]
        public EntityCollection<TimelineItemTag> TimelineItemTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemTag>("NetworksModel.FK_dbo_TimelineItemTags_Tag", "TimelineItemTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemTag>("NetworksModel.FK_dbo_TimelineItemTags_Tag", "TimelineItemTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_AdTags_Tag", "AdTag")]
        public EntityCollection<AdTag> AdTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdTag>("NetworksModel.FK_dbo_AdTags_Tag", "AdTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdTag>("NetworksModel.FK_dbo_AdTags_Tag", "AdTag", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            NetworkId,
            CategoryId,
            Name,
            Description,
            CreatedDateUtc,
            CreatedByUserId,
            Alias,
            Data,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Replaced by groups.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="ownerType">Initial value of the OwnerType property.</param>
        /// <param name="ownerValue">Initial value of the OwnerValue property.</param>
        public static Team CreateTeam(int id, int companyId, string name, System.DateTime date, int ownerType, int ownerValue)
        {
            Team team = new Team();
            team.Id = id;
            team.CompanyId = companyId;
            team.Name = name;
            team.Date = date;
            team.OwnerType = ownerType;
            team.OwnerValue = ownerValue;
            return team;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int OwnerType
        {
            get
            {
                return _OwnerType;
            }
            set
            {
                OnOwnerTypeChanging(value);
                ReportPropertyChanging("OwnerType");
                _OwnerType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerType");
                OnOwnerTypeChanged();
            }
        }
        private int _OwnerType;
        partial void OnOwnerTypeChanging(int value);
        partial void OnOwnerTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int OwnerValue
        {
            get
            {
                return _OwnerValue;
            }
            set
            {
                OnOwnerValueChanging(value);
                ReportPropertyChanging("OwnerValue");
                _OwnerValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerValue");
                OnOwnerValueChanged();
            }
        }
        private int _OwnerValue;
        partial void OnOwnerValueChanging(int value);
        partial void OnOwnerValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Teams_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Teams_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Teams_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Teams_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_Teams_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TeamsMembers_Team", "TeamMembers")]
        public EntityCollection<TeamMember> TeamMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamMember>("NetworksModel.FK_TeamsMembers_Team", "TeamMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamMember>("NetworksModel.FK_TeamsMembers_Team", "TeamMembers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_TeamTimeline", "TimelineItems")]
        public EntityCollection<TimelineItem> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_TeamTimeline", "TimelineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_TeamTimeline", "TimelineItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_Team", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("NetworksModel.FK_Events_Team", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("NetworksModel.FK_Events_Team", "Event", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            CompanyId,
            Name,
            Description,
            Date,
            OwnerType,
            OwnerValue,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Replaced by groups.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TeamMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TeamMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamMember object.
        /// </summary>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static TeamMember CreateTeamMember(int teamId, System.DateTime date, int userId)
        {
            TeamMember teamMember = new TeamMember();
            teamMember.TeamId = teamId;
            teamMember.Date = date;
            teamMember.UserId = userId;
            return teamMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                if (_TeamId != value)
                {
                    OnTeamIdChanging(value);
                    ReportPropertyChanging("TeamId");
                    _TeamId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamId");
                    OnTeamIdChanged();
                }
            }
        }
        private int _TeamId;
        partial void OnTeamIdChanging(int value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Notifications
        {
            get
            {
                return _Notifications;
            }
            set
            {
                OnNotificationsChanging(value);
                ReportPropertyChanging("Notifications");
                _Notifications = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notifications");
                OnNotificationsChanged();
            }
        }
        private Nullable<int> _Notifications;
        partial void OnNotificationsChanging(Nullable<int> value);
        partial void OnNotificationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Rights
        {
            get
            {
                return _Rights;
            }
            set
            {
                OnRightsChanging(value);
                ReportPropertyChanging("Rights");
                _Rights = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rights");
                OnRightsChanged();
            }
        }
        private Nullable<int> _Rights;
        partial void OnRightsChanging(Nullable<int> value);
        partial void OnRightsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TeamMembers_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TeamMembers_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TeamMembers_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TeamMembers_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_TeamMembers_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TeamsMembers_Team", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("NetworksModel.FK_TeamsMembers_Team", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("NetworksModel.FK_TeamsMembers_Team", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("NetworksModel.FK_TeamsMembers_Team", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("NetworksModel.FK_TeamsMembers_Team", "Teams", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            TeamId,
            Date,
            Notifications,
            Rights,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TimelineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TimelineItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimelineItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="itemType">Initial value of the ItemType property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="privateMode">Initial value of the PrivateMode property.</param>
        /// <param name="postedByUserId">Initial value of the PostedByUserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static TimelineItem CreateTimelineItem(int id, int itemType, string text, System.DateTime createDate, int privateMode, int postedByUserId, int networkId)
        {
            TimelineItem timelineItem = new TimelineItem();
            timelineItem.Id = id;
            timelineItem.ItemType = itemType;
            timelineItem.Text = text;
            timelineItem.CreateDate = createDate;
            timelineItem.PrivateMode = privateMode;
            timelineItem.PostedByUserId = postedByUserId;
            timelineItem.NetworkId = networkId;
            return timelineItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private int _ItemType;
        partial void OnItemTypeChanging(int value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private string _Text;
        partial void OnTextChanging(string value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private System.DateTime _CreateDate;
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PrivateMode
        {
            get
            {
                return _PrivateMode;
            }
            set
            {
                OnPrivateModeChanging(value);
                ReportPropertyChanging("PrivateMode");
                _PrivateMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivateMode");
                OnPrivateModeChanged();
            }
        }
        private int _PrivateMode;
        partial void OnPrivateModeChanging(int value);
        partial void OnPrivateModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<int> _UserId;
        partial void OnUserIdChanging(Nullable<int> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<int> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<int> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private Nullable<int> _EventId;
        partial void OnEventIdChanging(Nullable<int> value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<int> _GroupId;
        partial void OnGroupIdChanging(Nullable<int> value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                OnPlaceIdChanging(value);
                ReportPropertyChanging("PlaceId");
                _PlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceId");
                OnPlaceIdChanged();
            }
        }
        private Nullable<int> _PlaceId;
        partial void OnPlaceIdChanging(Nullable<int> value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AdId
        {
            get
            {
                return _AdId;
            }
            set
            {
                OnAdIdChanging(value);
                ReportPropertyChanging("AdId");
                _AdId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdId");
                OnAdIdChanged();
            }
        }
        private Nullable<int> _AdId;
        partial void OnAdIdChanging(Nullable<int> value);
        partial void OnAdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<int> _ProjectId;
        partial void OnProjectIdChanging(Nullable<int> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<int> _TeamId;
        partial void OnTeamIdChanging(Nullable<int> value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Extra
        {
            get
            {
                return _Extra;
            }
            set
            {
                OnExtraChanging(value);
                ReportPropertyChanging("Extra");
                _Extra = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Extra");
                OnExtraChanged();
            }
        }
        private string _Extra;
        partial void OnExtraChanging(string value);
        partial void OnExtraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ExtraType
        {
            get
            {
                return _ExtraType;
            }
            set
            {
                OnExtraTypeChanging(value);
                ReportPropertyChanging("ExtraType");
                _ExtraType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExtraType");
                OnExtraTypeChanged();
            }
        }
        private Nullable<int> _ExtraType;
        partial void OnExtraTypeChanging(Nullable<int> value);
        partial void OnExtraTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PostedByUserId
        {
            get
            {
                return _PostedByUserId;
            }
            set
            {
                OnPostedByUserIdChanging(value);
                ReportPropertyChanging("PostedByUserId");
                _PostedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedByUserId");
                OnPostedByUserIdChanged();
            }
        }
        private int _PostedByUserId;
        partial void OnPostedByUserIdChanging(int value);
        partial void OnPostedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ImportedId
        {
            get
            {
                return _ImportedId;
            }
            set
            {
                OnImportedIdChanging(value);
                ReportPropertyChanging("ImportedId");
                _ImportedId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportedId");
                OnImportedIdChanged();
            }
        }
        private string _ImportedId;
        partial void OnImportedIdChanging(string value);
        partial void OnImportedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DeleteDateUtc
        {
            get
            {
                return _DeleteDateUtc;
            }
            set
            {
                OnDeleteDateUtcChanging(value);
                ReportPropertyChanging("DeleteDateUtc");
                _DeleteDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteDateUtc");
                OnDeleteDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DeleteDateUtc;
        partial void OnDeleteDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnDeleteDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> InboundEmailId
        {
            get
            {
                return _InboundEmailId;
            }
            set
            {
                OnInboundEmailIdChanging(value);
                ReportPropertyChanging("InboundEmailId");
                _InboundEmailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InboundEmailId");
                OnInboundEmailIdChanged();
            }
        }
        private Nullable<int> _InboundEmailId;
        partial void OnInboundEmailIdChanging(Nullable<int> value);
        partial void OnInboundEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> PartnerResourceId
        {
            get
            {
                return _PartnerResourceId;
            }
            set
            {
                OnPartnerResourceIdChanging(value);
                ReportPropertyChanging("PartnerResourceId");
                _PartnerResourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartnerResourceId");
                OnPartnerResourceIdChanged();
            }
        }
        private Nullable<int> _PartnerResourceId;
        partial void OnPartnerResourceIdChanging(Nullable<int> value);
        partial void OnPartnerResourceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_AdTimeline", "Ads")]
        public Ad Ad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ad>("NetworksModel.FK_TimelineItems_AdTimeline", "Ads").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ad>("NetworksModel.FK_TimelineItems_AdTimeline", "Ads").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ad> AdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ad>("NetworksModel.FK_TimelineItems_AdTimeline", "Ads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ad>("NetworksModel.FK_TimelineItems_AdTimeline", "Ads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_CompanyTimeline", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_TimelineItems_CompanyTimeline", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_TimelineItems_CompanyTimeline", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_TimelineItems_CompanyTimeline", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_TimelineItems_CompanyTimeline", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_EventTimeline", "Events")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("NetworksModel.FK_TimelineItems_EventTimeline", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("NetworksModel.FK_TimelineItems_EventTimeline", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("NetworksModel.FK_TimelineItems_EventTimeline", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("NetworksModel.FK_TimelineItems_EventTimeline", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_GroupTimeline", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_TimelineItems_GroupTimeline", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_TimelineItems_GroupTimeline", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("NetworksModel.FK_TimelineItems_GroupTimeline", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("NetworksModel.FK_TimelineItems_GroupTimeline", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_ProjectTimeline", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("NetworksModel.FK_TimelineItems_ProjectTimeline", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("NetworksModel.FK_TimelineItems_ProjectTimeline", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("NetworksModel.FK_TimelineItems_ProjectTimeline", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("NetworksModel.FK_TimelineItems_ProjectTimeline", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_TeamTimeline", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("NetworksModel.FK_TimelineItems_TeamTimeline", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("NetworksModel.FK_TimelineItems_TeamTimeline", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("NetworksModel.FK_TimelineItems_TeamTimeline", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("NetworksModel.FK_TimelineItems_TeamTimeline", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItemComments_TimelineItem", "TimelineItemComments")]
        public EntityCollection<TimelineItemComment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemComment>("NetworksModel.FK_TimelineItemComments_TimelineItem", "TimelineItemComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemComment>("NetworksModel.FK_TimelineItemComments_TimelineItem", "TimelineItemComments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_PostedBy", "Users")]
        public User PostedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TimelineItems_PostedBy", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TimelineItems_PostedBy", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> PostedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TimelineItems_PostedBy", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_TimelineItems_PostedBy", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_UserTimeline", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TimelineItems_UserTimeline", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TimelineItems_UserTimeline", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TimelineItems_UserTimeline", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_TimelineItems_UserTimeline", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_TimelineItems_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_TimelineItems_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_TimelineItems_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_TimelineItems_NetworkId", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemSkills_TimelineItem", "TimelineItemSkill")]
        public EntityCollection<TimelineItemSkill> Skills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemSkill>("NetworksModel.FK_dbo_TimelineItemSkills_TimelineItem", "TimelineItemSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemSkill>("NetworksModel.FK_dbo_TimelineItemSkills_TimelineItem", "TimelineItemSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItems_DeletedBy", "User")]
        public User DeletedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItems_DeletedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItems_DeletedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItems_DeletedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_TimelineItems_DeletedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItems_InboundEmailId", "InboundEmailMessage")]
        public InboundEmailMessage InboundEmailMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundEmailMessage>("NetworksModel.FK_dbo_TimelineItems_InboundEmailId", "InboundEmailMessage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundEmailMessage>("NetworksModel.FK_dbo_TimelineItems_InboundEmailId", "InboundEmailMessage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InboundEmailMessage> InboundEmailMessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundEmailMessage>("NetworksModel.FK_dbo_TimelineItems_InboundEmailId", "InboundEmailMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InboundEmailMessage>("NetworksModel.FK_dbo_TimelineItems_InboundEmailId", "InboundEmailMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Likes_TimelineItems", "Like")]
        public EntityCollection<TimelineItemLike> Likes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemLike>("NetworksModel.FK_Likes_TimelineItems", "Like");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemLike>("NetworksModel.FK_Likes_TimelineItems", "Like", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItems_PartnerResources", "PartnerResource")]
        public PartnerResource PartnerResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerResource>("NetworksModel.FK_dbo_TimelineItems_PartnerResources", "PartnerResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerResource>("NetworksModel.FK_dbo_TimelineItems_PartnerResources", "PartnerResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PartnerResource> PartnerResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PartnerResource>("NetworksModel.FK_dbo_TimelineItems_PartnerResources", "PartnerResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PartnerResource>("NetworksModel.FK_dbo_TimelineItems_PartnerResources", "PartnerResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemTags_Relation", "TimelineItemTag")]
        public EntityCollection<TimelineItemTag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemTag>("NetworksModel.FK_dbo_TimelineItemTags_Relation", "TimelineItemTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemTag>("NetworksModel.FK_dbo_TimelineItemTags_Relation", "TimelineItemTag", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ItemType,
            Text,
            CreateDate,
            PrivateMode,
            UserId,
            CompanyId,
            EventId,
            GroupId,
            PlaceId,
            AdId,
            ProjectId,
            TeamId,
            Extra,
            ExtraType,
            PostedByUserId,
            NetworkId,
            ImportedId,
            DeleteReason,
            DeletedByUserId,
            DeleteDateUtc,
            InboundEmailId,
            PartnerResourceId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TimelineItemComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TimelineItemComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimelineItemComment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="timelineItemId">Initial value of the TimelineItemId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="postedByUserId">Initial value of the PostedByUserId property.</param>
        public static TimelineItemComment CreateTimelineItemComment(int id, int timelineItemId, System.DateTime createDate, string text, int postedByUserId)
        {
            TimelineItemComment timelineItemComment = new TimelineItemComment();
            timelineItemComment.Id = id;
            timelineItemComment.TimelineItemId = timelineItemId;
            timelineItemComment.CreateDate = createDate;
            timelineItemComment.Text = text;
            timelineItemComment.PostedByUserId = postedByUserId;
            return timelineItemComment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TimelineItemId
        {
            get
            {
                return _TimelineItemId;
            }
            set
            {
                OnTimelineItemIdChanging(value);
                ReportPropertyChanging("TimelineItemId");
                _TimelineItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimelineItemId");
                OnTimelineItemIdChanged();
            }
        }
        private int _TimelineItemId;
        partial void OnTimelineItemIdChanging(int value);
        partial void OnTimelineItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private System.DateTime _CreateDate;
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private string _Text;
        partial void OnTextChanging(string value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PostedByUserId
        {
            get
            {
                return _PostedByUserId;
            }
            set
            {
                OnPostedByUserIdChanging(value);
                ReportPropertyChanging("PostedByUserId");
                _PostedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedByUserId");
                OnPostedByUserIdChanged();
            }
        }
        private int _PostedByUserId;
        partial void OnPostedByUserIdChanging(int value);
        partial void OnPostedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ImportedId
        {
            get
            {
                return _ImportedId;
            }
            set
            {
                OnImportedIdChanging(value);
                ReportPropertyChanging("ImportedId");
                _ImportedId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportedId");
                OnImportedIdChanged();
            }
        }
        private string _ImportedId;
        partial void OnImportedIdChanging(string value);
        partial void OnImportedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Extra
        {
            get
            {
                return _Extra;
            }
            set
            {
                OnExtraChanging(value);
                ReportPropertyChanging("Extra");
                _Extra = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Extra");
                OnExtraChanged();
            }
        }
        private string _Extra;
        partial void OnExtraChanging(string value);
        partial void OnExtraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ExtraType
        {
            get
            {
                return _ExtraType;
            }
            set
            {
                OnExtraTypeChanging(value);
                ReportPropertyChanging("ExtraType");
                _ExtraType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExtraType");
                OnExtraTypeChanged();
            }
        }
        private Nullable<int> _ExtraType;
        partial void OnExtraTypeChanging(Nullable<int> value);
        partial void OnExtraTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> InboundEmailId
        {
            get
            {
                return _InboundEmailId;
            }
            set
            {
                OnInboundEmailIdChanging(value);
                ReportPropertyChanging("InboundEmailId");
                _InboundEmailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InboundEmailId");
                OnInboundEmailIdChanged();
            }
        }
        private Nullable<int> _InboundEmailId;
        partial void OnInboundEmailIdChanging(Nullable<int> value);
        partial void OnInboundEmailIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItemComments_TimelineItem", "TimelineItems")]
        public TimelineItem TimelineItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_TimelineItemComments_TimelineItem", "TimelineItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_TimelineItemComments_TimelineItem", "TimelineItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimelineItem> TimelineItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_TimelineItemComments_TimelineItem", "TimelineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimelineItem>("NetworksModel.FK_TimelineItemComments_TimelineItem", "TimelineItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItemComments_User", "User")]
        public User PostedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TimelineItemComments_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TimelineItemComments_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> PostedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_TimelineItemComments_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_TimelineItemComments_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_LikesComment_TimelineItemComments", "LikeComment")]
        public EntityCollection<TimelineItemCommentLike> Likes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemCommentLike>("NetworksModel.FK_LikesComment_TimelineItemComments", "LikeComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemCommentLike>("NetworksModel.FK_LikesComment_TimelineItemComments", "LikeComment", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            TimelineItemId,
            CreateDate,
            Text,
            PostedByUserId,
            ImportedId,
            Extra,
            ExtraType,
            InboundEmailId,
        }

        #endregion

    }
    
    /// <summary>
    /// Stores information between a user and a timeline comment (is read, was notified, has liked).
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TimelineItemCommentLike")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TimelineItemCommentLike : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimelineItemCommentLike object.
        /// </summary>
        /// <param name="timelineItemCommentId">Initial value of the TimelineItemCommentId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="wasInstantlyNotified">Initial value of the WasInstantlyNotified property.</param>
        public static TimelineItemCommentLike CreateTimelineItemCommentLike(int timelineItemCommentId, int userId, bool wasInstantlyNotified)
        {
            TimelineItemCommentLike timelineItemCommentLike = new TimelineItemCommentLike();
            timelineItemCommentLike.TimelineItemCommentId = timelineItemCommentId;
            timelineItemCommentLike.UserId = userId;
            timelineItemCommentLike.WasInstantlyNotified = wasInstantlyNotified;
            return timelineItemCommentLike;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int TimelineItemCommentId
        {
            get
            {
                return _TimelineItemCommentId;
            }
            set
            {
                if (_TimelineItemCommentId != value)
                {
                    OnTimelineItemCommentIdChanging(value);
                    ReportPropertyChanging("TimelineItemCommentId");
                    _TimelineItemCommentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimelineItemCommentId");
                    OnTimelineItemCommentIdChanged();
                }
            }
        }
        private int _TimelineItemCommentId;
        partial void OnTimelineItemCommentIdChanging(int value);
        partial void OnTimelineItemCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> FirstDateLikedUtc
        {
            get
            {
                return _FirstDateLikedUtc;
            }
            set
            {
                OnFirstDateLikedUtcChanging(value);
                ReportPropertyChanging("FirstDateLikedUtc");
                _FirstDateLikedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstDateLikedUtc");
                OnFirstDateLikedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _FirstDateLikedUtc;
        partial void OnFirstDateLikedUtcChanging(Nullable<System.DateTime> value);
        partial void OnFirstDateLikedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsLiked
        {
            get
            {
                return _IsLiked;
            }
            set
            {
                OnIsLikedChanging(value);
                ReportPropertyChanging("IsLiked");
                _IsLiked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLiked");
                OnIsLikedChanged();
            }
        }
        private Nullable<bool> _IsLiked;
        partial void OnIsLikedChanging(Nullable<bool> value);
        partial void OnIsLikedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool WasInstantlyNotified
        {
            get
            {
                return _WasInstantlyNotified;
            }
            set
            {
                OnWasInstantlyNotifiedChanging(value);
                ReportPropertyChanging("WasInstantlyNotified");
                _WasInstantlyNotified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WasInstantlyNotified");
                OnWasInstantlyNotifiedChanged();
            }
        }
        private bool _WasInstantlyNotified;
        partial void OnWasInstantlyNotifiedChanging(bool value);
        partial void OnWasInstantlyNotifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateReadUtc
        {
            get
            {
                return _DateReadUtc;
            }
            set
            {
                OnDateReadUtcChanging(value);
                ReportPropertyChanging("DateReadUtc");
                _DateReadUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateReadUtc");
                OnDateReadUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateReadUtc;
        partial void OnDateReadUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateReadUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_LikeComments_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_LikeComments_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_LikeComments_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_LikeComments_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_LikeComments_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_LikesComment_TimelineItemComments", "TimelineItemComment")]
        public TimelineItemComment TimelineItemComment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItemComment>("NetworksModel.FK_LikesComment_TimelineItemComments", "TimelineItemComment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItemComment>("NetworksModel.FK_LikesComment_TimelineItemComments", "TimelineItemComment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimelineItemComment> TimelineItemCommentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItemComment>("NetworksModel.FK_LikesComment_TimelineItemComments", "TimelineItemComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimelineItemComment>("NetworksModel.FK_LikesComment_TimelineItemComments", "TimelineItemComment", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            TimelineItemCommentId,
            UserId,
            FirstDateLikedUtc,
            IsLiked,
            WasInstantlyNotified,
            DateReadUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// Stores information between a user and a timeline item (is read, was notified, has liked).
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TimelineItemLike")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TimelineItemLike : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimelineItemLike object.
        /// </summary>
        /// <param name="timelineItemId">Initial value of the TimelineItemId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="wasInstantlyNotified">Initial value of the WasInstantlyNotified property.</param>
        public static TimelineItemLike CreateTimelineItemLike(int timelineItemId, int userId, bool wasInstantlyNotified)
        {
            TimelineItemLike timelineItemLike = new TimelineItemLike();
            timelineItemLike.TimelineItemId = timelineItemId;
            timelineItemLike.UserId = userId;
            timelineItemLike.WasInstantlyNotified = wasInstantlyNotified;
            return timelineItemLike;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int TimelineItemId
        {
            get
            {
                return _TimelineItemId;
            }
            set
            {
                if (_TimelineItemId != value)
                {
                    OnTimelineItemIdChanging(value);
                    ReportPropertyChanging("TimelineItemId");
                    _TimelineItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimelineItemId");
                    OnTimelineItemIdChanged();
                }
            }
        }
        private int _TimelineItemId;
        partial void OnTimelineItemIdChanging(int value);
        partial void OnTimelineItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> FirstDateLikedUtc
        {
            get
            {
                return _FirstDateLikedUtc;
            }
            set
            {
                OnFirstDateLikedUtcChanging(value);
                ReportPropertyChanging("FirstDateLikedUtc");
                _FirstDateLikedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstDateLikedUtc");
                OnFirstDateLikedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _FirstDateLikedUtc;
        partial void OnFirstDateLikedUtcChanging(Nullable<System.DateTime> value);
        partial void OnFirstDateLikedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsLiked
        {
            get
            {
                return _IsLiked;
            }
            set
            {
                OnIsLikedChanging(value);
                ReportPropertyChanging("IsLiked");
                _IsLiked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLiked");
                OnIsLikedChanged();
            }
        }
        private Nullable<bool> _IsLiked;
        partial void OnIsLikedChanging(Nullable<bool> value);
        partial void OnIsLikedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool WasInstantlyNotified
        {
            get
            {
                return _WasInstantlyNotified;
            }
            set
            {
                OnWasInstantlyNotifiedChanging(value);
                ReportPropertyChanging("WasInstantlyNotified");
                _WasInstantlyNotified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WasInstantlyNotified");
                OnWasInstantlyNotifiedChanged();
            }
        }
        private bool _WasInstantlyNotified;
        partial void OnWasInstantlyNotifiedChanging(bool value);
        partial void OnWasInstantlyNotifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateReadUtc
        {
            get
            {
                return _DateReadUtc;
            }
            set
            {
                OnDateReadUtcChanging(value);
                ReportPropertyChanging("DateReadUtc");
                _DateReadUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateReadUtc");
                OnDateReadUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateReadUtc;
        partial void OnDateReadUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateReadUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Likes_TimelineItems", "TimelineItem")]
        public TimelineItem TimelineItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_Likes_TimelineItems", "TimelineItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_Likes_TimelineItems", "TimelineItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimelineItem> TimelineItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_Likes_TimelineItems", "TimelineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimelineItem>("NetworksModel.FK_Likes_TimelineItems", "TimelineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Likes_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Likes_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Likes_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_Likes_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_Likes_User", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            TimelineItemId,
            UserId,
            FirstDateLikedUtc,
            IsLiked,
            WasInstantlyNotified,
            DateReadUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TimelineItemSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TimelineItemSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimelineItemSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="timelineItemId">Initial value of the TimelineItemId property.</param>
        /// <param name="skillId">Initial value of the SkillId property.</param>
        /// <param name="dateUtc">Initial value of the DateUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static TimelineItemSkill CreateTimelineItemSkill(int id, int timelineItemId, int skillId, System.DateTime dateUtc, int createdByUserId)
        {
            TimelineItemSkill timelineItemSkill = new TimelineItemSkill();
            timelineItemSkill.Id = id;
            timelineItemSkill.TimelineItemId = timelineItemId;
            timelineItemSkill.SkillId = skillId;
            timelineItemSkill.DateUtc = dateUtc;
            timelineItemSkill.CreatedByUserId = createdByUserId;
            return timelineItemSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TimelineItemId
        {
            get
            {
                return _TimelineItemId;
            }
            set
            {
                OnTimelineItemIdChanging(value);
                ReportPropertyChanging("TimelineItemId");
                _TimelineItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimelineItemId");
                OnTimelineItemIdChanged();
            }
        }
        private int _TimelineItemId;
        partial void OnTimelineItemIdChanging(int value);
        partial void OnTimelineItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private int _SkillId;
        partial void OnSkillIdChanging(int value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateUtc
        {
            get
            {
                return _DateUtc;
            }
            set
            {
                OnDateUtcChanging(value);
                ReportPropertyChanging("DateUtc");
                _DateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUtc");
                OnDateUtcChanged();
            }
        }
        private System.DateTime _DateUtc;
        partial void OnDateUtcChanging(System.DateTime value);
        partial void OnDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DeletedDateUtc
        {
            get
            {
                return _DeletedDateUtc;
            }
            set
            {
                OnDeletedDateUtcChanging(value);
                ReportPropertyChanging("DeletedDateUtc");
                _DeletedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDateUtc");
                OnDeletedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DeletedDateUtc;
        partial void OnDeletedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnDeletedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemSkills_Skill", "Skill")]
        public Skill Skill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_dbo_TimelineItemSkills_Skill", "Skill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_dbo_TimelineItemSkills_Skill", "Skill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Skill> SkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_dbo_TimelineItemSkills_Skill", "Skill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Skill>("NetworksModel.FK_dbo_TimelineItemSkills_Skill", "Skill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemSkills_TimelineItem", "TimelineItem")]
        public TimelineItem TimelineItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_dbo_TimelineItemSkills_TimelineItem", "TimelineItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_dbo_TimelineItemSkills_TimelineItem", "TimelineItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimelineItem> TimelineItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_dbo_TimelineItemSkills_TimelineItem", "TimelineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimelineItem>("NetworksModel.FK_dbo_TimelineItemSkills_TimelineItem", "TimelineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemSkills_CreatedBy", "User")]
        public User CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemSkills_CreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemSkills_CreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemSkills_CreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemSkills_CreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemSkills_DeletedBy", "User")]
        public User DeletedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemSkills_DeletedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemSkills_DeletedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemSkills_DeletedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemSkills_DeletedBy", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            TimelineItemId,
            SkillId,
            DateUtc,
            CreatedByUserId,
            DeletedDateUtc,
            DeletedByUserId,
            DeleteReason,
        }

        #endregion

    }
    
    /// <summary>
    /// TAGS V2 Tag definitions
    /// </summary>
    /// <LongDescription>
    /// TAGS V2 Tag definitions are all the individual tags that can be used through the entire app. A tag has a category.
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TimelineItemTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TimelineItemTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimelineItemTag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="relationId">Initial value of the RelationId property.</param>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static TimelineItemTag CreateTimelineItemTag(int id, int relationId, int tagId, System.DateTime dateCreatedUtc, int createdByUserId, int sortOrder)
        {
            TimelineItemTag timelineItemTag = new TimelineItemTag();
            timelineItemTag.Id = id;
            timelineItemTag.RelationId = relationId;
            timelineItemTag.TagId = tagId;
            timelineItemTag.DateCreatedUtc = dateCreatedUtc;
            timelineItemTag.CreatedByUserId = createdByUserId;
            timelineItemTag.SortOrder = sortOrder;
            return timelineItemTag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int RelationId
        {
            get
            {
                return _RelationId;
            }
            set
            {
                OnRelationIdChanging(value);
                ReportPropertyChanging("RelationId");
                _RelationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationId");
                OnRelationIdChanged();
            }
        }
        private int _RelationId;
        partial void OnRelationIdChanging(int value);
        partial void OnRelationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                OnTagIdChanging(value);
                ReportPropertyChanging("TagId");
                _TagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagId");
                OnTagIdChanged();
            }
        }
        private int _TagId;
        partial void OnTagIdChanging(int value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateDeletedUtc
        {
            get
            {
                return _DateDeletedUtc;
            }
            set
            {
                OnDateDeletedUtcChanging(value);
                ReportPropertyChanging("DateDeletedUtc");
                _DateDeletedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeletedUtc");
                OnDateDeletedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateDeletedUtc;
        partial void OnDateDeletedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateDeletedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private int _SortOrder;
        partial void OnSortOrderChanging(int value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemTags_Tag", "TagDefinition")]
        public TagDefinition TagDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_TimelineItemTags_Tag", "TagDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_TimelineItemTags_Tag", "TagDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TagDefinition> TagDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_TimelineItemTags_Tag", "TagDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TagDefinition>("NetworksModel.FK_dbo_TimelineItemTags_Tag", "TagDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemTags_Relation", "TimelineItem")]
        public TimelineItem TimelineItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_dbo_TimelineItemTags_Relation", "TimelineItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_dbo_TimelineItemTags_Relation", "TimelineItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimelineItem> TimelineItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimelineItem>("NetworksModel.FK_dbo_TimelineItemTags_Relation", "TimelineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimelineItem>("NetworksModel.FK_dbo_TimelineItemTags_Relation", "TimelineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemTags_CreatedByUser", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemTags_CreatedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemTags_CreatedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemTags_CreatedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemTags_CreatedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemTags_DeletedByUser", "User")]
        public User DeletedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemTags_DeletedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemTags_DeletedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemTags_DeletedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_TimelineItemTags_DeletedByUser", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            RelationId,
            TagId,
            DateCreatedUtc,
            CreatedByUserId,
            DateDeletedUtc,
            DeletedByUserId,
            DeleteReason,
            SortOrder,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TouchCommunication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TouchCommunication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TouchCommunication object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="backgroundColor">Initial value of the BackgroundColor property.</param>
        /// <param name="backgroundUrl">Initial value of the BackgroundUrl property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static TouchCommunication CreateTouchCommunication(int id, int type, System.DateTime date, string backgroundColor, string backgroundUrl, int networkId)
        {
            TouchCommunication touchCommunication = new TouchCommunication();
            touchCommunication.Id = id;
            touchCommunication.Type = type;
            touchCommunication.Date = date;
            touchCommunication.BackgroundColor = backgroundColor;
            touchCommunication.BackgroundUrl = backgroundUrl;
            touchCommunication.NetworkId = networkId;
            return touchCommunication;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private int _Type;
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string BackgroundColor
        {
            get
            {
                return _BackgroundColor;
            }
            set
            {
                OnBackgroundColorChanging(value);
                ReportPropertyChanging("BackgroundColor");
                _BackgroundColor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackgroundColor");
                OnBackgroundColorChanged();
            }
        }
        private string _BackgroundColor;
        partial void OnBackgroundColorChanging(string value);
        partial void OnBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string BackgroundUrl
        {
            get
            {
                return _BackgroundUrl;
            }
            set
            {
                OnBackgroundUrlChanging(value);
                ReportPropertyChanging("BackgroundUrl");
                _BackgroundUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackgroundUrl");
                OnBackgroundUrlChanged();
            }
        }
        private string _BackgroundUrl;
        partial void OnBackgroundUrlChanging(string value);
        partial void OnBackgroundUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TouchCommunicationItems_TouchCommunication", "TouchCommunicationItems")]
        public EntityCollection<TouchCommunicationItem> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TouchCommunicationItem>("NetworksModel.FK_TouchCommunicationItems_TouchCommunication", "TouchCommunicationItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TouchCommunicationItem>("NetworksModel.FK_TouchCommunicationItems_TouchCommunication", "TouchCommunicationItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TouchCommunications_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_TouchCommunications_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_TouchCommunications_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_TouchCommunications_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_TouchCommunications_NetworkId", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            Type,
            Date,
            BackgroundColor,
            BackgroundUrl,
            NetworkId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="TouchCommunicationItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class TouchCommunicationItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TouchCommunicationItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        public static TouchCommunicationItem CreateTouchCommunicationItem(int id, int parentId, string title, string description, System.DateTime start, System.DateTime end)
        {
            TouchCommunicationItem touchCommunicationItem = new TouchCommunicationItem();
            touchCommunicationItem.Id = id;
            touchCommunicationItem.ParentId = parentId;
            touchCommunicationItem.Title = title;
            touchCommunicationItem.Description = description;
            touchCommunicationItem.Start = start;
            touchCommunicationItem.End = end;
            return touchCommunicationItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private int _ParentId;
        partial void OnParentIdChanging(int value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private string _Description;
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private System.DateTime _Start;
        partial void OnStartChanging(System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private System.DateTime _End;
        partial void OnEndChanging(System.DateTime value);
        partial void OnEndChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TouchCommunicationItems_TouchCommunication", "TouchCommunications")]
        public TouchCommunication TouchCommunication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TouchCommunication>("NetworksModel.FK_TouchCommunicationItems_TouchCommunication", "TouchCommunications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TouchCommunication>("NetworksModel.FK_TouchCommunicationItems_TouchCommunication", "TouchCommunications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TouchCommunication> TouchCommunicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TouchCommunication>("NetworksModel.FK_TouchCommunicationItems_TouchCommunication", "TouchCommunications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TouchCommunication>("NetworksModel.FK_TouchCommunicationItems_TouchCommunication", "TouchCommunications", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            ParentId,
            Title,
            Description,
            Start,
            End,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="invitationsLeft">Initial value of the InvitationsLeft property.</param>
        /// <param name="companyAccessLevel">Initial value of the CompanyAccessLevel property.</param>
        /// <param name="networkAccessLevel">Initial value of the NetworkAccessLevel property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="isEmailConfirmed">Initial value of the IsEmailConfirmed property.</param>
        public static User CreateUser(int id, System.Guid userId, string login, string firstName, string lastName, int companyID, int score, int invitationsLeft, int companyAccessLevel, int networkAccessLevel, int networkId, bool isEmailConfirmed)
        {
            User user = new User();
            user.Id = id;
            user.UserId = userId;
            user.Login = login;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.CompanyID = companyID;
            user.Score = score;
            user.InvitationsLeft = invitationsLeft;
            user.CompanyAccessLevel = companyAccessLevel;
            user.NetworkAccessLevel = networkAccessLevel;
            user.NetworkId = networkId;
            user.IsEmailConfirmed = isEmailConfirmed;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private System.Guid _UserId;
        partial void OnUserIdChanging(System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private string _Login;
        partial void OnLoginChanging(string value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private Nullable<int> _Gender;
        partial void OnGenderChanging(Nullable<int> value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Picture
        {
            get
            {
                return _Picture;
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private string _Picture;
        partial void OnPictureChanging(string value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private string _Email;
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PersonalEmail
        {
            get
            {
                return _PersonalEmail;
            }
            set
            {
                OnPersonalEmailChanging(value);
                ReportPropertyChanging("PersonalEmail");
                _PersonalEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PersonalEmail");
                OnPersonalEmailChanged();
            }
        }
        private string _PersonalEmail;
        partial void OnPersonalEmailChanging(string value);
        partial void OnPersonalEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private int _CompanyID;
        partial void OnCompanyIDChanging(int value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<int> _JobId;
        partial void OnJobIdChanging(Nullable<int> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private int _Score;
        partial void OnScoreChanging(int value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int InvitationsLeft
        {
            get
            {
                return _InvitationsLeft;
            }
            set
            {
                OnInvitationsLeftChanging(value);
                ReportPropertyChanging("InvitationsLeft");
                _InvitationsLeft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationsLeft");
                OnInvitationsLeftChanged();
            }
        }
        private int _InvitationsLeft;
        partial void OnInvitationsLeftChanging(int value);
        partial void OnInvitationsLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> RelationshipId
        {
            get
            {
                return _RelationshipId;
            }
            set
            {
                OnRelationshipIdChanging(value);
                ReportPropertyChanging("RelationshipId");
                _RelationshipId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationshipId");
                OnRelationshipIdChanged();
            }
        }
        private Nullable<int> _RelationshipId;
        partial void OnRelationshipIdChanging(Nullable<int> value);
        partial void OnRelationshipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<int> _ProjectId;
        partial void OnProjectIdChanging(Nullable<int> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> Superior
        {
            get
            {
                return _Superior;
            }
            set
            {
                OnSuperiorChanging(value);
                ReportPropertyChanging("Superior");
                _Superior = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Superior");
                OnSuperiorChanged();
            }
        }
        private Nullable<System.Guid> _Superior;
        partial void OnSuperiorChanging(Nullable<System.Guid> value);
        partial void OnSuperiorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsTeamMember
        {
            get
            {
                return _IsTeamMember;
            }
            set
            {
                OnIsTeamMemberChanging(value);
                ReportPropertyChanging("IsTeamMember");
                _IsTeamMember = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTeamMember");
                OnIsTeamMemberChanged();
            }
        }
        private Nullable<bool> _IsTeamMember;
        partial void OnIsTeamMemberChanging(Nullable<bool> value);
        partial void OnIsTeamMemberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> AccountClosed
        {
            get
            {
                return _AccountClosed;
            }
            set
            {
                OnAccountClosedChanging(value);
                ReportPropertyChanging("AccountClosed");
                _AccountClosed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountClosed");
                OnAccountClosedChanged();
            }
        }
        private Nullable<bool> _AccountClosed;
        partial void OnAccountClosedChanging(Nullable<bool> value);
        partial void OnAccountClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> AccountRight
        {
            get
            {
                return _AccountRight;
            }
            set
            {
                OnAccountRightChanging(value);
                ReportPropertyChanging("AccountRight");
                _AccountRight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountRight");
                OnAccountRightChanged();
            }
        }
        private Nullable<byte> _AccountRight;
        partial void OnAccountRightChanging(Nullable<byte> value);
        partial void OnAccountRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyAccessLevel
        {
            get
            {
                return _CompanyAccessLevel;
            }
            set
            {
                OnCompanyAccessLevelChanging(value);
                ReportPropertyChanging("CompanyAccessLevel");
                _CompanyAccessLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyAccessLevel");
                OnCompanyAccessLevelChanged();
            }
        }
        private int _CompanyAccessLevel;
        partial void OnCompanyAccessLevelChanging(int value);
        partial void OnCompanyAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkAccessLevel
        {
            get
            {
                return _NetworkAccessLevel;
            }
            set
            {
                OnNetworkAccessLevelChanging(value);
                ReportPropertyChanging("NetworkAccessLevel");
                _NetworkAccessLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkAccessLevel");
                OnNetworkAccessLevelChanged();
            }
        }
        private int _NetworkAccessLevel;
        partial void OnNetworkAccessLevelChanging(int value);
        partial void OnNetworkAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsEmailConfirmed
        {
            get
            {
                return _IsEmailConfirmed;
            }
            set
            {
                OnIsEmailConfirmedChanging(value);
                ReportPropertyChanging("IsEmailConfirmed");
                _IsEmailConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEmailConfirmed");
                OnIsEmailConfirmedChanged();
            }
        }
        private bool _IsEmailConfirmed;
        partial void OnIsEmailConfirmedChanging(bool value);
        partial void OnIsEmailConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CreatedDateUtc
        {
            get
            {
                return _CreatedDateUtc;
            }
            set
            {
                OnCreatedDateUtcChanging(value);
                ReportPropertyChanging("CreatedDateUtc");
                _CreatedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateUtc");
                OnCreatedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _CreatedDateUtc;
        partial void OnCreatedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnCreatedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> AccountClosedDateUtc
        {
            get
            {
                return _AccountClosedDateUtc;
            }
            set
            {
                OnAccountClosedDateUtcChanging(value);
                ReportPropertyChanging("AccountClosedDateUtc");
                _AccountClosedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountClosedDateUtc");
                OnAccountClosedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _AccountClosedDateUtc;
        partial void OnAccountClosedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnAccountClosedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> PersonalDataUpdateDateUtc
        {
            get
            {
                return _PersonalDataUpdateDateUtc;
            }
            set
            {
                OnPersonalDataUpdateDateUtcChanging(value);
                ReportPropertyChanging("PersonalDataUpdateDateUtc");
                _PersonalDataUpdateDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonalDataUpdateDateUtc");
                OnPersonalDataUpdateDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _PersonalDataUpdateDateUtc;
        partial void OnPersonalDataUpdateDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnPersonalDataUpdateDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Culture
        {
            get
            {
                return _Culture;
            }
            set
            {
                OnCultureChanging(value);
                ReportPropertyChanging("Culture");
                _Culture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Culture");
                OnCultureChanged();
            }
        }
        private string _Culture;
        partial void OnCultureChanging(string value);
        partial void OnCultureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Timezone
        {
            get
            {
                return _Timezone;
            }
            set
            {
                OnTimezoneChanging(value);
                ReportPropertyChanging("Timezone");
                _Timezone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timezone");
                OnTimezoneChanged();
            }
        }
        private string _Timezone;
        partial void OnTimezoneChanging(string value);
        partial void OnTimezoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string LinkedInUserId
        {
            get
            {
                return _LinkedInUserId;
            }
            set
            {
                OnLinkedInUserIdChanging(value);
                ReportPropertyChanging("LinkedInUserId");
                _LinkedInUserId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LinkedInUserId");
                OnLinkedInUserIdChanged();
            }
        }
        private string _LinkedInUserId;
        partial void OnLinkedInUserIdChanging(string value);
        partial void OnLinkedInUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Activities_User", "Activities")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("NetworksModel.FK_Activities_User", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("NetworksModel.FK_Activities_User", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Ads_Users", "Ads")]
        public EntityCollection<Ad> Ads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ad>("NetworksModel.FK_Ads_Users", "Ads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ad>("NetworksModel.FK_Ads_Users", "Ads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Users_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Users_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Users_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("NetworksModel.FK_Users_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("NetworksModel.FK_Users_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompaniesVisits_User", "CompaniesVisits")]
        public EntityCollection<CompaniesVisit> CompaniesVisits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompaniesVisit>("NetworksModel.FK_CompaniesVisits_User", "CompaniesVisits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompaniesVisit>("NetworksModel.FK_CompaniesVisits_User", "CompaniesVisits", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyAdmins_User", "CompanyAdmins")]
        public EntityCollection<CompanyAdmin> CompanyAdmins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyAdmin>("NetworksModel.FK_CompanyAdmins_User", "CompanyAdmins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyAdmin>("NetworksModel.FK_CompanyAdmins_User", "CompanyAdmins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyNews_User", "CompanyNews")]
        public EntityCollection<CompanyNew> CompanyNews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyNew>("NetworksModel.FK_CompanyNews_User", "CompanyNews");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyNew>("NetworksModel.FK_CompanyNews_User", "CompanyNews", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Contacts_Contact", "Contacts")]
        public EntityCollection<Contact> ContactsOf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("NetworksModel.FK_Contacts_Contact", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("NetworksModel.FK_Contacts_Contact", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Contacts_User", "Contacts")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("NetworksModel.FK_Contacts_User", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("NetworksModel.FK_Contacts_User", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_EventMembers_User", "EventMembers")]
        public EntityCollection<EventMember> EventMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventMember>("NetworksModel.FK_EventMembers_User", "EventMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventMember>("NetworksModel.FK_EventMembers_User", "EventMembers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Events_User", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("NetworksModel.FK_Events_User", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("NetworksModel.FK_Events_User", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeMaterials_User", "ExchangeMaterials")]
        public EntityCollection<ExchangeMaterial> ExchangeMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeMaterial>("NetworksModel.FK_ExchangeMaterials_User", "ExchangeMaterials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeMaterial>("NetworksModel.FK_ExchangeMaterials_User", "ExchangeMaterials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSkills_CreatedBy", "ExchangeSkills")]
        public EntityCollection<ExchangeSkill> ExchangeSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeSkill>("NetworksModel.FK_ExchangeSkills_CreatedBy", "ExchangeSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeSkill>("NetworksModel.FK_ExchangeSkills_CreatedBy", "ExchangeSkills", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ExchangeSurfaces_User", "ExchangeSurfaces")]
        public EntityCollection<ExchangeSurface> ExchangeSurfaces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExchangeSurface>("NetworksModel.FK_ExchangeSurfaces_User", "ExchangeSurfaces");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExchangeSurface>("NetworksModel.FK_ExchangeSurfaces_User", "ExchangeSurfaces", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupMembers_User", "GroupMembers")]
        public EntityCollection<GroupMember> GroupMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupMember>("NetworksModel.FK_GroupMembers_User", "GroupMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupMember>("NetworksModel.FK_GroupMembers_User", "GroupMembers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Groups_CreatedBy", "Groups")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("NetworksModel.FK_Groups_CreatedBy", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("NetworksModel.FK_Groups_CreatedBy", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_InformationNotes_User", "InformationNotes")]
        public EntityCollection<InformationNote> InformationNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InformationNote>("NetworksModel.FK_InformationNotes_User", "InformationNotes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InformationNote>("NetworksModel.FK_InformationNotes_User", "InformationNotes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Interests_User", "Interests")]
        public EntityCollection<Interest> Interests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Interest>("NetworksModel.FK_Interests_User", "Interests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Interest>("NetworksModel.FK_Interests_User", "Interests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Invited_Inviter", "Invited")]
        public EntityCollection<Invited> UsersInvited
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invited>("NetworksModel.FK_Invited_Inviter", "Invited");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invited>("NetworksModel.FK_Invited_Inviter", "Invited", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Invited_User", "Invited")]
        public EntityCollection<Invited> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invited>("NetworksModel.FK_Invited_User", "Invited");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invited>("NetworksModel.FK_Invited_User", "Invited", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Users_Jobs", "Jobs")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("NetworksModel.FK_Users_Jobs", "Jobs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("NetworksModel.FK_Users_Jobs", "Jobs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("NetworksModel.FK_Users_Jobs", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("NetworksModel.FK_Users_Jobs", "Jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Links_Users", "Links")]
        public EntityCollection<Link> Links
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Link>("NetworksModel.FK_Links_Users", "Links");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Link>("NetworksModel.FK_Links_Users", "Links", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ListItems_Users", "ListItems")]
        public EntityCollection<ListItem> ListItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListItem>("NetworksModel.FK_ListItems_Users", "ListItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListItem>("NetworksModel.FK_ListItems_Users", "ListItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Lists_User", "Lists")]
        public EntityCollection<List> Lists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<List>("NetworksModel.FK_Lists_User", "Lists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<List>("NetworksModel.FK_Lists_User", "Lists", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Live_Users", "Live")]
        public EntityCollection<Live> Lives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Live>("NetworksModel.FK_Live_Users", "Live");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Live>("NetworksModel.FK_Live_Users", "Live", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_LostItems_User", "LostItems")]
        public EntityCollection<LostItem> LostItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LostItem>("NetworksModel.FK_LostItems_User", "LostItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LostItem>("NetworksModel.FK_LostItems_User", "LostItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Messages_FromUser", "Messages")]
        public EntityCollection<Message> MessagesSent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("NetworksModel.FK_Messages_FromUser", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("NetworksModel.FK_Messages_FromUser", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Messages_ToUser", "Messages")]
        public EntityCollection<Message> MessagesReceived
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("NetworksModel.FK_Messages_ToUser", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("NetworksModel.FK_Messages_ToUser", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Recreations_Users", "Recreations")]
        public EntityCollection<Recreation> Recreations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recreation>("NetworksModel.FK_Recreations_Users", "Recreations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recreation>("NetworksModel.FK_Recreations_Users", "Recreations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Users_Relationship", "Relationship")]
        public Relationship Relationship
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relationship>("NetworksModel.FK_Users_Relationship", "Relationship").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relationship>("NetworksModel.FK_Users_Relationship", "Relationship").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Relationship> RelationshipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relationship>("NetworksModel.FK_Users_Relationship", "Relationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Relationship>("NetworksModel.FK_Users_Relationship", "Relationship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TeamMembers_User", "TeamMembers")]
        public EntityCollection<TeamMember> TeamMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamMember>("NetworksModel.FK_TeamMembers_User", "TeamMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamMember>("NetworksModel.FK_TeamMembers_User", "TeamMembers", value);
                }
            }
        }
    
        /// <summary>
        /// Timeline items I posted.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_PostedBy", "TimelineItems")]
        public EntityCollection<TimelineItem> TimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_PostedBy", "TimelineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_PostedBy", "TimelineItems", value);
                }
            }
        }
    
        /// <summary>
        /// Elements posted in my public timeline
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItems_UserTimeline", "TimelineItems")]
        public EntityCollection<TimelineItem> MyTimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_UserTimeline", "TimelineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_TimelineItems_UserTimeline", "TimelineItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserInterests_User", "UserInterests")]
        public EntityCollection<UserInterest> UserInterests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInterest>("NetworksModel.FK_UserInterests_User", "UserInterests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInterest>("NetworksModel.FK_UserInterests_User", "UserInterests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserRecreations_User", "UserRecreations")]
        public EntityCollection<UserRecreation> UserRecreations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRecreation>("NetworksModel.FK_UserRecreations_User", "UserRecreations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRecreation>("NetworksModel.FK_UserRecreations_User", "UserRecreations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserSkills_User", "UserSkills")]
        public EntityCollection<UserSkill> UserSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSkill>("NetworksModel.FK_UserSkills_User", "UserSkills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSkill>("NetworksModel.FK_UserSkills_User", "UserSkills", value);
                }
            }
        }
    
        /// <summary>
        /// Visits of people on my profile.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UsersVisits_Profile", "UsersVisits")]
        public EntityCollection<UsersVisit> OtherUsersVisits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersVisit>("NetworksModel.FK_UsersVisits_Profile", "UsersVisits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersVisit>("NetworksModel.FK_UsersVisits_Profile", "UsersVisits", value);
                }
            }
        }
    
        /// <summary>
        /// Visits I did.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UsersVisits_User", "UsersVisits")]
        public EntityCollection<UsersVisit> MyUsersVisits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersVisit>("NetworksModel.FK_UsersVisits_User", "UsersVisits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersVisit>("NetworksModel.FK_UsersVisits_User", "UsersVisits", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SeekFriends_Seeker", "SeekFriend")]
        public EntityCollection<SeekFriend> SeekFriends
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SeekFriend>("NetworksModel.FK_SeekFriends_Seeker", "SeekFriend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SeekFriend>("NetworksModel.FK_SeekFriends_Seeker", "SeekFriend", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SeekFriends_Target", "SeekFriend")]
        public EntityCollection<SeekFriend> SeekFriends1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SeekFriend>("NetworksModel.FK_SeekFriends_Target", "SeekFriend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SeekFriend>("NetworksModel.FK_SeekFriends_Target", "SeekFriend", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_ProjectMembers_User", "ProjectMember")]
        public EntityCollection<ProjectMember> ProjectMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectMember>("NetworksModel.FK_ProjectMembers_User", "ProjectMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectMember>("NetworksModel.FK_ProjectMembers_User", "ProjectMember", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Users_aspnetUsers", "aspnet_Users")]
        public AspnetUsers AspnetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspnetUsers>("NetworksModel.FK_Users_aspnetUsers", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspnetUsers>("NetworksModel.FK_Users_aspnetUsers", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspnetUsers> AspnetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspnetUsers>("NetworksModel.FK_Users_aspnetUsers", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspnetUsers>("NetworksModel.FK_Users_aspnetUsers", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_TimelineItemComments_User", "TimelineItemComment")]
        public EntityCollection<TimelineItemComment> PostedTimelineItemComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemComment>("NetworksModel.FK_TimelineItemComments_User", "TimelineItemComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemComment>("NetworksModel.FK_TimelineItemComments_User", "TimelineItemComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Notifications_User", "Notification")]
        public Notification Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("NetworksModel.FK_Notifications_User", "Notification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("NetworksModel.FK_Notifications_User", "Notification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Notification> NotificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("NetworksModel.FK_Notifications_User", "Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Notification>("NetworksModel.FK_Notifications_User", "Notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_AchievementsUsers_User", "AchievementsUser")]
        public EntityCollection<AchievementsUser> Achievements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AchievementsUser>("NetworksModel.FK_AchievementsUsers_User", "AchievementsUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AchievementsUser>("NetworksModel.FK_AchievementsUsers_User", "AchievementsUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisterRequests_ReplyUserId", "RegisterRequest")]
        public EntityCollection<RegisterRequest> RepliedToRegisterRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegisterRequest>("NetworksModel.FK_RegisterRequests_ReplyUserId", "RegisterRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegisterRequest>("NetworksModel.FK_RegisterRequests_ReplyUserId", "RegisterRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_RegisterRequests_ValidatedByUserId", "RegisterRequest")]
        public EntityCollection<RegisterRequest> ValidatedRegisterRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegisterRequest>("NetworksModel.FK_RegisterRequests_ValidatedByUserId", "RegisterRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegisterRequest>("NetworksModel.FK_RegisterRequests_ValidatedByUserId", "RegisterRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CareerOpportunities_User", "CareerOpportunity")]
        public EntityCollection<CareerOpportunity> CareerOpportunities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CareerOpportunity>("NetworksModel.FK_CareerOpportunities_User", "CareerOpportunity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CareerOpportunity>("NetworksModel.FK_CareerOpportunities_User", "CareerOpportunity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkConnections_User", "SocialNetworkConnection")]
        public EntityCollection<SocialNetworkConnection> SocialNetworkConnections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialNetworkConnection>("NetworksModel.FK_SocialNetworkConnections_User", "SocialNetworkConnection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialNetworkConnection>("NetworksModel.FK_SocialNetworkConnections_User", "SocialNetworkConnection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_SocialNetworkUserSubscriptions_User", "SocialNetworkUserSubscription")]
        public EntityCollection<SocialNetworkUserSubscription> SocialNetworkUserSubscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialNetworkUserSubscription>("NetworksModel.FK_SocialNetworkUserSubscriptions_User", "SocialNetworkUserSubscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialNetworkUserSubscription>("NetworksModel.FK_SocialNetworkUserSubscriptions_User", "SocialNetworkUserSubscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Users_NetworkId", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Users_NetworkId", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Users_NetworkId", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_Users_NetworkId", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_Users_NetworkId", "Network", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_CompanyContacts_FromUserId", "CompanyContact")]
        public EntityCollection<CompanyContact> CompanyContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyContact>("NetworksModel.FK_CompanyContacts_FromUserId", "CompanyContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyContact>("NetworksModel.FK_CompanyContacts_FromUserId", "CompanyContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_StatsCounterHits_User", "StatsCounterHit")]
        public EntityCollection<StatsCounterHit> StatsCounterHits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StatsCounterHit>("NetworksModel.FK_StatsCounterHits_User", "StatsCounterHit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StatsCounterHit>("NetworksModel.FK_StatsCounterHits_User", "StatsCounterHit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "PK_dbo_CompanyRequestMessages_FromUser", "CompanyRequestMessage")]
        public EntityCollection<CompanyRequestMessage> CompanyRequestMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRequestMessage>("NetworksModel.PK_dbo_CompanyRequestMessages_FromUser", "CompanyRequestMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRequestMessage>("NetworksModel.PK_dbo_CompanyRequestMessages_FromUser", "CompanyRequestMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyRequests_ApprovedByUser", "CompanyRequest")]
        public EntityCollection<CompanyRequest> ApprovedCompanyRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRequest>("NetworksModel.FK_dbo_CompanyRequests_ApprovedByUser", "CompanyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRequest>("NetworksModel.FK_dbo_CompanyRequests_ApprovedByUser", "CompanyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyRequests_BlockedByUser", "CompanyRequest")]
        public EntityCollection<CompanyRequest> BlockedCompanyRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyRequest>("NetworksModel.FK_dbo_CompanyRequests_BlockedByUser", "CompanyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyRequest>("NetworksModel.FK_dbo_CompanyRequests_BlockedByUser", "CompanyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Clubs_CreatedByUser", "Club")]
        public EntityCollection<Club> CreatedClubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Club>("NetworksModel.FK_dbo_Clubs_CreatedByUser", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Club>("NetworksModel.FK_dbo_Clubs_CreatedByUser", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserActionKeysUser", "UserActionKey")]
        public EntityCollection<UserActionKey> UserActionKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserActionKey>("NetworksModel.FK_dbo_UserActionKeysUser", "UserActionKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserActionKey>("NetworksModel.FK_dbo_UserActionKeysUser", "UserActionKey", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemSkills_CreatedBy", "TimelineItemSkill")]
        public EntityCollection<TimelineItemSkill> TimelineItemSkillsCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemSkill>("NetworksModel.FK_dbo_TimelineItemSkills_CreatedBy", "TimelineItemSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemSkill>("NetworksModel.FK_dbo_TimelineItemSkills_CreatedBy", "TimelineItemSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemSkills_DeletedBy", "TimelineItemSkill")]
        public EntityCollection<TimelineItemSkill> TimelineItemSkillsDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemSkill>("NetworksModel.FK_dbo_TimelineItemSkills_DeletedBy", "TimelineItemSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemSkill>("NetworksModel.FK_dbo_TimelineItemSkills_DeletedBy", "TimelineItemSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItems_DeletedBy", "TimelineItem")]
        public EntityCollection<TimelineItem> DeletedTimelineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItem>("NetworksModel.FK_dbo_TimelineItems_DeletedBy", "TimelineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItem>("NetworksModel.FK_dbo_TimelineItems_DeletedBy", "TimelineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupSkills_CreatedBy", "GroupSkill")]
        public EntityCollection<GroupSkill> GroupSkillsCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupSkill>("NetworksModel.FK_dbo_GroupSkills_CreatedBy", "GroupSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupSkill>("NetworksModel.FK_dbo_GroupSkills_CreatedBy", "GroupSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupSkills_DeletedBy", "GroupSkill")]
        public EntityCollection<GroupSkill> GroupSkillsDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupSkill>("NetworksModel.FK_dbo_GroupSkills_DeletedBy", "GroupSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupSkill>("NetworksModel.FK_dbo_GroupSkills_DeletedBy", "GroupSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupInterests_CreatedBy", "GroupInterest")]
        public EntityCollection<GroupInterest> GroupInterestsCreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupInterest>("NetworksModel.FK_dbo_GroupInterests_CreatedBy", "GroupInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupInterest>("NetworksModel.FK_dbo_GroupInterests_CreatedBy", "GroupInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupInterests_DeletedBy", "GroupInterest")]
        public EntityCollection<GroupInterest> GroupInterestsDeletedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupInterest>("NetworksModel.FK_dbo_GroupInterests_DeletedBy", "GroupInterest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupInterest>("NetworksModel.FK_dbo_GroupInterests_DeletedBy", "GroupInterest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupRecreations_CreatedBy", "GroupRecreation")]
        public EntityCollection<GroupRecreation> GroupRecreationsCreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupRecreation>("NetworksModel.FK_dbo_GroupRecreations_CreatedBy", "GroupRecreation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupRecreation>("NetworksModel.FK_dbo_GroupRecreations_CreatedBy", "GroupRecreation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupRecreations_DeletedBy", "GroupRecreation")]
        public EntityCollection<GroupRecreation> GroupRecreationsDeletedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupRecreation>("NetworksModel.FK_dbo_GroupRecreations_DeletedBy", "GroupRecreation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupRecreation>("NetworksModel.FK_dbo_GroupRecreations_DeletedBy", "GroupRecreation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_EmailMessages_User", "EmailMessage")]
        public EntityCollection<EmailMessage> EmailMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailMessage>("NetworksModel.FK_dbo_EmailMessages_User", "EmailMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailMessage>("NetworksModel.FK_dbo_EmailMessages_User", "EmailMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserEmailChangeRequests_ActingUser", "UserEmailChangeRequest")]
        public EntityCollection<UserEmailChangeRequest> UserEmailChangeRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEmailChangeRequest>("NetworksModel.FK_UserEmailChangeRequests_ActingUser", "UserEmailChangeRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEmailChangeRequest>("NetworksModel.FK_UserEmailChangeRequests_ActingUser", "UserEmailChangeRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserEmailChangeRequests_ConcernedUser", "UserEmailChangeRequest")]
        public EntityCollection<UserEmailChangeRequest> UserEmailChangeRequests1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEmailChangeRequest>("NetworksModel.FK_UserEmailChangeRequests_ConcernedUser", "UserEmailChangeRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEmailChangeRequest>("NetworksModel.FK_UserEmailChangeRequests_ConcernedUser", "UserEmailChangeRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Likes_User", "Like")]
        public EntityCollection<TimelineItemLike> TimelineItemLikes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemLike>("NetworksModel.FK_Likes_User", "Like");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemLike>("NetworksModel.FK_Likes_User", "Like", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_LikeComments_User", "LikeComment")]
        public EntityCollection<TimelineItemCommentLike> TimelineItemCommentLikes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemCommentLike>("NetworksModel.FK_LikeComments_User", "LikeComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemCommentLike>("NetworksModel.FK_LikeComments_User", "LikeComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupsMembers_AcceptedBy", "GroupMember")]
        public EntityCollection<GroupMember> GroupAcceptationsDone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupMember>("NetworksModel.FK_GroupsMembers_AcceptedBy", "GroupMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupMember>("NetworksModel.FK_GroupsMembers_AcceptedBy", "GroupMember", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_GroupsMembers_InvitedBy", "GroupMember")]
        public EntityCollection<GroupMember> GroupInvitationsSent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupMember>("NetworksModel.FK_GroupsMembers_InvitedBy", "GroupMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupMember>("NetworksModel.FK_GroupsMembers_InvitedBy", "GroupMember", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserProfileFields_Users", "UserProfileField")]
        public EntityCollection<UserProfileField> UserProfileFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfileField>("NetworksModel.FK_dbo_UserProfileFields_Users", "UserProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfileField>("NetworksModel.FK_dbo_UserProfileFields_Users", "UserProfileField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_CreatedUser", "ApplyRequest")]
        public EntityCollection<ApplyRequest> ApplyRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_CreatedUser", "ApplyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_CreatedUser", "ApplyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_AcceptedByUser", "ApplyRequest")]
        public EntityCollection<ApplyRequest> ApplyRequests1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_AcceptedByUser", "ApplyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_AcceptedByUser", "ApplyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_RefusedByUser", "ApplyRequest")]
        public EntityCollection<ApplyRequest> ApplyRequests2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_RefusedByUser", "ApplyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_RefusedByUser", "ApplyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_AppliesToUser", "Subscription")]
        public EntityCollection<Subscription> ApplyingSubscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_AppliesToUser", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_AppliesToUser", "Subscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_Subscriptions_OwnerUser", "Subscription")]
        public EntityCollection<Subscription> OwnedSubscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_OwnerUser", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("NetworksModel.FK_dbo_Subscriptions_OwnerUser", "Subscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_StripeTransactions_Users", "StripeTransaction")]
        public EntityCollection<StripeTransaction> StripeTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StripeTransaction>("NetworksModel.FK_dbo_StripeTransactions_Users", "StripeTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StripeTransaction>("NetworksModel.FK_dbo_StripeTransactions_Users", "StripeTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TagDefinitions_Users", "TagDefinition")]
        public EntityCollection<TagDefinition> CreatedTagDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagDefinition>("NetworksModel.FK_dbo_TagDefinitions_Users", "TagDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagDefinition>("NetworksModel.FK_dbo_TagDefinitions_Users", "TagDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResources_CreatedByUser", "PartnerResource")]
        public EntityCollection<PartnerResource> CreatedPartnerResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartnerResource>("NetworksModel.FK_dbo_PartnerResources_CreatedByUser", "PartnerResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartnerResource>("NetworksModel.FK_dbo_PartnerResources_CreatedByUser", "PartnerResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResources_DeletedByUser", "PartnerResource")]
        public EntityCollection<PartnerResource> DeletedPartnerResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartnerResource>("NetworksModel.FK_dbo_PartnerResources_DeletedByUser", "PartnerResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartnerResource>("NetworksModel.FK_dbo_PartnerResources_DeletedByUser", "PartnerResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_PartnerResources_ApprovedByUser", "PartnerResource")]
        public EntityCollection<PartnerResource> PartnerResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PartnerResource>("NetworksModel.FK_dbo_PartnerResources_ApprovedByUser", "PartnerResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PartnerResource>("NetworksModel.FK_dbo_PartnerResources_ApprovedByUser", "PartnerResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_DeletedByUser", "ApplyRequest")]
        public EntityCollection<ApplyRequest> DeletedApplyRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_DeletedByUser", "ApplyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_DeletedByUser", "ApplyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_ApplyRequests_InvitedByUser", "ApplyRequest")]
        public EntityCollection<ApplyRequest> ApplyRequests3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_InvitedByUser", "ApplyRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplyRequest>("NetworksModel.FK_dbo_ApplyRequests_InvitedByUser", "ApplyRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyTags_CreatedByUser", "CompanyTag")]
        public EntityCollection<CompanyTag> CreatedCompanyTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyTag>("NetworksModel.FK_dbo_CompanyTags_CreatedByUser", "CompanyTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyTag>("NetworksModel.FK_dbo_CompanyTags_CreatedByUser", "CompanyTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_CompanyTags_DeletedByUser", "CompanyTag")]
        public EntityCollection<CompanyTag> DeletedCompanyTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyTag>("NetworksModel.FK_dbo_CompanyTags_DeletedByUser", "CompanyTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyTag>("NetworksModel.FK_dbo_CompanyTags_DeletedByUser", "CompanyTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Invited_DeletedByUser", "Invited")]
        public EntityCollection<Invited> DeletedInvited
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invited>("NetworksModel.FK_Invited_DeletedByUser", "Invited");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invited>("NetworksModel.FK_Invited_DeletedByUser", "Invited", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserTags_Companies", "UserTag")]
        public EntityCollection<UserTag> UserTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTag>("NetworksModel.FK_dbo_UserTags_Companies", "UserTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTag>("NetworksModel.FK_dbo_UserTags_Companies", "UserTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserTags_CreatedByUser", "UserTag")]
        public EntityCollection<UserTag> CreatedUserTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTag>("NetworksModel.FK_dbo_UserTags_CreatedByUser", "UserTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTag>("NetworksModel.FK_dbo_UserTags_CreatedByUser", "UserTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserTags_DeletedByUser", "UserTag")]
        public EntityCollection<UserTag> DeletedUserTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTag>("NetworksModel.FK_dbo_UserTags_DeletedByUser", "UserTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTag>("NetworksModel.FK_dbo_UserTags_DeletedByUser", "UserTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupTags_CreatedByUser", "GroupTag")]
        public EntityCollection<GroupTag> GroupTagsCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupTag>("NetworksModel.FK_dbo_GroupTags_CreatedByUser", "GroupTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupTag>("NetworksModel.FK_dbo_GroupTags_CreatedByUser", "GroupTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_GroupTags_DeletedByUser", "GroupTag")]
        public EntityCollection<GroupTag> GroupTagsDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupTag>("NetworksModel.FK_dbo_GroupTags_DeletedByUser", "GroupTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupTag>("NetworksModel.FK_dbo_GroupTags_DeletedByUser", "GroupTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemTags_CreatedByUser", "TimelineItemTag")]
        public EntityCollection<TimelineItemTag> TimelineItemTagsCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemTag>("NetworksModel.FK_dbo_TimelineItemTags_CreatedByUser", "TimelineItemTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemTag>("NetworksModel.FK_dbo_TimelineItemTags_CreatedByUser", "TimelineItemTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_TimelineItemTags_DeletedByUser", "TimelineItemTag")]
        public EntityCollection<TimelineItemTag> TimelineItemTagsDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimelineItemTag>("NetworksModel.FK_dbo_TimelineItemTags_DeletedByUser", "TimelineItemTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimelineItemTag>("NetworksModel.FK_dbo_TimelineItemTags_DeletedByUser", "TimelineItemTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Ads_CloseUser", "Ad")]
        public EntityCollection<Ad> AdsClosed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ad>("NetworksModel.FK_Ads_CloseUser", "Ad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ad>("NetworksModel.FK_Ads_CloseUser", "Ad", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_Ads_ValidationUser", "Ad")]
        public EntityCollection<Ad> AdsValidated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ad>("NetworksModel.FK_Ads_ValidationUser", "Ad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ad>("NetworksModel.FK_Ads_ValidationUser", "Ad", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_AdTags_CreatedByUser", "AdTag")]
        public EntityCollection<AdTag> AdTagsCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdTag>("NetworksModel.FK_dbo_AdTags_CreatedByUser", "AdTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdTag>("NetworksModel.FK_dbo_AdTags_CreatedByUser", "AdTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_AdTags_DeletedByUser", "AdTag")]
        public EntityCollection<AdTag> AdTagsDeleted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdTag>("NetworksModel.FK_dbo_AdTags_DeletedByUser", "AdTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdTag>("NetworksModel.FK_dbo_AdTags_DeletedByUser", "AdTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_HintsToUsers_User", "HintsToUser")]
        public EntityCollection<HintsToUser> HintsToUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HintsToUser>("NetworksModel.FK_dbo_HintsToUsers_User", "HintsToUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HintsToUser>("NetworksModel.FK_dbo_HintsToUsers_User", "HintsToUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserPresences_User", "UserPresence")]
        public EntityCollection<UserPresence> UserPresences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPresence>("NetworksModel.FK_dbo_UserPresences_User", "UserPresence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPresence>("NetworksModel.FK_dbo_UserPresences_User", "UserPresence", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            Login,
            FirstName,
            LastName,
            Gender,
            Birthday,
            Picture,
            Email,
            PersonalEmail,
            CompanyID,
            JobId,
            Score,
            InvitationsLeft,
            RelationshipId,
            ProjectId,
            Superior,
            IsTeamMember,
            AccountClosed,
            AccountRight,
            CompanyAccessLevel,
            NetworkAccessLevel,
            NetworkId,
            IsEmailConfirmed,
            CreatedDateUtc,
            AccountClosedDateUtc,
            PersonalDataUpdateDateUtc,
            Culture,
            Timezone,
            LinkedInUserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UserActionKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UserActionKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserActionKey object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="action">Initial value of the Action property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="maxUsages">Initial value of the MaxUsages property.</param>
        /// <param name="remainingUsages">Initial value of the RemainingUsages property.</param>
        /// <param name="secret">Initial value of the Secret property.</param>
        public static UserActionKey CreateUserActionKey(int id, int userId, string action, System.DateTime dateCreatedUtc, int maxUsages, int remainingUsages, string secret)
        {
            UserActionKey userActionKey = new UserActionKey();
            userActionKey.Id = id;
            userActionKey.UserId = userId;
            userActionKey.Action = action;
            userActionKey.DateCreatedUtc = dateCreatedUtc;
            userActionKey.MaxUsages = maxUsages;
            userActionKey.RemainingUsages = remainingUsages;
            userActionKey.Secret = secret;
            return userActionKey;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private string _Action;
        partial void OnActionChanging(string value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateExpiresUtc
        {
            get
            {
                return _DateExpiresUtc;
            }
            set
            {
                OnDateExpiresUtcChanging(value);
                ReportPropertyChanging("DateExpiresUtc");
                _DateExpiresUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateExpiresUtc");
                OnDateExpiresUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateExpiresUtc;
        partial void OnDateExpiresUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateExpiresUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int MaxUsages
        {
            get
            {
                return _MaxUsages;
            }
            set
            {
                OnMaxUsagesChanging(value);
                ReportPropertyChanging("MaxUsages");
                _MaxUsages = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxUsages");
                OnMaxUsagesChanged();
            }
        }
        private int _MaxUsages;
        partial void OnMaxUsagesChanging(int value);
        partial void OnMaxUsagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int RemainingUsages
        {
            get
            {
                return _RemainingUsages;
            }
            set
            {
                OnRemainingUsagesChanging(value);
                ReportPropertyChanging("RemainingUsages");
                _RemainingUsages = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemainingUsages");
                OnRemainingUsagesChanged();
            }
        }
        private int _RemainingUsages;
        partial void OnRemainingUsagesChanging(int value);
        partial void OnRemainingUsagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Secret
        {
            get
            {
                return _Secret;
            }
            set
            {
                OnSecretChanging(value);
                ReportPropertyChanging("Secret");
                _Secret = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Secret");
                OnSecretChanged();
            }
        }
        private string _Secret;
        partial void OnSecretChanging(string value);
        partial void OnSecretChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private Nullable<bool> _Result;
        partial void OnResultChanging(Nullable<bool> value);
        partial void OnResultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserActionKeysUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserActionKeysUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserActionKeysUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserActionKeysUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_UserActionKeysUser", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            Action,
            DateCreatedUtc,
            DateExpiresUtc,
            MaxUsages,
            RemainingUsages,
            Secret,
            Result,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UserEmailChangeRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UserEmailChangeRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserEmailChangeRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="previousEmailAccountPart">Initial value of the PreviousEmailAccountPart property.</param>
        /// <param name="previousEmailDomainPart">Initial value of the PreviousEmailDomainPart property.</param>
        /// <param name="newEmailAccountPart">Initial value of the NewEmailAccountPart property.</param>
        /// <param name="newEmailDomainPart">Initial value of the NewEmailDomainPart property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="previousEmailForbidden">Initial value of the PreviousEmailForbidden property.</param>
        /// <param name="createDateUtc">Initial value of the CreateDateUtc property.</param>
        public static UserEmailChangeRequest CreateUserEmailChangeRequest(int id, int networkId, string previousEmailAccountPart, string previousEmailDomainPart, string newEmailAccountPart, string newEmailDomainPart, int userId, int createdByUserId, int status, int previousEmailForbidden, System.DateTime createDateUtc)
        {
            UserEmailChangeRequest userEmailChangeRequest = new UserEmailChangeRequest();
            userEmailChangeRequest.Id = id;
            userEmailChangeRequest.NetworkId = networkId;
            userEmailChangeRequest.PreviousEmailAccountPart = previousEmailAccountPart;
            userEmailChangeRequest.PreviousEmailDomainPart = previousEmailDomainPart;
            userEmailChangeRequest.NewEmailAccountPart = newEmailAccountPart;
            userEmailChangeRequest.NewEmailDomainPart = newEmailDomainPart;
            userEmailChangeRequest.UserId = userId;
            userEmailChangeRequest.CreatedByUserId = createdByUserId;
            userEmailChangeRequest.Status = status;
            userEmailChangeRequest.PreviousEmailForbidden = previousEmailForbidden;
            userEmailChangeRequest.CreateDateUtc = createDateUtc;
            return userEmailChangeRequest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string PreviousEmailAccountPart
        {
            get
            {
                return _PreviousEmailAccountPart;
            }
            set
            {
                OnPreviousEmailAccountPartChanging(value);
                ReportPropertyChanging("PreviousEmailAccountPart");
                _PreviousEmailAccountPart = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PreviousEmailAccountPart");
                OnPreviousEmailAccountPartChanged();
            }
        }
        private string _PreviousEmailAccountPart;
        partial void OnPreviousEmailAccountPartChanging(string value);
        partial void OnPreviousEmailAccountPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PreviousEmailTagPart
        {
            get
            {
                return _PreviousEmailTagPart;
            }
            set
            {
                OnPreviousEmailTagPartChanging(value);
                ReportPropertyChanging("PreviousEmailTagPart");
                _PreviousEmailTagPart = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousEmailTagPart");
                OnPreviousEmailTagPartChanged();
            }
        }
        private string _PreviousEmailTagPart;
        partial void OnPreviousEmailTagPartChanging(string value);
        partial void OnPreviousEmailTagPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string PreviousEmailDomainPart
        {
            get
            {
                return _PreviousEmailDomainPart;
            }
            set
            {
                OnPreviousEmailDomainPartChanging(value);
                ReportPropertyChanging("PreviousEmailDomainPart");
                _PreviousEmailDomainPart = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PreviousEmailDomainPart");
                OnPreviousEmailDomainPartChanged();
            }
        }
        private string _PreviousEmailDomainPart;
        partial void OnPreviousEmailDomainPartChanging(string value);
        partial void OnPreviousEmailDomainPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string NewEmailAccountPart
        {
            get
            {
                return _NewEmailAccountPart;
            }
            set
            {
                OnNewEmailAccountPartChanging(value);
                ReportPropertyChanging("NewEmailAccountPart");
                _NewEmailAccountPart = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NewEmailAccountPart");
                OnNewEmailAccountPartChanged();
            }
        }
        private string _NewEmailAccountPart;
        partial void OnNewEmailAccountPartChanging(string value);
        partial void OnNewEmailAccountPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string NewEmailTagPart
        {
            get
            {
                return _NewEmailTagPart;
            }
            set
            {
                OnNewEmailTagPartChanging(value);
                ReportPropertyChanging("NewEmailTagPart");
                _NewEmailTagPart = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewEmailTagPart");
                OnNewEmailTagPartChanged();
            }
        }
        private string _NewEmailTagPart;
        partial void OnNewEmailTagPartChanging(string value);
        partial void OnNewEmailTagPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string NewEmailDomainPart
        {
            get
            {
                return _NewEmailDomainPart;
            }
            set
            {
                OnNewEmailDomainPartChanging(value);
                ReportPropertyChanging("NewEmailDomainPart");
                _NewEmailDomainPart = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NewEmailDomainPart");
                OnNewEmailDomainPartChanged();
            }
        }
        private string _NewEmailDomainPart;
        partial void OnNewEmailDomainPartChanging(string value);
        partial void OnNewEmailDomainPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private int _Status;
        partial void OnStatusChanging(int value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PreviousEmailForbidden
        {
            get
            {
                return _PreviousEmailForbidden;
            }
            set
            {
                OnPreviousEmailForbiddenChanging(value);
                ReportPropertyChanging("PreviousEmailForbidden");
                _PreviousEmailForbidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousEmailForbidden");
                OnPreviousEmailForbiddenChanged();
            }
        }
        private int _PreviousEmailForbidden;
        partial void OnPreviousEmailForbiddenChanging(int value);
        partial void OnPreviousEmailForbiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string EmailChangeRemark
        {
            get
            {
                return _EmailChangeRemark;
            }
            set
            {
                OnEmailChangeRemarkChanging(value);
                ReportPropertyChanging("EmailChangeRemark");
                _EmailChangeRemark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailChangeRemark");
                OnEmailChangeRemarkChanged();
            }
        }
        private string _EmailChangeRemark;
        partial void OnEmailChangeRemarkChanging(string value);
        partial void OnEmailChangeRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreateDateUtc
        {
            get
            {
                return _CreateDateUtc;
            }
            set
            {
                OnCreateDateUtcChanging(value);
                ReportPropertyChanging("CreateDateUtc");
                _CreateDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDateUtc");
                OnCreateDateUtcChanged();
            }
        }
        private System.DateTime _CreateDateUtc;
        partial void OnCreateDateUtcChanging(System.DateTime value);
        partial void OnCreateDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> ValidateDateUtc
        {
            get
            {
                return _ValidateDateUtc;
            }
            set
            {
                OnValidateDateUtcChanging(value);
                ReportPropertyChanging("ValidateDateUtc");
                _ValidateDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidateDateUtc");
                OnValidateDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _ValidateDateUtc;
        partial void OnValidateDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnValidateDateUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserEmailChangeRequests_ActingUser", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserEmailChangeRequests_ActingUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserEmailChangeRequests_ActingUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserEmailChangeRequests_ActingUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_UserEmailChangeRequests_ActingUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserEmailChangeRequests_ConcernedUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserEmailChangeRequests_ConcernedUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserEmailChangeRequests_ConcernedUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserEmailChangeRequests_ConcernedUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_UserEmailChangeRequests_ConcernedUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserEmailChangeRequests_Networks", "Network")]
        public Network Network
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_UserEmailChangeRequests_Networks", "Network").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_UserEmailChangeRequests_Networks", "Network").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Network> NetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Network>("NetworksModel.FK_UserEmailChangeRequests_Networks", "Network");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Network>("NetworksModel.FK_UserEmailChangeRequests_Networks", "Network", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            NetworkId,
            PreviousEmailAccountPart,
            PreviousEmailTagPart,
            PreviousEmailDomainPart,
            NewEmailAccountPart,
            NewEmailTagPart,
            NewEmailDomainPart,
            UserId,
            CreatedByUserId,
            Status,
            PreviousEmailForbidden,
            EmailChangeRemark,
            CreateDateUtc,
            ValidateDateUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UserInterest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UserInterest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserInterest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="interestId">Initial value of the InterestId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserInterest CreateUserInterest(int id, int interestId, System.DateTime date, int userId)
        {
            UserInterest userInterest = new UserInterest();
            userInterest.Id = id;
            userInterest.InterestId = interestId;
            userInterest.Date = date;
            userInterest.UserId = userId;
            return userInterest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int InterestId
        {
            get
            {
                return _InterestId;
            }
            set
            {
                OnInterestIdChanging(value);
                ReportPropertyChanging("InterestId");
                _InterestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InterestId");
                OnInterestIdChanged();
            }
        }
        private int _InterestId;
        partial void OnInterestIdChanging(int value);
        partial void OnInterestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserInterests_Interest", "Interests")]
        public Interest Interest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Interest>("NetworksModel.FK_UserInterests_Interest", "Interests").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Interest>("NetworksModel.FK_UserInterests_Interest", "Interests").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Interest> InterestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Interest>("NetworksModel.FK_UserInterests_Interest", "Interests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Interest>("NetworksModel.FK_UserInterests_Interest", "Interests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserInterests_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserInterests_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserInterests_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserInterests_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_UserInterests_User", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            InterestId,
            Date,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// Stores the dates each user came visit.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UserPresence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UserPresence : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPresence object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="day">Initial value of the Day property.</param>
        /// <param name="timeFrom">Initial value of the TimeFrom property.</param>
        /// <param name="timeTo">Initial value of the TimeTo property.</param>
        public static UserPresence CreateUserPresence(int id, int userId, System.DateTime day, System.DateTime timeFrom, System.DateTime timeTo)
        {
            UserPresence userPresence = new UserPresence();
            userPresence.Id = id;
            userPresence.UserId = userId;
            userPresence.Day = day;
            userPresence.TimeFrom = timeFrom;
            userPresence.TimeTo = timeTo;
            return userPresence;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private System.DateTime _Day;
        partial void OnDayChanging(System.DateTime value);
        partial void OnDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime TimeFrom
        {
            get
            {
                return _TimeFrom;
            }
            set
            {
                OnTimeFromChanging(value);
                ReportPropertyChanging("TimeFrom");
                _TimeFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeFrom");
                OnTimeFromChanged();
            }
        }
        private System.DateTime _TimeFrom;
        partial void OnTimeFromChanging(System.DateTime value);
        partial void OnTimeFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime TimeTo
        {
            get
            {
                return _TimeTo;
            }
            set
            {
                OnTimeToChanging(value);
                ReportPropertyChanging("TimeTo");
                _TimeTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeTo");
                OnTimeToChanged();
            }
        }
        private System.DateTime _TimeTo;
        partial void OnTimeToChanging(System.DateTime value);
        partial void OnTimeToChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserPresences_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserPresences_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserPresences_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserPresences_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_UserPresences_User", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            Day,
            TimeFrom,
            TimeTo,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UserProfileField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UserProfileField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfileField object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="profileFieldId">Initial value of the ProfileFieldId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="updateCount">Initial value of the UpdateCount property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        public static UserProfileField CreateUserProfileField(int id, int userId, int profileFieldId, string value, System.DateTime dateCreatedUtc, short updateCount, byte source)
        {
            UserProfileField userProfileField = new UserProfileField();
            userProfileField.Id = id;
            userProfileField.UserId = userId;
            userProfileField.ProfileFieldId = profileFieldId;
            userProfileField.Value = value;
            userProfileField.DateCreatedUtc = dateCreatedUtc;
            userProfileField.UpdateCount = updateCount;
            userProfileField.Source = source;
            return userProfileField;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ProfileFieldId
        {
            get
            {
                return _ProfileFieldId;
            }
            set
            {
                OnProfileFieldIdChanging(value);
                ReportPropertyChanging("ProfileFieldId");
                _ProfileFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileFieldId");
                OnProfileFieldIdChanged();
            }
        }
        private int _ProfileFieldId;
        partial void OnProfileFieldIdChanging(int value);
        partial void OnProfileFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private string _Value;
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateUpdatedUtc
        {
            get
            {
                return _DateUpdatedUtc;
            }
            set
            {
                OnDateUpdatedUtcChanging(value);
                ReportPropertyChanging("DateUpdatedUtc");
                _DateUpdatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdatedUtc");
                OnDateUpdatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateUpdatedUtc;
        partial void OnDateUpdatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateUpdatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short UpdateCount
        {
            get
            {
                return _UpdateCount;
            }
            set
            {
                OnUpdateCountChanging(value);
                ReportPropertyChanging("UpdateCount");
                _UpdateCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateCount");
                OnUpdateCountChanged();
            }
        }
        private short _UpdateCount;
        partial void OnUpdateCountChanging(short value);
        partial void OnUpdateCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private byte _Source;
        partial void OnSourceChanging(byte value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private string _Data;
        partial void OnDataChanging(string value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserProfileFields_ProfileFields", "ProfileField")]
        public ProfileField ProfileField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_UserProfileFields_ProfileFields", "ProfileField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_UserProfileFields_ProfileFields", "ProfileField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProfileField> ProfileFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProfileField>("NetworksModel.FK_dbo_UserProfileFields_ProfileFields", "ProfileField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProfileField>("NetworksModel.FK_dbo_UserProfileFields_ProfileFields", "ProfileField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserProfileFields_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserProfileFields_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserProfileFields_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserProfileFields_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_UserProfileFields_Users", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            ProfileFieldId,
            Value,
            DateCreatedUtc,
            DateUpdatedUtc,
            UpdateCount,
            Source,
            Data,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UserRecreation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UserRecreation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRecreation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="recreationId">Initial value of the RecreationId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserRecreation CreateUserRecreation(int id, int recreationId, System.DateTime date, int userId)
        {
            UserRecreation userRecreation = new UserRecreation();
            userRecreation.Id = id;
            userRecreation.RecreationId = recreationId;
            userRecreation.Date = date;
            userRecreation.UserId = userId;
            return userRecreation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int RecreationId
        {
            get
            {
                return _RecreationId;
            }
            set
            {
                OnRecreationIdChanging(value);
                ReportPropertyChanging("RecreationId");
                _RecreationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecreationId");
                OnRecreationIdChanged();
            }
        }
        private int _RecreationId;
        partial void OnRecreationIdChanging(int value);
        partial void OnRecreationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserRecreations_Recreation", "Recreations")]
        public Recreation Recreation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recreation>("NetworksModel.FK_UserRecreations_Recreation", "Recreations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recreation>("NetworksModel.FK_UserRecreations_Recreation", "Recreations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recreation> RecreationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recreation>("NetworksModel.FK_UserRecreations_Recreation", "Recreations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recreation>("NetworksModel.FK_UserRecreations_Recreation", "Recreations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserRecreations_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserRecreations_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserRecreations_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserRecreations_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_UserRecreations_User", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            RecreationId,
            Date,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UserSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UserSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSetting object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        public static UserSetting CreateUserSetting(int userId, string key)
        {
            UserSetting userSetting = new UserSetting();
            userSetting.UserId = userId;
            userSetting.Key = key;
            return userSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string Key
        {
            get
            {
                return _Key;
            }
            set
            {
                if (_Key != value)
                {
                    OnKeyChanging(value);
                    ReportPropertyChanging("Key");
                    _Key = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Key");
                    OnKeyChanged();
                }
            }
        }
        private string _Key;
        partial void OnKeyChanging(string value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private string _Value;
        partial void OnValueChanging(string value);
        partial void OnValueChanged();

        #endregion

    
        #region ColumnsEnum
        public enum Columns
        {
            UserId,
            Key,
            Value,
        }

        #endregion

    }
    
    /// <summary>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </summary>
    /// <LongDescription>
    /// OBSOLETE. Part of tags V1. Use V2 instead.OBSOLETE
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UserSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UserSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSkill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="skillId">Initial value of the SkillId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserSkill CreateUserSkill(int id, int skillId, System.DateTime date, int userId)
        {
            UserSkill userSkill = new UserSkill();
            userSkill.Id = id;
            userSkill.SkillId = skillId;
            userSkill.Date = date;
            userSkill.UserId = userId;
            return userSkill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private int _SkillId;
        partial void OnSkillIdChanging(int value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserSkills_Skill", "Skills")]
        public Skill Skill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_UserSkills_Skill", "Skills").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_UserSkills_Skill", "Skills").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Skill> SkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("NetworksModel.FK_UserSkills_Skill", "Skills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Skill>("NetworksModel.FK_UserSkills_Skill", "Skills", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UserSkills_User", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserSkills_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserSkills_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UserSkills_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_UserSkills_User", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            SkillId,
            Date,
            UserId,
        }

        #endregion

    }
    
    /// <summary>
    /// Fast access to user information.
    /// </summary>
    /// <LongDescription>
    /// This view is speed-optimized to access basic user information.  It&apos;s important to use that as much as you can instead of querying the Users table.
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UsersView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UsersView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="companyAccessLevel">Initial value of the CompanyAccessLevel property.</param>
        /// <param name="networkAccessLevel">Initial value of the NetworkAccessLevel property.</param>
        /// <param name="isEmailConfirmed">Initial value of the IsEmailConfirmed property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="company_Name">Initial value of the Company_Name property.</param>
        /// <param name="company_Alias">Initial value of the Company_Alias property.</param>
        /// <param name="company_IsApproved">Initial value of the Company_IsApproved property.</param>
        /// <param name="company_IsEnabled">Initial value of the Company_IsEnabled property.</param>
        public static UsersView CreateUsersView(int id, System.Guid userId, int networkId, string login, string firstName, string lastName, int companyAccessLevel, int networkAccessLevel, bool isEmailConfirmed, int companyId, string company_Name, string company_Alias, bool company_IsApproved, bool company_IsEnabled)
        {
            UsersView usersView = new UsersView();
            usersView.Id = id;
            usersView.UserId = userId;
            usersView.NetworkId = networkId;
            usersView.Login = login;
            usersView.FirstName = firstName;
            usersView.LastName = lastName;
            usersView.CompanyAccessLevel = companyAccessLevel;
            usersView.NetworkAccessLevel = networkAccessLevel;
            usersView.IsEmailConfirmed = isEmailConfirmed;
            usersView.CompanyId = companyId;
            usersView.Company_Name = company_Name;
            usersView.Company_Alias = company_Alias;
            usersView.Company_IsApproved = company_IsApproved;
            usersView.Company_IsEnabled = company_IsEnabled;
            return usersView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private System.Guid _UserId;
        partial void OnUserIdChanging(System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                if (_NetworkId != value)
                {
                    OnNetworkIdChanging(value);
                    ReportPropertyChanging("NetworkId");
                    _NetworkId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NetworkId");
                    OnNetworkIdChanged();
                }
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string Login
        {
            get
            {
                return _Login;
            }
            set
            {
                if (_Login != value)
                {
                    OnLoginChanging(value);
                    ReportPropertyChanging("Login");
                    _Login = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Login");
                    OnLoginChanged();
                }
            }
        }
        private string _Login;
        partial void OnLoginChanging(string value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                if (_FirstName != value)
                {
                    OnFirstNameChanging(value);
                    ReportPropertyChanging("FirstName");
                    _FirstName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FirstName");
                    OnFirstNameChanged();
                }
            }
        }
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                if (_LastName != value)
                {
                    OnLastNameChanging(value);
                    ReportPropertyChanging("LastName");
                    _LastName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LastName");
                    OnLastNameChanged();
                }
            }
        }
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private Nullable<int> _Gender;
        partial void OnGenderChanging(Nullable<int> value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Picture
        {
            get
            {
                return _Picture;
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private string _Picture;
        partial void OnPictureChanging(string value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private string _Email;
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> AccountClosed
        {
            get
            {
                return _AccountClosed;
            }
            set
            {
                OnAccountClosedChanging(value);
                ReportPropertyChanging("AccountClosed");
                _AccountClosed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountClosed");
                OnAccountClosedChanged();
            }
        }
        private Nullable<bool> _AccountClosed;
        partial void OnAccountClosedChanging(Nullable<bool> value);
        partial void OnAccountClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyAccessLevel
        {
            get
            {
                return _CompanyAccessLevel;
            }
            set
            {
                if (_CompanyAccessLevel != value)
                {
                    OnCompanyAccessLevelChanging(value);
                    ReportPropertyChanging("CompanyAccessLevel");
                    _CompanyAccessLevel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyAccessLevel");
                    OnCompanyAccessLevelChanged();
                }
            }
        }
        private int _CompanyAccessLevel;
        partial void OnCompanyAccessLevelChanging(int value);
        partial void OnCompanyAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkAccessLevel
        {
            get
            {
                return _NetworkAccessLevel;
            }
            set
            {
                if (_NetworkAccessLevel != value)
                {
                    OnNetworkAccessLevelChanging(value);
                    ReportPropertyChanging("NetworkAccessLevel");
                    _NetworkAccessLevel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NetworkAccessLevel");
                    OnNetworkAccessLevelChanged();
                }
            }
        }
        private int _NetworkAccessLevel;
        partial void OnNetworkAccessLevelChanging(int value);
        partial void OnNetworkAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsEmailConfirmed
        {
            get
            {
                return _IsEmailConfirmed;
            }
            set
            {
                if (_IsEmailConfirmed != value)
                {
                    OnIsEmailConfirmedChanging(value);
                    ReportPropertyChanging("IsEmailConfirmed");
                    _IsEmailConfirmed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsEmailConfirmed");
                    OnIsEmailConfirmedChanged();
                }
            }
        }
        private bool _IsEmailConfirmed;
        partial void OnIsEmailConfirmedChanging(bool value);
        partial void OnIsEmailConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string Company_Name
        {
            get
            {
                return _Company_Name;
            }
            set
            {
                if (_Company_Name != value)
                {
                    OnCompany_NameChanging(value);
                    ReportPropertyChanging("Company_Name");
                    _Company_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Company_Name");
                    OnCompany_NameChanged();
                }
            }
        }
        private string _Company_Name;
        partial void OnCompany_NameChanging(string value);
        partial void OnCompany_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string Company_Alias
        {
            get
            {
                return _Company_Alias;
            }
            set
            {
                if (_Company_Alias != value)
                {
                    OnCompany_AliasChanging(value);
                    ReportPropertyChanging("Company_Alias");
                    _Company_Alias = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Company_Alias");
                    OnCompany_AliasChanged();
                }
            }
        }
        private string _Company_Alias;
        partial void OnCompany_AliasChanging(string value);
        partial void OnCompany_AliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Company_IsApproved
        {
            get
            {
                return _Company_IsApproved;
            }
            set
            {
                if (_Company_IsApproved != value)
                {
                    OnCompany_IsApprovedChanging(value);
                    ReportPropertyChanging("Company_IsApproved");
                    _Company_IsApproved = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_IsApproved");
                    OnCompany_IsApprovedChanged();
                }
            }
        }
        private bool _Company_IsApproved;
        partial void OnCompany_IsApprovedChanging(bool value);
        partial void OnCompany_IsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<int> _JobId;
        partial void OnJobIdChanging(Nullable<int> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Job_Name
        {
            get
            {
                return _Job_Name;
            }
            set
            {
                OnJob_NameChanging(value);
                ReportPropertyChanging("Job_Name");
                _Job_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Job_Name");
                OnJob_NameChanged();
            }
        }
        private string _Job_Name;
        partial void OnJob_NameChanging(string value);
        partial void OnJob_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string JobAlias
        {
            get
            {
                return _JobAlias;
            }
            set
            {
                OnJobAliasChanging(value);
                ReportPropertyChanging("JobAlias");
                _JobAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobAlias");
                OnJobAliasChanged();
            }
        }
        private string _JobAlias;
        partial void OnJobAliasChanging(string value);
        partial void OnJobAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Company_IsEnabled
        {
            get
            {
                return _Company_IsEnabled;
            }
            set
            {
                if (_Company_IsEnabled != value)
                {
                    OnCompany_IsEnabledChanging(value);
                    ReportPropertyChanging("Company_IsEnabled");
                    _Company_IsEnabled = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Company_IsEnabled");
                    OnCompany_IsEnabledChanged();
                }
            }
        }
        private bool _Company_IsEnabled;
        partial void OnCompany_IsEnabledChanging(bool value);
        partial void OnCompany_IsEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Culture
        {
            get
            {
                return _Culture;
            }
            set
            {
                OnCultureChanging(value);
                ReportPropertyChanging("Culture");
                _Culture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Culture");
                OnCultureChanged();
            }
        }
        private string _Culture;
        partial void OnCultureChanging(string value);
        partial void OnCultureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Timezone
        {
            get
            {
                return _Timezone;
            }
            set
            {
                OnTimezoneChanging(value);
                ReportPropertyChanging("Timezone");
                _Timezone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timezone");
                OnTimezoneChanged();
            }
        }
        private string _Timezone;
        partial void OnTimezoneChanging(string value);
        partial void OnTimezoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateCreatedUtcChanged();

        #endregion

    
        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            NetworkId,
            Login,
            FirstName,
            LastName,
            Gender,
            Picture,
            Email,
            AccountClosed,
            CompanyAccessLevel,
            NetworkAccessLevel,
            IsEmailConfirmed,
            CompanyId,
            Company_Name,
            Company_Alias,
            Company_IsApproved,
            JobId,
            Job_Name,
            JobAlias,
            Company_IsEnabled,
            Culture,
            Timezone,
            DateCreatedUtc,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UsersVisit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UsersVisit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersVisit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        /// <param name="viewCount">Initial value of the ViewCount property.</param>
        public static UsersVisit CreateUsersVisit(int id, int userId, System.DateTime date, int profileId, byte viewCount)
        {
            UsersVisit usersVisit = new UsersVisit();
            usersVisit.Id = id;
            usersVisit.UserId = userId;
            usersVisit.Date = date;
            usersVisit.ProfileId = profileId;
            usersVisit.ViewCount = viewCount;
            return usersVisit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private System.DateTime _Date;
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private int _ProfileId;
        partial void OnProfileIdChanging(int value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public byte ViewCount
        {
            get
            {
                return _ViewCount;
            }
            set
            {
                OnViewCountChanging(value);
                ReportPropertyChanging("ViewCount");
                _ViewCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewCount");
                OnViewCountChanged();
            }
        }
        private byte _ViewCount;
        partial void OnViewCountChanging(byte value);
        partial void OnViewCountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UsersVisits_Profile", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UsersVisits_Profile", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UsersVisits_Profile", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UsersVisits_Profile", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_UsersVisits_Profile", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_UsersVisits_User", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UsersVisits_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UsersVisits_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_UsersVisits_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_UsersVisits_User", "Users", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            Date,
            ProfileId,
            ViewCount,
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NetworksModel", Name="UserTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    
    public partial class UserTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserTag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="dateCreatedUtc">Initial value of the DateCreatedUtc property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static UserTag CreateUserTag(int id, int userId, int tagId, System.DateTime dateCreatedUtc, int createdByUserId, int sortOrder)
        {
            UserTag userTag = new UserTag();
            userTag.Id = id;
            userTag.UserId = userId;
            userTag.TagId = tagId;
            userTag.DateCreatedUtc = dateCreatedUtc;
            userTag.CreatedByUserId = createdByUserId;
            userTag.SortOrder = sortOrder;
            return userTag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                OnTagIdChanging(value);
                ReportPropertyChanging("TagId");
                _TagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagId");
                OnTagIdChanged();
            }
        }
        private int _TagId;
        partial void OnTagIdChanging(int value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateCreatedUtc
        {
            get
            {
                return _DateCreatedUtc;
            }
            set
            {
                OnDateCreatedUtcChanging(value);
                ReportPropertyChanging("DateCreatedUtc");
                _DateCreatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreatedUtc");
                OnDateCreatedUtcChanged();
            }
        }
        private System.DateTime _DateCreatedUtc;
        partial void OnDateCreatedUtcChanging(System.DateTime value);
        partial void OnDateCreatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private int _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(int value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateDeletedUtc
        {
            get
            {
                return _DateDeletedUtc;
            }
            set
            {
                OnDateDeletedUtcChanging(value);
                ReportPropertyChanging("DateDeletedUtc");
                _DateDeletedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeletedUtc");
                OnDateDeletedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateDeletedUtc;
        partial void OnDateDeletedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateDeletedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private int _SortOrder;
        partial void OnSortOrderChanging(int value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserTags_Tags", "TagDefinition")]
        public TagDefinition TagDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_UserTags_Tags", "TagDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_UserTags_Tags", "TagDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TagDefinition> TagDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagDefinition>("NetworksModel.FK_dbo_UserTags_Tags", "TagDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TagDefinition>("NetworksModel.FK_dbo_UserTags_Tags", "TagDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserTags_Companies", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserTags_Companies", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserTags_Companies", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserTags_Companies", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_UserTags_Companies", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserTags_CreatedByUser", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserTags_CreatedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserTags_CreatedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserTags_CreatedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_UserTags_CreatedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NetworksModel", "FK_dbo_UserTags_DeletedByUser", "User")]
        public User DeletedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserTags_DeletedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserTags_DeletedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DeletedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NetworksModel.FK_dbo_UserTags_DeletedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NetworksModel.FK_dbo_UserTags_DeletedByUser", "User", value);
                }
            }
        }

        #endregion

        #region ColumnsEnum
        public enum Columns
        {
            Id,
            UserId,
            TagId,
            DateCreatedUtc,
            CreatedByUserId,
            DateDeletedUtc,
            DeletedByUserId,
            DeleteReason,
            SortOrder,
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="DeleteJob_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class DeleteJob_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AffectedUsers
        {
            get
            {
                return _AffectedUsers;
            }
            set
            {
                OnAffectedUsersChanging(value);
                ReportPropertyChanging("AffectedUsers");
                _AffectedUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AffectedUsers");
                OnAffectedUsersChanged();
            }
        }
        private Nullable<int> _AffectedUsers;
        partial void OnAffectedUsersChanging(Nullable<int> value);
        partial void OnAffectedUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedJobs
        {
            get
            {
                return _DeletedJobs;
            }
            set
            {
                OnDeletedJobsChanging(value);
                ReportPropertyChanging("DeletedJobs");
                _DeletedJobs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedJobs");
                OnDeletedJobsChanged();
            }
        }
        private Nullable<int> _DeletedJobs;
        partial void OnDeletedJobsChanging(Nullable<int> value);
        partial void OnDeletedJobsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetActualGroupMembers_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetActualGroupMembers_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetActualGroupMembers_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="accepted">Initial value of the Accepted property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static GetActualGroupMembers_Result CreateGetActualGroupMembers_Result(int id, int groupId, short accepted, int userId)
        {
            GetActualGroupMembers_Result getActualGroupMembers_Result = new GetActualGroupMembers_Result();
            getActualGroupMembers_Result.Id = id;
            getActualGroupMembers_Result.GroupId = groupId;
            getActualGroupMembers_Result.Accepted = accepted;
            getActualGroupMembers_Result.UserId = userId;
            return getActualGroupMembers_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private int _GroupId;
        partial void OnGroupIdChanging(int value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short Accepted
        {
            get
            {
                return _Accepted;
            }
            set
            {
                OnAcceptedChanging(value);
                ReportPropertyChanging("Accepted");
                _Accepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Accepted");
                OnAcceptedChanged();
            }
        }
        private short _Accepted;
        partial void OnAcceptedChanging(short value);
        partial void OnAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateJoined
        {
            get
            {
                return _DateJoined;
            }
            set
            {
                OnDateJoinedChanging(value);
                ReportPropertyChanging("DateJoined");
                _DateJoined = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateJoined");
                OnDateJoinedChanged();
            }
        }
        private Nullable<System.DateTime> _DateJoined;
        partial void OnDateJoinedChanging(Nullable<System.DateTime> value);
        partial void OnDateJoinedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Notifications
        {
            get
            {
                return _Notifications;
            }
            set
            {
                OnNotificationsChanging(value);
                ReportPropertyChanging("Notifications");
                _Notifications = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notifications");
                OnNotificationsChanged();
            }
        }
        private Nullable<int> _Notifications;
        partial void OnNotificationsChanging(Nullable<int> value);
        partial void OnNotificationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Rights
        {
            get
            {
                return _Rights;
            }
            set
            {
                OnRightsChanging(value);
                ReportPropertyChanging("Rights");
                _Rights = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rights");
                OnRightsChanged();
            }
        }
        private Nullable<int> _Rights;
        partial void OnRightsChanging(Nullable<int> value);
        partial void OnRightsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> NotificationFrequency
        {
            get
            {
                return _NotificationFrequency;
            }
            set
            {
                OnNotificationFrequencyChanging(value);
                ReportPropertyChanging("NotificationFrequency");
                _NotificationFrequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotificationFrequency");
                OnNotificationFrequencyChanged();
            }
        }
        private Nullable<byte> _NotificationFrequency;
        partial void OnNotificationFrequencyChanging(Nullable<byte> value);
        partial void OnNotificationFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> InvitedByUserId
        {
            get
            {
                return _InvitedByUserId;
            }
            set
            {
                OnInvitedByUserIdChanging(value);
                ReportPropertyChanging("InvitedByUserId");
                _InvitedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitedByUserId");
                OnInvitedByUserIdChanged();
            }
        }
        private Nullable<int> _InvitedByUserId;
        partial void OnInvitedByUserIdChanging(Nullable<int> value);
        partial void OnInvitedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateAcceptedUtc
        {
            get
            {
                return _DateAcceptedUtc;
            }
            set
            {
                OnDateAcceptedUtcChanging(value);
                ReportPropertyChanging("DateAcceptedUtc");
                _DateAcceptedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAcceptedUtc");
                OnDateAcceptedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateAcceptedUtc;
        partial void OnDateAcceptedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateAcceptedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AcceptedByUserId
        {
            get
            {
                return _AcceptedByUserId;
            }
            set
            {
                OnAcceptedByUserIdChanging(value);
                ReportPropertyChanging("AcceptedByUserId");
                _AcceptedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedByUserId");
                OnAcceptedByUserIdChanged();
            }
        }
        private Nullable<int> _AcceptedByUserId;
        partial void OnAcceptedByUserIdChanging(Nullable<int> value);
        partial void OnAcceptedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateInvitedUtc
        {
            get
            {
                return _DateInvitedUtc;
            }
            set
            {
                OnDateInvitedUtcChanging(value);
                ReportPropertyChanging("DateInvitedUtc");
                _DateInvitedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInvitedUtc");
                OnDateInvitedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateInvitedUtc;
        partial void OnDateInvitedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateInvitedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> MinId
        {
            get
            {
                return _MinId;
            }
            set
            {
                OnMinIdChanging(value);
                ReportPropertyChanging("MinId");
                _MinId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinId");
                OnMinIdChanged();
            }
        }
        private Nullable<int> _MinId;
        partial void OnMinIdChanging(Nullable<int> value);
        partial void OnMinIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> MembershipsCount
        {
            get
            {
                return _MembershipsCount;
            }
            set
            {
                OnMembershipsCountChanging(value);
                ReportPropertyChanging("MembershipsCount");
                _MembershipsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MembershipsCount");
                OnMembershipsCountChanged();
            }
        }
        private Nullable<int> _MembershipsCount;
        partial void OnMembershipsCountChanging(Nullable<int> value);
        partial void OnMembershipsCountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetActualGroupMembersByStatus_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetActualGroupMembersByStatus_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetActualGroupMembersByStatus_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="accepted">Initial value of the Accepted property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static GetActualGroupMembersByStatus_Result CreateGetActualGroupMembersByStatus_Result(int id, int groupId, short accepted, int userId)
        {
            GetActualGroupMembersByStatus_Result getActualGroupMembersByStatus_Result = new GetActualGroupMembersByStatus_Result();
            getActualGroupMembersByStatus_Result.Id = id;
            getActualGroupMembersByStatus_Result.GroupId = groupId;
            getActualGroupMembersByStatus_Result.Accepted = accepted;
            getActualGroupMembersByStatus_Result.UserId = userId;
            return getActualGroupMembersByStatus_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private int _GroupId;
        partial void OnGroupIdChanging(int value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public short Accepted
        {
            get
            {
                return _Accepted;
            }
            set
            {
                OnAcceptedChanging(value);
                ReportPropertyChanging("Accepted");
                _Accepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Accepted");
                OnAcceptedChanged();
            }
        }
        private short _Accepted;
        partial void OnAcceptedChanging(short value);
        partial void OnAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateJoined
        {
            get
            {
                return _DateJoined;
            }
            set
            {
                OnDateJoinedChanging(value);
                ReportPropertyChanging("DateJoined");
                _DateJoined = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateJoined");
                OnDateJoinedChanged();
            }
        }
        private Nullable<System.DateTime> _DateJoined;
        partial void OnDateJoinedChanging(Nullable<System.DateTime> value);
        partial void OnDateJoinedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Notifications
        {
            get
            {
                return _Notifications;
            }
            set
            {
                OnNotificationsChanging(value);
                ReportPropertyChanging("Notifications");
                _Notifications = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notifications");
                OnNotificationsChanged();
            }
        }
        private Nullable<int> _Notifications;
        partial void OnNotificationsChanging(Nullable<int> value);
        partial void OnNotificationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Rights
        {
            get
            {
                return _Rights;
            }
            set
            {
                OnRightsChanging(value);
                ReportPropertyChanging("Rights");
                _Rights = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rights");
                OnRightsChanged();
            }
        }
        private Nullable<int> _Rights;
        partial void OnRightsChanging(Nullable<int> value);
        partial void OnRightsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> NotificationFrequency
        {
            get
            {
                return _NotificationFrequency;
            }
            set
            {
                OnNotificationFrequencyChanging(value);
                ReportPropertyChanging("NotificationFrequency");
                _NotificationFrequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotificationFrequency");
                OnNotificationFrequencyChanged();
            }
        }
        private Nullable<byte> _NotificationFrequency;
        partial void OnNotificationFrequencyChanging(Nullable<byte> value);
        partial void OnNotificationFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> InvitedByUserId
        {
            get
            {
                return _InvitedByUserId;
            }
            set
            {
                OnInvitedByUserIdChanging(value);
                ReportPropertyChanging("InvitedByUserId");
                _InvitedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitedByUserId");
                OnInvitedByUserIdChanged();
            }
        }
        private Nullable<int> _InvitedByUserId;
        partial void OnInvitedByUserIdChanging(Nullable<int> value);
        partial void OnInvitedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateAcceptedUtc
        {
            get
            {
                return _DateAcceptedUtc;
            }
            set
            {
                OnDateAcceptedUtcChanging(value);
                ReportPropertyChanging("DateAcceptedUtc");
                _DateAcceptedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAcceptedUtc");
                OnDateAcceptedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateAcceptedUtc;
        partial void OnDateAcceptedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateAcceptedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AcceptedByUserId
        {
            get
            {
                return _AcceptedByUserId;
            }
            set
            {
                OnAcceptedByUserIdChanging(value);
                ReportPropertyChanging("AcceptedByUserId");
                _AcceptedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedByUserId");
                OnAcceptedByUserIdChanged();
            }
        }
        private Nullable<int> _AcceptedByUserId;
        partial void OnAcceptedByUserIdChanging(Nullable<int> value);
        partial void OnAcceptedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DateInvitedUtc
        {
            get
            {
                return _DateInvitedUtc;
            }
            set
            {
                OnDateInvitedUtcChanging(value);
                ReportPropertyChanging("DateInvitedUtc");
                _DateInvitedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInvitedUtc");
                OnDateInvitedUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DateInvitedUtc;
        partial void OnDateInvitedUtcChanging(Nullable<System.DateTime> value);
        partial void OnDateInvitedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> MinId
        {
            get
            {
                return _MinId;
            }
            set
            {
                OnMinIdChanging(value);
                ReportPropertyChanging("MinId");
                _MinId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinId");
                OnMinIdChanged();
            }
        }
        private Nullable<int> _MinId;
        partial void OnMinIdChanging(Nullable<int> value);
        partial void OnMinIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> MembershipsCount
        {
            get
            {
                return _MembershipsCount;
            }
            set
            {
                OnMembershipsCountChanging(value);
                ReportPropertyChanging("MembershipsCount");
                _MembershipsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MembershipsCount");
                OnMembershipsCountChanged();
            }
        }
        private Nullable<int> _MembershipsCount;
        partial void OnMembershipsCountChanging(Nullable<int> value);
        partial void OnMembershipsCountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetCompaniesAccessLevelReport_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetCompaniesAccessLevelReport_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetCompaniesAccessLevelReport_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        public static GetCompaniesAccessLevelReport_Result CreateGetCompaniesAccessLevelReport_Result(int id, string name, string alias)
        {
            GetCompaniesAccessLevelReport_Result getCompaniesAccessLevelReport_Result = new GetCompaniesAccessLevelReport_Result();
            getCompaniesAccessLevelReport_Result.Id = id;
            getCompaniesAccessLevelReport_Result.Name = name;
            getCompaniesAccessLevelReport_Result.Alias = alias;
            return getCompaniesAccessLevelReport_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Level0
        {
            get
            {
                return _Level0;
            }
            set
            {
                OnLevel0Changing(value);
                ReportPropertyChanging("Level0");
                _Level0 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level0");
                OnLevel0Changed();
            }
        }
        private Nullable<int> _Level0;
        partial void OnLevel0Changing(Nullable<int> value);
        partial void OnLevel0Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Level1
        {
            get
            {
                return _Level1;
            }
            set
            {
                OnLevel1Changing(value);
                ReportPropertyChanging("Level1");
                _Level1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level1");
                OnLevel1Changed();
            }
        }
        private Nullable<int> _Level1;
        partial void OnLevel1Changing(Nullable<int> value);
        partial void OnLevel1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Level2
        {
            get
            {
                return _Level2;
            }
            set
            {
                OnLevel2Changing(value);
                ReportPropertyChanging("Level2");
                _Level2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level2");
                OnLevel2Changed();
            }
        }
        private Nullable<int> _Level2;
        partial void OnLevel2Changing(Nullable<int> value);
        partial void OnLevel2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Level3
        {
            get
            {
                return _Level3;
            }
            set
            {
                OnLevel3Changing(value);
                ReportPropertyChanging("Level3");
                _Level3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level3");
                OnLevel3Changed();
            }
        }
        private Nullable<int> _Level3;
        partial void OnLevel3Changing(Nullable<int> value);
        partial void OnLevel3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> OtherDisabled
        {
            get
            {
                return _OtherDisabled;
            }
            set
            {
                OnOtherDisabledChanging(value);
                ReportPropertyChanging("OtherDisabled");
                _OtherDisabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OtherDisabled");
                OnOtherDisabledChanged();
            }
        }
        private Nullable<int> _OtherDisabled;
        partial void OnOtherDisabledChanging(Nullable<int> value);
        partial void OnOtherDisabledChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetCompanyCategoriesUsedInNetwork_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetCompanyCategoriesUsedInNetwork_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetCompanyCategoriesUsedInNetwork_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static GetCompanyCategoriesUsedInNetwork_Result CreateGetCompanyCategoriesUsedInNetwork_Result(int id, string name)
        {
            GetCompanyCategoriesUsedInNetwork_Result getCompanyCategoriesUsedInNetwork_Result = new GetCompanyCategoriesUsedInNetwork_Result();
            getCompanyCategoriesUsedInNetwork_Result.Id = id;
            getCompanyCategoriesUsedInNetwork_Result.Name = name;
            return getCompanyCategoriesUsedInNetwork_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetEmailSendStatsByHour_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetEmailSendStatsByHour_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string DateUtc
        {
            get
            {
                return _DateUtc;
            }
            set
            {
                OnDateUtcChanging(value);
                ReportPropertyChanging("DateUtc");
                _DateUtc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DateUtc");
                OnDateUtcChanged();
            }
        }
        private string _DateUtc;
        partial void OnDateUtcChanging(string value);
        partial void OnDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private Nullable<int> _Count;
        partial void OnCountChanging(Nullable<int> value);
        partial void OnCountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetEmailSendStatsByMinute_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetEmailSendStatsByMinute_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetEmailSendStatsByMinute_Result object.
        /// </summary>
        /// <param name="dateUtc">Initial value of the DateUtc property.</param>
        public static GetEmailSendStatsByMinute_Result CreateGetEmailSendStatsByMinute_Result(System.DateTime dateUtc)
        {
            GetEmailSendStatsByMinute_Result getEmailSendStatsByMinute_Result = new GetEmailSendStatsByMinute_Result();
            getEmailSendStatsByMinute_Result.DateUtc = dateUtc;
            return getEmailSendStatsByMinute_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateUtc
        {
            get
            {
                return _DateUtc;
            }
            set
            {
                OnDateUtcChanging(value);
                ReportPropertyChanging("DateUtc");
                _DateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUtc");
                OnDateUtcChanged();
            }
        }
        private System.DateTime _DateUtc;
        partial void OnDateUtcChanging(System.DateTime value);
        partial void OnDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private Nullable<int> _Count;
        partial void OnCountChanging(Nullable<int> value);
        partial void OnCountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetEventStatsPerMonth_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetEventStatsPerMonth_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private string _Month;
        partial void OnMonthChanging(string value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Events
        {
            get
            {
                return _Events;
            }
            set
            {
                OnEventsChanging(value);
                ReportPropertyChanging("Events");
                _Events = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Events");
                OnEventsChanged();
            }
        }
        private Nullable<int> _Events;
        partial void OnEventsChanging(Nullable<int> value);
        partial void OnEventsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Members
        {
            get
            {
                return _Members;
            }
            set
            {
                OnMembersChanging(value);
                ReportPropertyChanging("Members");
                _Members = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Members");
                OnMembersChanged();
            }
        }
        private Nullable<int> _Members;
        partial void OnMembersChanging(Nullable<int> value);
        partial void OnMembersChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetExportableListOfUsers_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetExportableListOfUsers_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetExportableListOfUsers_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="companyAccessLevel">Initial value of the CompanyAccessLevel property.</param>
        /// <param name="networkAccessLevel">Initial value of the NetworkAccessLevel property.</param>
        /// <param name="isEmailConfirmed">Initial value of the IsEmailConfirmed property.</param>
        /// <param name="companyIsEnabled">Initial value of the CompanyIsEnabled property.</param>
        /// <param name="currentActiveSubscriptions">Initial value of the CurrentActiveSubscriptions property.</param>
        public static GetExportableListOfUsers_Result CreateGetExportableListOfUsers_Result(int id, string login, string firstName, string lastName, int companyID, int companyAccessLevel, int networkAccessLevel, bool isEmailConfirmed, bool companyIsEnabled, int currentActiveSubscriptions)
        {
            GetExportableListOfUsers_Result getExportableListOfUsers_Result = new GetExportableListOfUsers_Result();
            getExportableListOfUsers_Result.Id = id;
            getExportableListOfUsers_Result.Login = login;
            getExportableListOfUsers_Result.FirstName = firstName;
            getExportableListOfUsers_Result.LastName = lastName;
            getExportableListOfUsers_Result.CompanyID = companyID;
            getExportableListOfUsers_Result.CompanyAccessLevel = companyAccessLevel;
            getExportableListOfUsers_Result.NetworkAccessLevel = networkAccessLevel;
            getExportableListOfUsers_Result.IsEmailConfirmed = isEmailConfirmed;
            getExportableListOfUsers_Result.CompanyIsEnabled = companyIsEnabled;
            getExportableListOfUsers_Result.CurrentActiveSubscriptions = currentActiveSubscriptions;
            return getExportableListOfUsers_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private string _Login;
        partial void OnLoginChanging(string value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private string _Email;
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private Nullable<int> _Gender;
        partial void OnGenderChanging(Nullable<int> value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private int _CompanyID;
        partial void OnCompanyIDChanging(int value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private string _CompanyName;
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<int> _JobId;
        partial void OnJobIdChanging(Nullable<int> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string JobName
        {
            get
            {
                return _JobName;
            }
            set
            {
                OnJobNameChanging(value);
                ReportPropertyChanging("JobName");
                _JobName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobName");
                OnJobNameChanged();
            }
        }
        private string _JobName;
        partial void OnJobNameChanging(string value);
        partial void OnJobNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> AccountClosed
        {
            get
            {
                return _AccountClosed;
            }
            set
            {
                OnAccountClosedChanging(value);
                ReportPropertyChanging("AccountClosed");
                _AccountClosed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountClosed");
                OnAccountClosedChanged();
            }
        }
        private Nullable<bool> _AccountClosed;
        partial void OnAccountClosedChanging(Nullable<bool> value);
        partial void OnAccountClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyAccessLevel
        {
            get
            {
                return _CompanyAccessLevel;
            }
            set
            {
                OnCompanyAccessLevelChanging(value);
                ReportPropertyChanging("CompanyAccessLevel");
                _CompanyAccessLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyAccessLevel");
                OnCompanyAccessLevelChanged();
            }
        }
        private int _CompanyAccessLevel;
        partial void OnCompanyAccessLevelChanging(int value);
        partial void OnCompanyAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkAccessLevel
        {
            get
            {
                return _NetworkAccessLevel;
            }
            set
            {
                OnNetworkAccessLevelChanging(value);
                ReportPropertyChanging("NetworkAccessLevel");
                _NetworkAccessLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkAccessLevel");
                OnNetworkAccessLevelChanged();
            }
        }
        private int _NetworkAccessLevel;
        partial void OnNetworkAccessLevelChanging(int value);
        partial void OnNetworkAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsEmailConfirmed
        {
            get
            {
                return _IsEmailConfirmed;
            }
            set
            {
                OnIsEmailConfirmedChanging(value);
                ReportPropertyChanging("IsEmailConfirmed");
                _IsEmailConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEmailConfirmed");
                OnIsEmailConfirmedChanged();
            }
        }
        private bool _IsEmailConfirmed;
        partial void OnIsEmailConfirmedChanging(bool value);
        partial void OnIsEmailConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> LastActivity
        {
            get
            {
                return _LastActivity;
            }
            set
            {
                OnLastActivityChanging(value);
                ReportPropertyChanging("LastActivity");
                _LastActivity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivity");
                OnLastActivityChanged();
            }
        }
        private Nullable<System.DateTime> _LastActivity;
        partial void OnLastActivityChanging(Nullable<System.DateTime> value);
        partial void OnLastActivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CompanyAlias
        {
            get
            {
                return _CompanyAlias;
            }
            set
            {
                OnCompanyAliasChanging(value);
                ReportPropertyChanging("CompanyAlias");
                _CompanyAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyAlias");
                OnCompanyAliasChanged();
            }
        }
        private string _CompanyAlias;
        partial void OnCompanyAliasChanging(string value);
        partial void OnCompanyAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string JobAlias
        {
            get
            {
                return _JobAlias;
            }
            set
            {
                OnJobAliasChanging(value);
                ReportPropertyChanging("JobAlias");
                _JobAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobAlias");
                OnJobAliasChanged();
            }
        }
        private string _JobAlias;
        partial void OnJobAliasChanging(string value);
        partial void OnJobAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool CompanyIsEnabled
        {
            get
            {
                return _CompanyIsEnabled;
            }
            set
            {
                OnCompanyIsEnabledChanging(value);
                ReportPropertyChanging("CompanyIsEnabled");
                _CompanyIsEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyIsEnabled");
                OnCompanyIsEnabledChanged();
            }
        }
        private bool _CompanyIsEnabled;
        partial void OnCompanyIsEnabledChanging(bool value);
        partial void OnCompanyIsEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CurrentActiveSubscriptions
        {
            get
            {
                return _CurrentActiveSubscriptions;
            }
            set
            {
                OnCurrentActiveSubscriptionsChanging(value);
                ReportPropertyChanging("CurrentActiveSubscriptions");
                _CurrentActiveSubscriptions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentActiveSubscriptions");
                OnCurrentActiveSubscriptionsChanged();
            }
        }
        private int _CurrentActiveSubscriptions;
        partial void OnCurrentActiveSubscriptionsChanging(int value);
        partial void OnCurrentActiveSubscriptionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> PersonalDataUpdateDateUtc
        {
            get
            {
                return _PersonalDataUpdateDateUtc;
            }
            set
            {
                OnPersonalDataUpdateDateUtcChanging(value);
                ReportPropertyChanging("PersonalDataUpdateDateUtc");
                _PersonalDataUpdateDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonalDataUpdateDateUtc");
                OnPersonalDataUpdateDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _PersonalDataUpdateDateUtc;
        partial void OnPersonalDataUpdateDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnPersonalDataUpdateDateUtcChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetJobsUsedInNetwork_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetJobsUsedInNetwork_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetJobsUsedInNetwork_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static GetJobsUsedInNetwork_Result CreateGetJobsUsedInNetwork_Result(int id)
        {
            GetJobsUsedInNetwork_Result getJobsUsedInNetwork_Result = new GetJobsUsedInNetwork_Result();
            getJobsUsedInNetwork_Result.Id = id;
            return getJobsUsedInNetwork_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private string _Alias;
        partial void OnAliasChanging(string value);
        partial void OnAliasChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetLastFiveRegistrants_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetLastFiveRegistrants_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetLastFiveRegistrants_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="birthday">Initial value of the Birthday property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="invitationsLeft">Initial value of the InvitationsLeft property.</param>
        /// <param name="companyAccessLevel">Initial value of the CompanyAccessLevel property.</param>
        /// <param name="networkAccessLevel">Initial value of the NetworkAccessLevel property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        /// <param name="isEmailConfirmed">Initial value of the IsEmailConfirmed property.</param>
        public static GetLastFiveRegistrants_Result CreateGetLastFiveRegistrants_Result(int id, System.Guid userId, string login, string firstName, string lastName, System.DateTime birthday, int companyID, int score, int invitationsLeft, int companyAccessLevel, int networkAccessLevel, int networkId, bool isEmailConfirmed)
        {
            GetLastFiveRegistrants_Result getLastFiveRegistrants_Result = new GetLastFiveRegistrants_Result();
            getLastFiveRegistrants_Result.Id = id;
            getLastFiveRegistrants_Result.UserId = userId;
            getLastFiveRegistrants_Result.Login = login;
            getLastFiveRegistrants_Result.FirstName = firstName;
            getLastFiveRegistrants_Result.LastName = lastName;
            getLastFiveRegistrants_Result.Birthday = birthday;
            getLastFiveRegistrants_Result.CompanyID = companyID;
            getLastFiveRegistrants_Result.Score = score;
            getLastFiveRegistrants_Result.InvitationsLeft = invitationsLeft;
            getLastFiveRegistrants_Result.CompanyAccessLevel = companyAccessLevel;
            getLastFiveRegistrants_Result.NetworkAccessLevel = networkAccessLevel;
            getLastFiveRegistrants_Result.NetworkId = networkId;
            getLastFiveRegistrants_Result.IsEmailConfirmed = isEmailConfirmed;
            return getLastFiveRegistrants_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private System.Guid _UserId;
        partial void OnUserIdChanging(System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private string _Login;
        partial void OnLoginChanging(string value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private string _FirstName;
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private string _LastName;
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private Nullable<int> _Gender;
        partial void OnGenderChanging(Nullable<int> value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private System.DateTime _Birthday;
        partial void OnBirthdayChanging(System.DateTime value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Picture
        {
            get
            {
                return _Picture;
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private string _Picture;
        partial void OnPictureChanging(string value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private string _Email;
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string PersonalEmail
        {
            get
            {
                return _PersonalEmail;
            }
            set
            {
                OnPersonalEmailChanging(value);
                ReportPropertyChanging("PersonalEmail");
                _PersonalEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PersonalEmail");
                OnPersonalEmailChanged();
            }
        }
        private string _PersonalEmail;
        partial void OnPersonalEmailChanging(string value);
        partial void OnPersonalEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private string _Phone;
        partial void OnPhoneChanging(string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private int _CompanyID;
        partial void OnCompanyIDChanging(int value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<int> _JobId;
        partial void OnJobIdChanging(Nullable<int> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Site
        {
            get
            {
                return _Site;
            }
            set
            {
                OnSiteChanging(value);
                ReportPropertyChanging("Site");
                _Site = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Site");
                OnSiteChanged();
            }
        }
        private string _Site;
        partial void OnSiteChanging(string value);
        partial void OnSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Twitter
        {
            get
            {
                return _Twitter;
            }
            set
            {
                OnTwitterChanging(value);
                ReportPropertyChanging("Twitter");
                _Twitter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Twitter");
                OnTwitterChanged();
            }
        }
        private string _Twitter;
        partial void OnTwitterChanging(string value);
        partial void OnTwitterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private string _ZipCode;
        partial void OnZipCodeChanging(string value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private string _About;
        partial void OnAboutChanging(string value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string FavoriteQuotes
        {
            get
            {
                return _FavoriteQuotes;
            }
            set
            {
                OnFavoriteQuotesChanging(value);
                ReportPropertyChanging("FavoriteQuotes");
                _FavoriteQuotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FavoriteQuotes");
                OnFavoriteQuotesChanged();
            }
        }
        private string _FavoriteQuotes;
        partial void OnFavoriteQuotesChanging(string value);
        partial void OnFavoriteQuotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string CurrentTarget
        {
            get
            {
                return _CurrentTarget;
            }
            set
            {
                OnCurrentTargetChanging(value);
                ReportPropertyChanging("CurrentTarget");
                _CurrentTarget = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentTarget");
                OnCurrentTargetChanged();
            }
        }
        private string _CurrentTarget;
        partial void OnCurrentTargetChanging(string value);
        partial void OnCurrentTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Contribution
        {
            get
            {
                return _Contribution;
            }
            set
            {
                OnContributionChanging(value);
                ReportPropertyChanging("Contribution");
                _Contribution = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Contribution");
                OnContributionChanged();
            }
        }
        private string _Contribution;
        partial void OnContributionChanging(string value);
        partial void OnContributionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private int _Score;
        partial void OnScoreChanging(int value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int InvitationsLeft
        {
            get
            {
                return _InvitationsLeft;
            }
            set
            {
                OnInvitationsLeftChanging(value);
                ReportPropertyChanging("InvitationsLeft");
                _InvitationsLeft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationsLeft");
                OnInvitationsLeftChanged();
            }
        }
        private int _InvitationsLeft;
        partial void OnInvitationsLeftChanging(int value);
        partial void OnInvitationsLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> RelationshipId
        {
            get
            {
                return _RelationshipId;
            }
            set
            {
                OnRelationshipIdChanging(value);
                ReportPropertyChanging("RelationshipId");
                _RelationshipId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationshipId");
                OnRelationshipIdChanged();
            }
        }
        private Nullable<int> _RelationshipId;
        partial void OnRelationshipIdChanging(Nullable<int> value);
        partial void OnRelationshipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<int> _ProjectId;
        partial void OnProjectIdChanging(Nullable<int> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.Guid> Superior
        {
            get
            {
                return _Superior;
            }
            set
            {
                OnSuperiorChanging(value);
                ReportPropertyChanging("Superior");
                _Superior = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Superior");
                OnSuperiorChanged();
            }
        }
        private Nullable<System.Guid> _Superior;
        partial void OnSuperiorChanging(Nullable<System.Guid> value);
        partial void OnSuperiorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> IsTeamMember
        {
            get
            {
                return _IsTeamMember;
            }
            set
            {
                OnIsTeamMemberChanging(value);
                ReportPropertyChanging("IsTeamMember");
                _IsTeamMember = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTeamMember");
                OnIsTeamMemberChanged();
            }
        }
        private Nullable<bool> _IsTeamMember;
        partial void OnIsTeamMemberChanging(Nullable<bool> value);
        partial void OnIsTeamMemberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<bool> AccountClosed
        {
            get
            {
                return _AccountClosed;
            }
            set
            {
                OnAccountClosedChanging(value);
                ReportPropertyChanging("AccountClosed");
                _AccountClosed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountClosed");
                OnAccountClosedChanged();
            }
        }
        private Nullable<bool> _AccountClosed;
        partial void OnAccountClosedChanging(Nullable<bool> value);
        partial void OnAccountClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> AccountRight
        {
            get
            {
                return _AccountRight;
            }
            set
            {
                OnAccountRightChanging(value);
                ReportPropertyChanging("AccountRight");
                _AccountRight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountRight");
                OnAccountRightChanged();
            }
        }
        private Nullable<byte> _AccountRight;
        partial void OnAccountRightChanging(Nullable<byte> value);
        partial void OnAccountRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int CompanyAccessLevel
        {
            get
            {
                return _CompanyAccessLevel;
            }
            set
            {
                OnCompanyAccessLevelChanging(value);
                ReportPropertyChanging("CompanyAccessLevel");
                _CompanyAccessLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyAccessLevel");
                OnCompanyAccessLevelChanged();
            }
        }
        private int _CompanyAccessLevel;
        partial void OnCompanyAccessLevelChanging(int value);
        partial void OnCompanyAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkAccessLevel
        {
            get
            {
                return _NetworkAccessLevel;
            }
            set
            {
                OnNetworkAccessLevelChanging(value);
                ReportPropertyChanging("NetworkAccessLevel");
                _NetworkAccessLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkAccessLevel");
                OnNetworkAccessLevelChanged();
            }
        }
        private int _NetworkAccessLevel;
        partial void OnNetworkAccessLevelChanging(int value);
        partial void OnNetworkAccessLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsEmailConfirmed
        {
            get
            {
                return _IsEmailConfirmed;
            }
            set
            {
                OnIsEmailConfirmedChanging(value);
                ReportPropertyChanging("IsEmailConfirmed");
                _IsEmailConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEmailConfirmed");
                OnIsEmailConfirmedChanged();
            }
        }
        private bool _IsEmailConfirmed;
        partial void OnIsEmailConfirmedChanging(bool value);
        partial void OnIsEmailConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CreatedDateUtc
        {
            get
            {
                return _CreatedDateUtc;
            }
            set
            {
                OnCreatedDateUtcChanging(value);
                ReportPropertyChanging("CreatedDateUtc");
                _CreatedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateUtc");
                OnCreatedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _CreatedDateUtc;
        partial void OnCreatedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnCreatedDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> AccountClosedDateUtc
        {
            get
            {
                return _AccountClosedDateUtc;
            }
            set
            {
                OnAccountClosedDateUtcChanging(value);
                ReportPropertyChanging("AccountClosedDateUtc");
                _AccountClosedDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountClosedDateUtc");
                OnAccountClosedDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _AccountClosedDateUtc;
        partial void OnAccountClosedDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnAccountClosedDateUtcChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetNewsletterStatsRow")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetNewsletterStatsRow : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetNewsletterStatsRow object.
        /// </summary>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static GetNewsletterStatsRow CreateGetNewsletterStatsRow(string category, string name)
        {
            GetNewsletterStatsRow getNewsletterStatsRow = new GetNewsletterStatsRow();
            getNewsletterStatsRow.Category = category;
            getNewsletterStatsRow.Name = name;
            return getNewsletterStatsRow;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private string _Category;
        partial void OnCategoryChanging(string value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return _Identifier;
            }
            set
            {
                OnIdentifierChanging(value);
                ReportPropertyChanging("Identifier");
                _Identifier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Identifier");
                OnIdentifierChanged();
            }
        }
        private string _Identifier;
        partial void OnIdentifierChanging(string value);
        partial void OnIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> UserHits
        {
            get
            {
                return _UserHits;
            }
            set
            {
                OnUserHitsChanging(value);
                ReportPropertyChanging("UserHits");
                _UserHits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserHits");
                OnUserHitsChanged();
            }
        }
        private Nullable<int> _UserHits;
        partial void OnUserHitsChanging(Nullable<int> value);
        partial void OnUserHitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AnonymousHits
        {
            get
            {
                return _AnonymousHits;
            }
            set
            {
                OnAnonymousHitsChanging(value);
                ReportPropertyChanging("AnonymousHits");
                _AnonymousHits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnonymousHits");
                OnAnonymousHitsChanged();
            }
        }
        private Nullable<int> _AnonymousHits;
        partial void OnAnonymousHitsChanging(Nullable<int> value);
        partial void OnAnonymousHitsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetTimelineCommentIdsByImportedIdExpression_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetTimelineCommentIdsByImportedIdExpression_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetTimelineCommentIdsByImportedIdExpression_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static GetTimelineCommentIdsByImportedIdExpression_Result CreateGetTimelineCommentIdsByImportedIdExpression_Result(int id)
        {
            GetTimelineCommentIdsByImportedIdExpression_Result getTimelineCommentIdsByImportedIdExpression_Result = new GetTimelineCommentIdsByImportedIdExpression_Result();
            getTimelineCommentIdsByImportedIdExpression_Result.Id = id;
            return getTimelineCommentIdsByImportedIdExpression_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ImportedId
        {
            get
            {
                return _ImportedId;
            }
            set
            {
                OnImportedIdChanging(value);
                ReportPropertyChanging("ImportedId");
                _ImportedId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportedId");
                OnImportedIdChanged();
            }
        }
        private string _ImportedId;
        partial void OnImportedIdChanging(string value);
        partial void OnImportedIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetTimelineItemIdsByImportedIdExpression_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetTimelineItemIdsByImportedIdExpression_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetTimelineItemIdsByImportedIdExpression_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static GetTimelineItemIdsByImportedIdExpression_Result CreateGetTimelineItemIdsByImportedIdExpression_Result(int id)
        {
            GetTimelineItemIdsByImportedIdExpression_Result getTimelineItemIdsByImportedIdExpression_Result = new GetTimelineItemIdsByImportedIdExpression_Result();
            getTimelineItemIdsByImportedIdExpression_Result.Id = id;
            return getTimelineItemIdsByImportedIdExpression_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ImportedId
        {
            get
            {
                return _ImportedId;
            }
            set
            {
                OnImportedIdChanging(value);
                ReportPropertyChanging("ImportedId");
                _ImportedId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportedId");
                OnImportedIdChanged();
            }
        }
        private string _ImportedId;
        partial void OnImportedIdChanging(string value);
        partial void OnImportedIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetTimelineListIdPeopleNews_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetTimelineListIdPeopleNews_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetTimelineListIdPeopleNews_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="postedByUserId">Initial value of the PostedByUserId property.</param>
        public static GetTimelineListIdPeopleNews_Result CreateGetTimelineListIdPeopleNews_Result(int id, int postedByUserId)
        {
            GetTimelineListIdPeopleNews_Result getTimelineListIdPeopleNews_Result = new GetTimelineListIdPeopleNews_Result();
            getTimelineListIdPeopleNews_Result.Id = id;
            getTimelineListIdPeopleNews_Result.PostedByUserId = postedByUserId;
            return getTimelineListIdPeopleNews_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PostedByUserId
        {
            get
            {
                return _PostedByUserId;
            }
            set
            {
                OnPostedByUserIdChanging(value);
                ReportPropertyChanging("PostedByUserId");
                _PostedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedByUserId");
                OnPostedByUserIdChanged();
            }
        }
        private int _PostedByUserId;
        partial void OnPostedByUserIdChanging(int value);
        partial void OnPostedByUserIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetTopSkills_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetTopSkills_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetTopSkills_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        public static GetTopSkills_Result CreateGetTopSkills_Result(int id, string tagName)
        {
            GetTopSkills_Result getTopSkills_Result = new GetTopSkills_Result();
            getTopSkills_Result.Id = id;
            getTopSkills_Result.TagName = tagName;
            return getTopSkills_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private string _TagName;
        partial void OnTagNameChanging(string value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> UsersCount
        {
            get
            {
                return _UsersCount;
            }
            set
            {
                OnUsersCountChanging(value);
                ReportPropertyChanging("UsersCount");
                _UsersCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsersCount");
                OnUsersCountChanged();
            }
        }
        private Nullable<int> _UsersCount;
        partial void OnUsersCountChanging(Nullable<int> value);
        partial void OnUsersCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompaniesCount
        {
            get
            {
                return _CompaniesCount;
            }
            set
            {
                OnCompaniesCountChanging(value);
                ReportPropertyChanging("CompaniesCount");
                _CompaniesCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompaniesCount");
                OnCompaniesCountChanged();
            }
        }
        private Nullable<int> _CompaniesCount;
        partial void OnCompaniesCountChanging(Nullable<int> value);
        partial void OnCompaniesCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> TotalCount
        {
            get
            {
                return _TotalCount;
            }
            set
            {
                OnTotalCountChanging(value);
                ReportPropertyChanging("TotalCount");
                _TotalCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCount");
                OnTotalCountChanged();
            }
        }
        private Nullable<int> _TotalCount;
        partial void OnTotalCountChanging(Nullable<int> value);
        partial void OnTotalCountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetUserPresenceStats_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetUserPresenceStats_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<double> UserPresenceAverageDays
        {
            get
            {
                return _UserPresenceAverageDays;
            }
            set
            {
                OnUserPresenceAverageDaysChanging(value);
                ReportPropertyChanging("UserPresenceAverageDays");
                _UserPresenceAverageDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserPresenceAverageDays");
                OnUserPresenceAverageDaysChanged();
            }
        }
        private Nullable<double> _UserPresenceAverageDays;
        partial void OnUserPresenceAverageDaysChanging(Nullable<double> value);
        partial void OnUserPresenceAverageDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<double> UserPresenceMaxDays
        {
            get
            {
                return _UserPresenceMaxDays;
            }
            set
            {
                OnUserPresenceMaxDaysChanging(value);
                ReportPropertyChanging("UserPresenceMaxDays");
                _UserPresenceMaxDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserPresenceMaxDays");
                OnUserPresenceMaxDaysChanged();
            }
        }
        private Nullable<double> _UserPresenceMaxDays;
        partial void OnUserPresenceMaxDaysChanging(Nullable<double> value);
        partial void OnUserPresenceMaxDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<double> PerDayPresenceAverageUsers
        {
            get
            {
                return _PerDayPresenceAverageUsers;
            }
            set
            {
                OnPerDayPresenceAverageUsersChanging(value);
                ReportPropertyChanging("PerDayPresenceAverageUsers");
                _PerDayPresenceAverageUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerDayPresenceAverageUsers");
                OnPerDayPresenceAverageUsersChanged();
            }
        }
        private Nullable<double> _PerDayPresenceAverageUsers;
        partial void OnPerDayPresenceAverageUsersChanging(Nullable<double> value);
        partial void OnPerDayPresenceAverageUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<double> PerDayPresenceMaxUsers
        {
            get
            {
                return _PerDayPresenceMaxUsers;
            }
            set
            {
                OnPerDayPresenceMaxUsersChanging(value);
                ReportPropertyChanging("PerDayPresenceMaxUsers");
                _PerDayPresenceMaxUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerDayPresenceMaxUsers");
                OnPerDayPresenceMaxUsersChanged();
            }
        }
        private Nullable<double> _PerDayPresenceMaxUsers;
        partial void OnPerDayPresenceMaxUsersChanging(Nullable<double> value);
        partial void OnPerDayPresenceMaxUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> TotalDays
        {
            get
            {
                return _TotalDays;
            }
            set
            {
                OnTotalDaysChanging(value);
                ReportPropertyChanging("TotalDays");
                _TotalDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalDays");
                OnTotalDaysChanged();
            }
        }
        private Nullable<int> _TotalDays;
        partial void OnTotalDaysChanging(Nullable<int> value);
        partial void OnTotalDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> TotalUsers
        {
            get
            {
                return _TotalUsers;
            }
            set
            {
                OnTotalUsersChanging(value);
                ReportPropertyChanging("TotalUsers");
                _TotalUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalUsers");
                OnTotalUsersChanged();
            }
        }
        private Nullable<int> _TotalUsers;
        partial void OnTotalUsersChanging(Nullable<int> value);
        partial void OnTotalUsersChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetUsersConversations_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetUsersConversations_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetUsersConversations_Result object.
        /// </summary>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="toUserId">Initial value of the ToUserId property.</param>
        /// <param name="displayed">Initial value of the Displayed property.</param>
        public static GetUsersConversations_Result CreateGetUsersConversations_Result(int fromUserId, int toUserId, bool displayed)
        {
            GetUsersConversations_Result getUsersConversations_Result = new GetUsersConversations_Result();
            getUsersConversations_Result.FromUserId = fromUserId;
            getUsersConversations_Result.ToUserId = toUserId;
            getUsersConversations_Result.Displayed = displayed;
            return getUsersConversations_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private int _FromUserId;
        partial void OnFromUserIdChanging(int value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private int _ToUserId;
        partial void OnToUserIdChanging(int value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public bool Displayed
        {
            get
            {
                return _Displayed;
            }
            set
            {
                OnDisplayedChanging(value);
                ReportPropertyChanging("Displayed");
                _Displayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Displayed");
                OnDisplayedChanged();
            }
        }
        private bool _Displayed;
        partial void OnDisplayedChanging(bool value);
        partial void OnDisplayedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private Nullable<int> _Count;
        partial void OnCountChanging(Nullable<int> value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> MaxId
        {
            get
            {
                return _MaxId;
            }
            set
            {
                OnMaxIdChanging(value);
                ReportPropertyChanging("MaxId");
                _MaxId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxId");
                OnMaxIdChanged();
            }
        }
        private Nullable<int> _MaxId;
        partial void OnMaxIdChanging(Nullable<int> value);
        partial void OnMaxIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="GetWallItemById_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class GetWallItemById_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetWallItemById_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="itemType">Initial value of the ItemType property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="privateMode">Initial value of the PrivateMode property.</param>
        /// <param name="postedByUserId">Initial value of the PostedByUserId property.</param>
        /// <param name="networkId">Initial value of the NetworkId property.</param>
        public static GetWallItemById_Result CreateGetWallItemById_Result(int id, int itemType, string text, System.DateTime createDate, int privateMode, int postedByUserId, int networkId)
        {
            GetWallItemById_Result getWallItemById_Result = new GetWallItemById_Result();
            getWallItemById_Result.Id = id;
            getWallItemById_Result.ItemType = itemType;
            getWallItemById_Result.Text = text;
            getWallItemById_Result.CreateDate = createDate;
            getWallItemById_Result.PrivateMode = privateMode;
            getWallItemById_Result.PostedByUserId = postedByUserId;
            getWallItemById_Result.NetworkId = networkId;
            return getWallItemById_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private int _ItemType;
        partial void OnItemTypeChanging(int value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private string _Text;
        partial void OnTextChanging(string value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private System.DateTime _CreateDate;
        partial void OnCreateDateChanging(System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PrivateMode
        {
            get
            {
                return _PrivateMode;
            }
            set
            {
                OnPrivateModeChanging(value);
                ReportPropertyChanging("PrivateMode");
                _PrivateMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivateMode");
                OnPrivateModeChanged();
            }
        }
        private int _PrivateMode;
        partial void OnPrivateModeChanging(int value);
        partial void OnPrivateModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<int> _UserId;
        partial void OnUserIdChanging(Nullable<int> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<int> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<int> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private Nullable<int> _EventId;
        partial void OnEventIdChanging(Nullable<int> value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<int> _GroupId;
        partial void OnGroupIdChanging(Nullable<int> value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                OnPlaceIdChanging(value);
                ReportPropertyChanging("PlaceId");
                _PlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceId");
                OnPlaceIdChanged();
            }
        }
        private Nullable<int> _PlaceId;
        partial void OnPlaceIdChanging(Nullable<int> value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> AdId
        {
            get
            {
                return _AdId;
            }
            set
            {
                OnAdIdChanging(value);
                ReportPropertyChanging("AdId");
                _AdId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdId");
                OnAdIdChanged();
            }
        }
        private Nullable<int> _AdId;
        partial void OnAdIdChanging(Nullable<int> value);
        partial void OnAdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<int> _ProjectId;
        partial void OnProjectIdChanging(Nullable<int> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<int> _TeamId;
        partial void OnTeamIdChanging(Nullable<int> value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string Extra
        {
            get
            {
                return _Extra;
            }
            set
            {
                OnExtraChanging(value);
                ReportPropertyChanging("Extra");
                _Extra = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Extra");
                OnExtraChanged();
            }
        }
        private string _Extra;
        partial void OnExtraChanging(string value);
        partial void OnExtraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> ExtraType
        {
            get
            {
                return _ExtraType;
            }
            set
            {
                OnExtraTypeChanging(value);
                ReportPropertyChanging("ExtraType");
                _ExtraType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExtraType");
                OnExtraTypeChanged();
            }
        }
        private Nullable<int> _ExtraType;
        partial void OnExtraTypeChanging(Nullable<int> value);
        partial void OnExtraTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int PostedByUserId
        {
            get
            {
                return _PostedByUserId;
            }
            set
            {
                OnPostedByUserIdChanging(value);
                ReportPropertyChanging("PostedByUserId");
                _PostedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedByUserId");
                OnPostedByUserIdChanged();
            }
        }
        private int _PostedByUserId;
        partial void OnPostedByUserIdChanging(int value);
        partial void OnPostedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private int _NetworkId;
        partial void OnNetworkIdChanging(int value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public string ImportedId
        {
            get
            {
                return _ImportedId;
            }
            set
            {
                OnImportedIdChanging(value);
                ReportPropertyChanging("ImportedId");
                _ImportedId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportedId");
                OnImportedIdChanged();
            }
        }
        private string _ImportedId;
        partial void OnImportedIdChanging(string value);
        partial void OnImportedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<byte> DeleteReason
        {
            get
            {
                return _DeleteReason;
            }
            set
            {
                OnDeleteReasonChanging(value);
                ReportPropertyChanging("DeleteReason");
                _DeleteReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteReason");
                OnDeleteReasonChanged();
            }
        }
        private Nullable<byte> _DeleteReason;
        partial void OnDeleteReasonChanging(Nullable<byte> value);
        partial void OnDeleteReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<int> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<int> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<int> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<System.DateTime> DeleteDateUtc
        {
            get
            {
                return _DeleteDateUtc;
            }
            set
            {
                OnDeleteDateUtcChanging(value);
                ReportPropertyChanging("DeleteDateUtc");
                _DeleteDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteDateUtc");
                OnDeleteDateUtcChanged();
            }
        }
        private Nullable<System.DateTime> _DeleteDateUtc;
        partial void OnDeleteDateUtcChanging(Nullable<System.DateTime> value);
        partial void OnDeleteDateUtcChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="NetworksModel", Name="TextValue")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    [global::System.CodeDom.Compiler.GeneratedCode("EdmxTool", "1.0.0.0")]
    public partial class TextValue : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TextValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="textId">Initial value of the TextId property.</param>
        /// <param name="cultureName">Initial value of the CultureName property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="dateUpdatedUtc">Initial value of the DateUpdatedUtc property.</param>
        /// <param name="updatedByUserId">Initial value of the UpdatedByUserId property.</param>
        public static TextValue CreateTextValue(int id, int textId, string cultureName, string title, string value, System.DateTime dateUpdatedUtc, int updatedByUserId)
        {
            TextValue textValue = new TextValue();
            textValue.Id = id;
            textValue.TextId = textId;
            textValue.CultureName = cultureName;
            textValue.Title = title;
            textValue.Value = value;
            textValue.DateUpdatedUtc = dateUpdatedUtc;
            textValue.UpdatedByUserId = updatedByUserId;
            return textValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int TextId
        {
            get
            {
                return _TextId;
            }
            set
            {
                OnTextIdChanging(value);
                ReportPropertyChanging("TextId");
                _TextId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TextId");
                OnTextIdChanged();
            }
        }
        private int _TextId;
        partial void OnTextIdChanging(int value);
        partial void OnTextIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string CultureName
        {
            get
            {
                return _CultureName;
            }
            set
            {
                OnCultureNameChanging(value);
                ReportPropertyChanging("CultureName");
                _CultureName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CultureName");
                OnCultureNameChanged();
            }
        }
        private string _CultureName;
        partial void OnCultureNameChanging(string value);
        partial void OnCultureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private string _Value;
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public System.DateTime DateUpdatedUtc
        {
            get
            {
                return _DateUpdatedUtc;
            }
            set
            {
                OnDateUpdatedUtcChanging(value);
                ReportPropertyChanging("DateUpdatedUtc");
                _DateUpdatedUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdatedUtc");
                OnDateUpdatedUtcChanged();
            }
        }
        private System.DateTime _DateUpdatedUtc;
        partial void OnDateUpdatedUtcChanging(System.DateTime value);
        partial void OnDateUpdatedUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public int UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private int _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(int value);
        partial void OnUpdatedByUserIdChanged();

        #endregion

    }

    #endregion

    
}
