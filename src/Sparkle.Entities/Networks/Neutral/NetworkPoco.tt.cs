//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Sparkle.Entities.Networks.Neutral
{
    public partial class NetworkPoco
    {
        #region Primitive Properties
    
        public int Id
        {
            get;
            set;
        }
    
        public string Name
        {
            get;
            set;
        }
    
        public string DisplayName
        {
            get;
            set;
        }
    
        public string ZipCode
        {
            get;
            set;
        }
    
        public string City
        {
            get;
            set;
        }
    
        public string Country
        {
            get;
            set;
        }
    
        public string Color
        {
            get;
            set;
        }
    
        public string Address
        {
            get;
            set;
        }
    
        public string About
        {
            get;
            set;
        }
    
        public string Sector
        {
            get;
            set;
        }
    
        public Nullable<double> lat
        {
            get;
            set;
        }
    
        public Nullable<double> lon
        {
            get;
            set;
        }
    
        public string FoursquareId
        {
            get;
            set;
        }
    
        public string SiteUrl
        {
            get;
            set;
        }
    
        public int NetworkTypeId
        {
            get { return _networkTypeId; }
            set
            {
                if (this._networkTypeId != value)
                {
                    if (this.NetworkType != null && this.NetworkType.Id != value)
                    {
                        this.NetworkType = null;
                    }
                    this._networkTypeId = value;
                }
            }
        }
        private int _networkTypeId;
    
        public string TwitterUrl
        {
            get;
            set;
        }
    
        public string FacebookUrl
        {
            get;
            set;
        }
    
        public string BlogUrl
        {
            get;
            set;
        }
    
        public string DefaultCulture
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        // Achievement
        public ICollection<AchievementPoco> Achievements
        {
            get
            {
                if (_achievements == null)
                {
                    var newCollection = new FixupCollection<AchievementPoco>();
                    newCollection.CollectionChanged += FixupAchievements;
                    _achievements = newCollection;
                }
                return _achievements;
            }
            set
            {
                if (!ReferenceEquals(_achievements, value))
                {
                    var previousValue = _achievements as FixupCollection<AchievementPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAchievements;
                    }
                    _achievements = value;
                    var newValue = value as FixupCollection<AchievementPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAchievements;
                    }
                }
            }
        }
        private ICollection<AchievementPoco> _achievements;
    
        // AdCategory
        public ICollection<AdCategoryPoco> AdCategories
        {
            get
            {
                if (_adCategories == null)
                {
                    var newCollection = new FixupCollection<AdCategoryPoco>();
                    newCollection.CollectionChanged += FixupAdCategories;
                    _adCategories = newCollection;
                }
                return _adCategories;
            }
            set
            {
                if (!ReferenceEquals(_adCategories, value))
                {
                    var previousValue = _adCategories as FixupCollection<AdCategoryPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAdCategories;
                    }
                    _adCategories = value;
                    var newValue = value as FixupCollection<AdCategoryPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAdCategories;
                    }
                }
            }
        }
        private ICollection<AdCategoryPoco> _adCategories;
    
        // Building
        public ICollection<BuildingPoco> Buildings
        {
            get
            {
                if (_buildings == null)
                {
                    var newCollection = new FixupCollection<BuildingPoco>();
                    newCollection.CollectionChanged += FixupBuildings;
                    _buildings = newCollection;
                }
                return _buildings;
            }
            set
            {
                if (!ReferenceEquals(_buildings, value))
                {
                    var previousValue = _buildings as FixupCollection<BuildingPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupBuildings;
                    }
                    _buildings = value;
                    var newValue = value as FixupCollection<BuildingPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupBuildings;
                    }
                }
            }
        }
        private ICollection<BuildingPoco> _buildings;
    
        // Company
        public ICollection<CompanyPoco> Companies
        {
            get
            {
                if (_companies == null)
                {
                    var newCollection = new FixupCollection<CompanyPoco>();
                    newCollection.CollectionChanged += FixupCompanies;
                    _companies = newCollection;
                }
                return _companies;
            }
            set
            {
                if (!ReferenceEquals(_companies, value))
                {
                    var previousValue = _companies as FixupCollection<CompanyPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanies;
                    }
                    _companies = value;
                    var newValue = value as FixupCollection<CompanyPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanies;
                    }
                }
            }
        }
        private ICollection<CompanyPoco> _companies;
    
        // DeviceConfiguration
        public ICollection<DeviceConfigurationPoco> DeviceConfigurations
        {
            get
            {
                if (_deviceConfigurations == null)
                {
                    var newCollection = new FixupCollection<DeviceConfigurationPoco>();
                    newCollection.CollectionChanged += FixupDeviceConfigurations;
                    _deviceConfigurations = newCollection;
                }
                return _deviceConfigurations;
            }
            set
            {
                if (!ReferenceEquals(_deviceConfigurations, value))
                {
                    var previousValue = _deviceConfigurations as FixupCollection<DeviceConfigurationPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDeviceConfigurations;
                    }
                    _deviceConfigurations = value;
                    var newValue = value as FixupCollection<DeviceConfigurationPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDeviceConfigurations;
                    }
                }
            }
        }
        private ICollection<DeviceConfigurationPoco> _deviceConfigurations;
    
        // Device
        public ICollection<DevicePoco> Devices
        {
            get
            {
                if (_devices == null)
                {
                    var newCollection = new FixupCollection<DevicePoco>();
                    newCollection.CollectionChanged += FixupDevices;
                    _devices = newCollection;
                }
                return _devices;
            }
            set
            {
                if (!ReferenceEquals(_devices, value))
                {
                    var previousValue = _devices as FixupCollection<DevicePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDevices;
                    }
                    _devices = value;
                    var newValue = value as FixupCollection<DevicePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDevices;
                    }
                }
            }
        }
        private ICollection<DevicePoco> _devices;
    
        // EventCategory
        public ICollection<EventCategoryPoco> EventCategories
        {
            get
            {
                if (_eventCategories == null)
                {
                    var newCollection = new FixupCollection<EventCategoryPoco>();
                    newCollection.CollectionChanged += FixupEventCategories;
                    _eventCategories = newCollection;
                }
                return _eventCategories;
            }
            set
            {
                if (!ReferenceEquals(_eventCategories, value))
                {
                    var previousValue = _eventCategories as FixupCollection<EventCategoryPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEventCategories;
                    }
                    _eventCategories = value;
                    var newValue = value as FixupCollection<EventCategoryPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEventCategories;
                    }
                }
            }
        }
        private ICollection<EventCategoryPoco> _eventCategories;
    
        // Event
        public ICollection<EventPoco> Events
        {
            get
            {
                if (_events == null)
                {
                    var newCollection = new FixupCollection<EventPoco>();
                    newCollection.CollectionChanged += FixupEvents;
                    _events = newCollection;
                }
                return _events;
            }
            set
            {
                if (!ReferenceEquals(_events, value))
                {
                    var previousValue = _events as FixupCollection<EventPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEvents;
                    }
                    _events = value;
                    var newValue = value as FixupCollection<EventPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEvents;
                    }
                }
            }
        }
        private ICollection<EventPoco> _events;
    
        // ExchangeMaterial
        public ICollection<ExchangeMaterialPoco> ExchangeMaterials
        {
            get
            {
                if (_exchangeMaterials == null)
                {
                    var newCollection = new FixupCollection<ExchangeMaterialPoco>();
                    newCollection.CollectionChanged += FixupExchangeMaterials;
                    _exchangeMaterials = newCollection;
                }
                return _exchangeMaterials;
            }
            set
            {
                if (!ReferenceEquals(_exchangeMaterials, value))
                {
                    var previousValue = _exchangeMaterials as FixupCollection<ExchangeMaterialPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExchangeMaterials;
                    }
                    _exchangeMaterials = value;
                    var newValue = value as FixupCollection<ExchangeMaterialPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExchangeMaterials;
                    }
                }
            }
        }
        private ICollection<ExchangeMaterialPoco> _exchangeMaterials;
    
        // ExchangeSkill
        public ICollection<ExchangeSkillPoco> ExchangeSkills
        {
            get
            {
                if (_exchangeSkills == null)
                {
                    var newCollection = new FixupCollection<ExchangeSkillPoco>();
                    newCollection.CollectionChanged += FixupExchangeSkills;
                    _exchangeSkills = newCollection;
                }
                return _exchangeSkills;
            }
            set
            {
                if (!ReferenceEquals(_exchangeSkills, value))
                {
                    var previousValue = _exchangeSkills as FixupCollection<ExchangeSkillPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExchangeSkills;
                    }
                    _exchangeSkills = value;
                    var newValue = value as FixupCollection<ExchangeSkillPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExchangeSkills;
                    }
                }
            }
        }
        private ICollection<ExchangeSkillPoco> _exchangeSkills;
    
        // ExchangeSurface
        public ICollection<ExchangeSurfacePoco> ExchangeSurfaces
        {
            get
            {
                if (_exchangeSurfaces == null)
                {
                    var newCollection = new FixupCollection<ExchangeSurfacePoco>();
                    newCollection.CollectionChanged += FixupExchangeSurfaces;
                    _exchangeSurfaces = newCollection;
                }
                return _exchangeSurfaces;
            }
            set
            {
                if (!ReferenceEquals(_exchangeSurfaces, value))
                {
                    var previousValue = _exchangeSurfaces as FixupCollection<ExchangeSurfacePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExchangeSurfaces;
                    }
                    _exchangeSurfaces = value;
                    var newValue = value as FixupCollection<ExchangeSurfacePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExchangeSurfaces;
                    }
                }
            }
        }
        private ICollection<ExchangeSurfacePoco> _exchangeSurfaces;
    
        // Group
        public ICollection<GroupPoco> Groups
        {
            get
            {
                if (_groups == null)
                {
                    var newCollection = new FixupCollection<GroupPoco>();
                    newCollection.CollectionChanged += FixupGroups;
                    _groups = newCollection;
                }
                return _groups;
            }
            set
            {
                if (!ReferenceEquals(_groups, value))
                {
                    var previousValue = _groups as FixupCollection<GroupPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroups;
                    }
                    _groups = value;
                    var newValue = value as FixupCollection<GroupPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroups;
                    }
                }
            }
        }
        private ICollection<GroupPoco> _groups;
    
        // InformationNote
        public ICollection<InformationNotePoco> InformationNotes
        {
            get
            {
                if (_informationNotes == null)
                {
                    var newCollection = new FixupCollection<InformationNotePoco>();
                    newCollection.CollectionChanged += FixupInformationNotes;
                    _informationNotes = newCollection;
                }
                return _informationNotes;
            }
            set
            {
                if (!ReferenceEquals(_informationNotes, value))
                {
                    var previousValue = _informationNotes as FixupCollection<InformationNotePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupInformationNotes;
                    }
                    _informationNotes = value;
                    var newValue = value as FixupCollection<InformationNotePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupInformationNotes;
                    }
                }
            }
        }
        private ICollection<InformationNotePoco> _informationNotes;
    
        // Live
        public ICollection<LivePoco> Lives
        {
            get
            {
                if (_lives == null)
                {
                    var newCollection = new FixupCollection<LivePoco>();
                    newCollection.CollectionChanged += FixupLives;
                    _lives = newCollection;
                }
                return _lives;
            }
            set
            {
                if (!ReferenceEquals(_lives, value))
                {
                    var previousValue = _lives as FixupCollection<LivePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLives;
                    }
                    _lives = value;
                    var newValue = value as FixupCollection<LivePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLives;
                    }
                }
            }
        }
        private ICollection<LivePoco> _lives;
    
        // LostItem
        public ICollection<LostItemPoco> LostItems
        {
            get
            {
                if (_lostItems == null)
                {
                    var newCollection = new FixupCollection<LostItemPoco>();
                    newCollection.CollectionChanged += FixupLostItems;
                    _lostItems = newCollection;
                }
                return _lostItems;
            }
            set
            {
                if (!ReferenceEquals(_lostItems, value))
                {
                    var previousValue = _lostItems as FixupCollection<LostItemPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLostItems;
                    }
                    _lostItems = value;
                    var newValue = value as FixupCollection<LostItemPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLostItems;
                    }
                }
            }
        }
        private ICollection<LostItemPoco> _lostItems;
    
        // Number
        public ICollection<NumberPoco> Numbers
        {
            get
            {
                if (_numbers == null)
                {
                    var newCollection = new FixupCollection<NumberPoco>();
                    newCollection.CollectionChanged += FixupNumbers;
                    _numbers = newCollection;
                }
                return _numbers;
            }
            set
            {
                if (!ReferenceEquals(_numbers, value))
                {
                    var previousValue = _numbers as FixupCollection<NumberPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupNumbers;
                    }
                    _numbers = value;
                    var newValue = value as FixupCollection<NumberPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupNumbers;
                    }
                }
            }
        }
        private ICollection<NumberPoco> _numbers;
    
        // Place
        public ICollection<PlacePoco> Places
        {
            get
            {
                if (_places == null)
                {
                    var newCollection = new FixupCollection<PlacePoco>();
                    newCollection.CollectionChanged += FixupPlaces;
                    _places = newCollection;
                }
                return _places;
            }
            set
            {
                if (!ReferenceEquals(_places, value))
                {
                    var previousValue = _places as FixupCollection<PlacePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPlaces;
                    }
                    _places = value;
                    var newValue = value as FixupCollection<PlacePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPlaces;
                    }
                }
            }
        }
        private ICollection<PlacePoco> _places;
    
        // RegisterRequest
        public ICollection<RegisterRequestPoco> RegisterRequests
        {
            get
            {
                if (_registerRequests == null)
                {
                    var newCollection = new FixupCollection<RegisterRequestPoco>();
                    newCollection.CollectionChanged += FixupRegisterRequests;
                    _registerRequests = newCollection;
                }
                return _registerRequests;
            }
            set
            {
                if (!ReferenceEquals(_registerRequests, value))
                {
                    var previousValue = _registerRequests as FixupCollection<RegisterRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRegisterRequests;
                    }
                    _registerRequests = value;
                    var newValue = value as FixupCollection<RegisterRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRegisterRequests;
                    }
                }
            }
        }
        private ICollection<RegisterRequestPoco> _registerRequests;
    
        // RequestForProposal
        public ICollection<RequestForProposalPoco> RequestsForProposals
        {
            get
            {
                if (_requestsForProposals == null)
                {
                    var newCollection = new FixupCollection<RequestForProposalPoco>();
                    newCollection.CollectionChanged += FixupRequestsForProposals;
                    _requestsForProposals = newCollection;
                }
                return _requestsForProposals;
            }
            set
            {
                if (!ReferenceEquals(_requestsForProposals, value))
                {
                    var previousValue = _requestsForProposals as FixupCollection<RequestForProposalPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRequestsForProposals;
                    }
                    _requestsForProposals = value;
                    var newValue = value as FixupCollection<RequestForProposalPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRequestsForProposals;
                    }
                }
            }
        }
        private ICollection<RequestForProposalPoco> _requestsForProposals;
    
        // TimelineItem
        public ICollection<TimelineItemPoco> TimelineItems
        {
            get
            {
                if (_timelineItems == null)
                {
                    var newCollection = new FixupCollection<TimelineItemPoco>();
                    newCollection.CollectionChanged += FixupTimelineItems;
                    _timelineItems = newCollection;
                }
                return _timelineItems;
            }
            set
            {
                if (!ReferenceEquals(_timelineItems, value))
                {
                    var previousValue = _timelineItems as FixupCollection<TimelineItemPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTimelineItems;
                    }
                    _timelineItems = value;
                    var newValue = value as FixupCollection<TimelineItemPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTimelineItems;
                    }
                }
            }
        }
        private ICollection<TimelineItemPoco> _timelineItems;
    
        // TouchCommunication
        public ICollection<TouchCommunicationPoco> TouchCommunications
        {
            get
            {
                if (_touchCommunications == null)
                {
                    var newCollection = new FixupCollection<TouchCommunicationPoco>();
                    newCollection.CollectionChanged += FixupTouchCommunications;
                    _touchCommunications = newCollection;
                }
                return _touchCommunications;
            }
            set
            {
                if (!ReferenceEquals(_touchCommunications, value))
                {
                    var previousValue = _touchCommunications as FixupCollection<TouchCommunicationPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTouchCommunications;
                    }
                    _touchCommunications = value;
                    var newValue = value as FixupCollection<TouchCommunicationPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTouchCommunications;
                    }
                }
            }
        }
        private ICollection<TouchCommunicationPoco> _touchCommunications;
    
        // CareerOpportunity
        public ICollection<CareerOpportunityPoco> CareerOpportunities
        {
            get
            {
                if (_careerOpportunities == null)
                {
                    var newCollection = new FixupCollection<CareerOpportunityPoco>();
                    newCollection.CollectionChanged += FixupCareerOpportunities;
                    _careerOpportunities = newCollection;
                }
                return _careerOpportunities;
            }
            set
            {
                if (!ReferenceEquals(_careerOpportunities, value))
                {
                    var previousValue = _careerOpportunities as FixupCollection<CareerOpportunityPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCareerOpportunities;
                    }
                    _careerOpportunities = value;
                    var newValue = value as FixupCollection<CareerOpportunityPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCareerOpportunities;
                    }
                }
            }
        }
        private ICollection<CareerOpportunityPoco> _careerOpportunities;
    
        // SocialNetworkState
        public ICollection<SocialNetworkStatePoco> SocialNetworkStates
        {
            get
            {
                if (_socialNetworkStates == null)
                {
                    var newCollection = new FixupCollection<SocialNetworkStatePoco>();
                    newCollection.CollectionChanged += FixupSocialNetworkStates;
                    _socialNetworkStates = newCollection;
                }
                return _socialNetworkStates;
            }
            set
            {
                if (!ReferenceEquals(_socialNetworkStates, value))
                {
                    var previousValue = _socialNetworkStates as FixupCollection<SocialNetworkStatePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSocialNetworkStates;
                    }
                    _socialNetworkStates = value;
                    var newValue = value as FixupCollection<SocialNetworkStatePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSocialNetworkStates;
                    }
                }
            }
        }
        private ICollection<SocialNetworkStatePoco> _socialNetworkStates;
    
        // User
        public ICollection<UserPoco> Users
        {
            get
            {
                if (_users == null)
                {
                    var newCollection = new FixupCollection<UserPoco>();
                    newCollection.CollectionChanged += FixupUsers;
                    _users = newCollection;
                }
                return _users;
            }
            set
            {
                if (!ReferenceEquals(_users, value))
                {
                    var previousValue = _users as FixupCollection<UserPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUsers;
                    }
                    _users = value;
                    var newValue = value as FixupCollection<UserPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUsers;
                    }
                }
            }
        }
        private ICollection<UserPoco> _users;
    
        // Resume
        public ICollection<ResumePoco> Resumes
        {
            get
            {
                if (_resumes == null)
                {
                    var newCollection = new FixupCollection<ResumePoco>();
                    newCollection.CollectionChanged += FixupResumes;
                    _resumes = newCollection;
                }
                return _resumes;
            }
            set
            {
                if (!ReferenceEquals(_resumes, value))
                {
                    var previousValue = _resumes as FixupCollection<ResumePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupResumes;
                    }
                    _resumes = value;
                    var newValue = value as FixupCollection<ResumePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupResumes;
                    }
                }
            }
        }
        private ICollection<ResumePoco> _resumes;
    
        // CreateNetworkRequest
        public ICollection<CreateNetworkRequestPoco> CreateNetworkRequests
        {
            get
            {
                if (_createNetworkRequests == null)
                {
                    var newCollection = new FixupCollection<CreateNetworkRequestPoco>();
                    newCollection.CollectionChanged += FixupCreateNetworkRequests;
                    _createNetworkRequests = newCollection;
                }
                return _createNetworkRequests;
            }
            set
            {
                if (!ReferenceEquals(_createNetworkRequests, value))
                {
                    var previousValue = _createNetworkRequests as FixupCollection<CreateNetworkRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCreateNetworkRequests;
                    }
                    _createNetworkRequests = value;
                    var newValue = value as FixupCollection<CreateNetworkRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCreateNetworkRequests;
                    }
                }
            }
        }
        private ICollection<CreateNetworkRequestPoco> _createNetworkRequests;
    
        // StatsCounterHit
        public ICollection<StatsCounterHitPoco> StatsCounterHits
        {
            get
            {
                if (_statsCounterHits == null)
                {
                    var newCollection = new FixupCollection<StatsCounterHitPoco>();
                    newCollection.CollectionChanged += FixupStatsCounterHits;
                    _statsCounterHits = newCollection;
                }
                return _statsCounterHits;
            }
            set
            {
                if (!ReferenceEquals(_statsCounterHits, value))
                {
                    var previousValue = _statsCounterHits as FixupCollection<StatsCounterHitPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStatsCounterHits;
                    }
                    _statsCounterHits = value;
                    var newValue = value as FixupCollection<StatsCounterHitPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStatsCounterHits;
                    }
                }
            }
        }
        private ICollection<StatsCounterHitPoco> _statsCounterHits;
    
        // CompanyRequest
        public ICollection<CompanyRequestPoco> CompanyRequests
        {
            get
            {
                if (_companyRequests == null)
                {
                    var newCollection = new FixupCollection<CompanyRequestPoco>();
                    newCollection.CollectionChanged += FixupCompanyRequests;
                    _companyRequests = newCollection;
                }
                return _companyRequests;
            }
            set
            {
                if (!ReferenceEquals(_companyRequests, value))
                {
                    var previousValue = _companyRequests as FixupCollection<CompanyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyRequests;
                    }
                    _companyRequests = value;
                    var newValue = value as FixupCollection<CompanyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyRequests;
                    }
                }
            }
        }
        private ICollection<CompanyRequestPoco> _companyRequests;
    
        public virtual NetworkTypePoco NetworkType
        {
            get { return _networkType; }
            set
            {
                if (!ReferenceEquals(_networkType, value))
                {
                    var previousValue = _networkType;
                    _networkType = value;
                    FixupNetworkType(previousValue);
                }
            }
        }
        private NetworkTypePoco _networkType;
    
        // Club
        public ICollection<ClubPoco> Clubs
        {
            get
            {
                if (_clubs == null)
                {
                    var newCollection = new FixupCollection<ClubPoco>();
                    newCollection.CollectionChanged += FixupClubs;
                    _clubs = newCollection;
                }
                return _clubs;
            }
            set
            {
                if (!ReferenceEquals(_clubs, value))
                {
                    var previousValue = _clubs as FixupCollection<ClubPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupClubs;
                    }
                    _clubs = value;
                    var newValue = value as FixupCollection<ClubPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupClubs;
                    }
                }
            }
        }
        private ICollection<ClubPoco> _clubs;
    
        // EmailMessage
        public ICollection<EmailMessagePoco> EmailMessages
        {
            get
            {
                if (_emailMessages == null)
                {
                    var newCollection = new FixupCollection<EmailMessagePoco>();
                    newCollection.CollectionChanged += FixupEmailMessages;
                    _emailMessages = newCollection;
                }
                return _emailMessages;
            }
            set
            {
                if (!ReferenceEquals(_emailMessages, value))
                {
                    var previousValue = _emailMessages as FixupCollection<EmailMessagePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEmailMessages;
                    }
                    _emailMessages = value;
                    var newValue = value as FixupCollection<EmailMessagePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEmailMessages;
                    }
                }
            }
        }
        private ICollection<EmailMessagePoco> _emailMessages;
    
        // UserEmailChangeRequest
        public ICollection<UserEmailChangeRequestPoco> UserEmailChangeRequests
        {
            get
            {
                if (_userEmailChangeRequests == null)
                {
                    var newCollection = new FixupCollection<UserEmailChangeRequestPoco>();
                    newCollection.CollectionChanged += FixupUserEmailChangeRequests;
                    _userEmailChangeRequests = newCollection;
                }
                return _userEmailChangeRequests;
            }
            set
            {
                if (!ReferenceEquals(_userEmailChangeRequests, value))
                {
                    var previousValue = _userEmailChangeRequests as FixupCollection<UserEmailChangeRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserEmailChangeRequests;
                    }
                    _userEmailChangeRequests = value;
                    var newValue = value as FixupCollection<UserEmailChangeRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserEmailChangeRequests;
                    }
                }
            }
        }
        private ICollection<UserEmailChangeRequestPoco> _userEmailChangeRequests;
    
        // InboundEmailMessage
        public ICollection<InboundEmailMessagePoco> InboundEmailMessages
        {
            get
            {
                if (_inboundEmailMessages == null)
                {
                    var newCollection = new FixupCollection<InboundEmailMessagePoco>();
                    newCollection.CollectionChanged += FixupInboundEmailMessages;
                    _inboundEmailMessages = newCollection;
                }
                return _inboundEmailMessages;
            }
            set
            {
                if (!ReferenceEquals(_inboundEmailMessages, value))
                {
                    var previousValue = _inboundEmailMessages as FixupCollection<InboundEmailMessagePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupInboundEmailMessages;
                    }
                    _inboundEmailMessages = value;
                    var newValue = value as FixupCollection<InboundEmailMessagePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupInboundEmailMessages;
                    }
                }
            }
        }
        private ICollection<InboundEmailMessagePoco> _inboundEmailMessages;
    
        // ApplyRequest
        public ICollection<ApplyRequestPoco> ApplyRequests
        {
            get
            {
                if (_applyRequests == null)
                {
                    var newCollection = new FixupCollection<ApplyRequestPoco>();
                    newCollection.CollectionChanged += FixupApplyRequests;
                    _applyRequests = newCollection;
                }
                return _applyRequests;
            }
            set
            {
                if (!ReferenceEquals(_applyRequests, value))
                {
                    var previousValue = _applyRequests as FixupCollection<ApplyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplyRequests;
                    }
                    _applyRequests = value;
                    var newValue = value as FixupCollection<ApplyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplyRequests;
                    }
                }
            }
        }
        private ICollection<ApplyRequestPoco> _applyRequests;
    
        // SubscriptionTemplate
        public ICollection<SubscriptionTemplatePoco> SubscriptionTemplates
        {
            get
            {
                if (_subscriptionTemplates == null)
                {
                    var newCollection = new FixupCollection<SubscriptionTemplatePoco>();
                    newCollection.CollectionChanged += FixupSubscriptionTemplates;
                    _subscriptionTemplates = newCollection;
                }
                return _subscriptionTemplates;
            }
            set
            {
                if (!ReferenceEquals(_subscriptionTemplates, value))
                {
                    var previousValue = _subscriptionTemplates as FixupCollection<SubscriptionTemplatePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSubscriptionTemplates;
                    }
                    _subscriptionTemplates = value;
                    var newValue = value as FixupCollection<SubscriptionTemplatePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSubscriptionTemplates;
                    }
                }
            }
        }
        private ICollection<SubscriptionTemplatePoco> _subscriptionTemplates;
    
        // Subscription
        public ICollection<SubscriptionPoco> Subscriptions
        {
            get
            {
                if (_subscriptions == null)
                {
                    var newCollection = new FixupCollection<SubscriptionPoco>();
                    newCollection.CollectionChanged += FixupSubscriptions;
                    _subscriptions = newCollection;
                }
                return _subscriptions;
            }
            set
            {
                if (!ReferenceEquals(_subscriptions, value))
                {
                    var previousValue = _subscriptions as FixupCollection<SubscriptionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSubscriptions;
                    }
                    _subscriptions = value;
                    var newValue = value as FixupCollection<SubscriptionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSubscriptions;
                    }
                }
            }
        }
        private ICollection<SubscriptionPoco> _subscriptions;
    
        // StripeTransaction
        public ICollection<StripeTransactionPoco> StripeTransactions
        {
            get
            {
                if (_stripeTransactions == null)
                {
                    var newCollection = new FixupCollection<StripeTransactionPoco>();
                    newCollection.CollectionChanged += FixupStripeTransactions;
                    _stripeTransactions = newCollection;
                }
                return _stripeTransactions;
            }
            set
            {
                if (!ReferenceEquals(_stripeTransactions, value))
                {
                    var previousValue = _stripeTransactions as FixupCollection<StripeTransactionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStripeTransactions;
                    }
                    _stripeTransactions = value;
                    var newValue = value as FixupCollection<StripeTransactionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStripeTransactions;
                    }
                }
            }
        }
        private ICollection<StripeTransactionPoco> _stripeTransactions;
    
        // TagDefinition
        public ICollection<TagDefinitionPoco> TagDefinitions
        {
            get
            {
                if (_tagDefinitions == null)
                {
                    var newCollection = new FixupCollection<TagDefinitionPoco>();
                    newCollection.CollectionChanged += FixupTagDefinitions;
                    _tagDefinitions = newCollection;
                }
                return _tagDefinitions;
            }
            set
            {
                if (!ReferenceEquals(_tagDefinitions, value))
                {
                    var previousValue = _tagDefinitions as FixupCollection<TagDefinitionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTagDefinitions;
                    }
                    _tagDefinitions = value;
                    var newValue = value as FixupCollection<TagDefinitionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTagDefinitions;
                    }
                }
            }
        }
        private ICollection<TagDefinitionPoco> _tagDefinitions;
    
        // PartnerResource
        public ICollection<PartnerResourcePoco> PartnerResources
        {
            get
            {
                if (_partnerResources == null)
                {
                    var newCollection = new FixupCollection<PartnerResourcePoco>();
                    newCollection.CollectionChanged += FixupPartnerResources;
                    _partnerResources = newCollection;
                }
                return _partnerResources;
            }
            set
            {
                if (!ReferenceEquals(_partnerResources, value))
                {
                    var previousValue = _partnerResources as FixupCollection<PartnerResourcePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPartnerResources;
                    }
                    _partnerResources = value;
                    var newValue = value as FixupCollection<PartnerResourcePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPartnerResources;
                    }
                }
            }
        }
        private ICollection<PartnerResourcePoco> _partnerResources;
    
        // CompanyCategory
        public ICollection<CompanyCategoryPoco> CompanyCategories
        {
            get
            {
                if (_companyCategories == null)
                {
                    var newCollection = new FixupCollection<CompanyCategoryPoco>();
                    newCollection.CollectionChanged += FixupCompanyCategories;
                    _companyCategories = newCollection;
                }
                return _companyCategories;
            }
            set
            {
                if (!ReferenceEquals(_companyCategories, value))
                {
                    var previousValue = _companyCategories as FixupCollection<CompanyCategoryPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyCategories;
                    }
                    _companyCategories = value;
                    var newValue = value as FixupCollection<CompanyCategoryPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyCategories;
                    }
                }
            }
        }
        private ICollection<CompanyCategoryPoco> _companyCategories;
    
        // CompanyRelationshipType
        public ICollection<CompanyRelationshipTypePoco> CompanyRelationshipTypes
        {
            get
            {
                if (_companyRelationshipTypes == null)
                {
                    var newCollection = new FixupCollection<CompanyRelationshipTypePoco>();
                    newCollection.CollectionChanged += FixupCompanyRelationshipTypes;
                    _companyRelationshipTypes = newCollection;
                }
                return _companyRelationshipTypes;
            }
            set
            {
                if (!ReferenceEquals(_companyRelationshipTypes, value))
                {
                    var previousValue = _companyRelationshipTypes as FixupCollection<CompanyRelationshipTypePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyRelationshipTypes;
                    }
                    _companyRelationshipTypes = value;
                    var newValue = value as FixupCollection<CompanyRelationshipTypePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyRelationshipTypes;
                    }
                }
            }
        }
        private ICollection<CompanyRelationshipTypePoco> _companyRelationshipTypes;
    
        // TagCategory
        public ICollection<TagCategoryPoco> TagCategories
        {
            get
            {
                if (_tagCategories == null)
                {
                    var newCollection = new FixupCollection<TagCategoryPoco>();
                    newCollection.CollectionChanged += FixupTagCategories;
                    _tagCategories = newCollection;
                }
                return _tagCategories;
            }
            set
            {
                if (!ReferenceEquals(_tagCategories, value))
                {
                    var previousValue = _tagCategories as FixupCollection<TagCategoryPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTagCategories;
                    }
                    _tagCategories = value;
                    var newValue = value as FixupCollection<TagCategoryPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTagCategories;
                    }
                }
            }
        }
        private ICollection<TagCategoryPoco> _tagCategories;
    
        // Ad
        public ICollection<AdPoco> Ads
        {
            get
            {
                if (_ads == null)
                {
                    var newCollection = new FixupCollection<AdPoco>();
                    newCollection.CollectionChanged += FixupAds;
                    _ads = newCollection;
                }
                return _ads;
            }
            set
            {
                if (!ReferenceEquals(_ads, value))
                {
                    var previousValue = _ads as FixupCollection<AdPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAds;
                    }
                    _ads = value;
                    var newValue = value as FixupCollection<AdPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAds;
                    }
                }
            }
        }
        private ICollection<AdPoco> _ads;
    
        // Hint
        public ICollection<HintPoco> Hints
        {
            get
            {
                if (_hints == null)
                {
                    var newCollection = new FixupCollection<HintPoco>();
                    newCollection.CollectionChanged += FixupHints;
                    _hints = newCollection;
                }
                return _hints;
            }
            set
            {
                if (!ReferenceEquals(_hints, value))
                {
                    var previousValue = _hints as FixupCollection<HintPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupHints;
                    }
                    _hints = value;
                    var newValue = value as FixupCollection<HintPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupHints;
                    }
                }
            }
        }
        private ICollection<HintPoco> _hints;
    
        // Page
        public ICollection<PagePoco> Pages
        {
            get
            {
                if (_pages == null)
                {
                    var newCollection = new FixupCollection<PagePoco>();
                    newCollection.CollectionChanged += FixupPages;
                    _pages = newCollection;
                }
                return _pages;
            }
            set
            {
                if (!ReferenceEquals(_pages, value))
                {
                    var previousValue = _pages as FixupCollection<PagePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPages;
                    }
                    _pages = value;
                    var newValue = value as FixupCollection<PagePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPages;
                    }
                }
            }
        }
        private ICollection<PagePoco> _pages;

        #endregion

        #region Association Fixup
    
        private void FixupNetworkType(NetworkTypePoco previousValue)
        {
            if (previousValue != null && previousValue.Networks.Contains(this))
            {
                previousValue.Networks.Remove(this);
            }
    
            if (NetworkType != null)
            {
                if (!NetworkType.Networks.Contains(this))
                {
                    NetworkType.Networks.Add(this);
                }
                if (NetworkTypeId != NetworkType.Id)
                {
                    NetworkTypeId = NetworkType.Id;
                }
            }
        }
    
        private void FixupAchievements(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AchievementPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AchievementPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupAdCategories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AdCategoryPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AdCategoryPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupBuildings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (BuildingPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BuildingPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupCompanies(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupDeviceConfigurations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (DeviceConfigurationPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DeviceConfigurationPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupDevices(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (DevicePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DevicePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupEventCategories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EventCategoryPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EventCategoryPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupEvents(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EventPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EventPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupExchangeMaterials(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ExchangeMaterialPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExchangeMaterialPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupExchangeSkills(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ExchangeSkillPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExchangeSkillPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupExchangeSurfaces(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ExchangeSurfacePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExchangeSurfacePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupGroups(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupInformationNotes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (InformationNotePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InformationNotePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupLives(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (LivePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LivePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupLostItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (LostItemPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LostItemPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupNumbers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (NumberPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumberPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupPlaces(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PlacePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PlacePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupRegisterRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RegisterRequestPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RegisterRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupRequestsForProposals(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RequestForProposalPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RequestForProposalPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupTimelineItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupTouchCommunications(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TouchCommunicationPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TouchCommunicationPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupCareerOpportunities(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CareerOpportunityPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CareerOpportunityPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupSocialNetworkStates(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SocialNetworkStatePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SocialNetworkStatePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupUsers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupResumes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ResumePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ResumePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupCreateNetworkRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CreateNetworkRequestPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CreateNetworkRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupStatsCounterHits(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StatsCounterHitPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StatsCounterHitPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupCompanyRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyRequestPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupClubs(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ClubPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ClubPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupEmailMessages(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EmailMessagePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EmailMessagePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupUserEmailChangeRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserEmailChangeRequestPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserEmailChangeRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupInboundEmailMessages(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (InboundEmailMessagePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InboundEmailMessagePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupApplyRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ApplyRequestPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ApplyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupSubscriptionTemplates(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SubscriptionTemplatePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SubscriptionTemplatePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupSubscriptions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SubscriptionPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SubscriptionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupStripeTransactions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StripeTransactionPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StripeTransactionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupTagDefinitions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TagDefinitionPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TagDefinitionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupPartnerResources(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PartnerResourcePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PartnerResourcePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupCompanyCategories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyCategoryPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyCategoryPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupCompanyRelationshipTypes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyRelationshipTypePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyRelationshipTypePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupTagCategories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TagCategoryPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TagCategoryPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupAds(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AdPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AdPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupHints(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (HintPoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (HintPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }
    
        private void FixupPages(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PagePoco item in e.NewItems)
                {
                    item.Network = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PagePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Network, this))
                    {
                        item.Network = null;
                    }
                }
            }
        }

        #endregion

    }
}
