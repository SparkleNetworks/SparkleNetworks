//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Sparkle.Entities.Networks.Neutral
{
    public partial class TeamPoco
    {
        #region Primitive Properties
    
        public int Id
        {
            get;
            set;
        }
    
        public int CompanyId
        {
            get { return _companyId; }
            set
            {
                if (this._companyId != value)
                {
                    if (this.Company != null && this.Company.ID != value)
                    {
                        this.Company = null;
                    }
                    this._companyId = value;
                }
            }
        }
        private int _companyId;
    
        public string Name
        {
            get;
            set;
        }
    
        public string Description
        {
            get;
            set;
        }
    
        public System.DateTime Date
        {
            get;
            set;
        }
    
        public int OwnerType
        {
            get;
            set;
        }
    
        public int OwnerValue
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual CompanyPoco Company
        {
            get { return _company; }
            set
            {
                if (!ReferenceEquals(_company, value))
                {
                    var previousValue = _company;
                    _company = value;
                    FixupCompany(previousValue);
                }
            }
        }
        private CompanyPoco _company;
    
        // TeamMembers
        public ICollection<TeamMemberPoco> TeamMembers
        {
            get
            {
                if (_teamMembers == null)
                {
                    var newCollection = new FixupCollection<TeamMemberPoco>();
                    newCollection.CollectionChanged += FixupTeamMembers;
                    _teamMembers = newCollection;
                }
                return _teamMembers;
            }
            set
            {
                if (!ReferenceEquals(_teamMembers, value))
                {
                    var previousValue = _teamMembers as FixupCollection<TeamMemberPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTeamMembers;
                    }
                    _teamMembers = value;
                    var newValue = value as FixupCollection<TeamMemberPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTeamMembers;
                    }
                }
            }
        }
        private ICollection<TeamMemberPoco> _teamMembers;
    
        // TimelineItems
        public ICollection<TimelineItemPoco> TimelineItems
        {
            get
            {
                if (_timelineItems == null)
                {
                    var newCollection = new FixupCollection<TimelineItemPoco>();
                    newCollection.CollectionChanged += FixupTimelineItems;
                    _timelineItems = newCollection;
                }
                return _timelineItems;
            }
            set
            {
                if (!ReferenceEquals(_timelineItems, value))
                {
                    var previousValue = _timelineItems as FixupCollection<TimelineItemPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTimelineItems;
                    }
                    _timelineItems = value;
                    var newValue = value as FixupCollection<TimelineItemPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTimelineItems;
                    }
                }
            }
        }
        private ICollection<TimelineItemPoco> _timelineItems;
    
        // Event
        public ICollection<EventPoco> Events
        {
            get
            {
                if (_events == null)
                {
                    var newCollection = new FixupCollection<EventPoco>();
                    newCollection.CollectionChanged += FixupEvents;
                    _events = newCollection;
                }
                return _events;
            }
            set
            {
                if (!ReferenceEquals(_events, value))
                {
                    var previousValue = _events as FixupCollection<EventPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEvents;
                    }
                    _events = value;
                    var newValue = value as FixupCollection<EventPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEvents;
                    }
                }
            }
        }
        private ICollection<EventPoco> _events;

        #endregion

        #region Association Fixup
    
        private void FixupCompany(CompanyPoco previousValue)
        {
            if (previousValue != null && previousValue.Teams.Contains(this))
            {
                previousValue.Teams.Remove(this);
            }
    
            if (Company != null)
            {
                if (!Company.Teams.Contains(this))
                {
                    Company.Teams.Add(this);
                }
                if (CompanyId != Company.ID)
                {
                    CompanyId = Company.ID;
                }
            }
        }
    
        private void FixupTeamMembers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TeamMemberPoco item in e.NewItems)
                {
                    item.Team = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TeamMemberPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Team, this))
                    {
                        item.Team = null;
                    }
                }
            }
        }
    
        private void FixupTimelineItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemPoco item in e.NewItems)
                {
                    item.Team = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Team, this))
                    {
                        item.Team = null;
                    }
                }
            }
        }
    
        private void FixupEvents(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EventPoco item in e.NewItems)
                {
                    item.Team = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EventPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Team, this))
                    {
                        item.Team = null;
                    }
                }
            }
        }

        #endregion

    }
}
