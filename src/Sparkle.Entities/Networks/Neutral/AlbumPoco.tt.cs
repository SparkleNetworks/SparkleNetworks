//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Sparkle.Entities.Networks.Neutral
{
    public partial class AlbumPoco
    {
        #region Primitive Properties
    
        public int Id
        {
            get;
            set;
        }
    
        public string Name
        {
            get;
            set;
        }
    
        public int Visibility
        {
            get;
            set;
        }
    
        public Nullable<int> CompanyId
        {
            get;
            set;
        }
    
        public Nullable<int> EventId
        {
            get;
            set;
        }
    
        public Nullable<int> GroupId
        {
            get;
            set;
        }
    
        public Nullable<int> TeamId
        {
            get;
            set;
        }
    
        public Nullable<int> ProjectId
        {
            get;
            set;
        }
    
        public Nullable<int> PlaceId
        {
            get;
            set;
        }
    
        public int UserId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        // Pictures
        public ICollection<PicturePoco> Pictures
        {
            get
            {
                if (_pictures == null)
                {
                    var newCollection = new FixupCollection<PicturePoco>();
                    newCollection.CollectionChanged += FixupPictures;
                    _pictures = newCollection;
                }
                return _pictures;
            }
            set
            {
                if (!ReferenceEquals(_pictures, value))
                {
                    var previousValue = _pictures as FixupCollection<PicturePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPictures;
                    }
                    _pictures = value;
                    var newValue = value as FixupCollection<PicturePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPictures;
                    }
                }
            }
        }
        private ICollection<PicturePoco> _pictures;

        #endregion

        #region Association Fixup
    
        private void FixupPictures(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PicturePoco item in e.NewItems)
                {
                    item.Album = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PicturePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Album, this))
                    {
                        item.Album = null;
                    }
                }
            }
        }

        #endregion

    }
}
