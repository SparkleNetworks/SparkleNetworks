//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Sparkle.Entities.Networks.Neutral
{
    public partial class ProfileFieldPoco
    {
        #region Primitive Properties
    
        public int Id
        {
            get;
            set;
        }
    
        public string Name
        {
            get;
            set;
        }
    
        public bool ApplyToUsers
        {
            get;
            set;
        }
    
        public bool ApplyToCompanies
        {
            get;
            set;
        }
    
        public string Rules
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        // UserProfileField
        public ICollection<UserProfileFieldPoco> UserProfileFields
        {
            get
            {
                if (_userProfileFields == null)
                {
                    var newCollection = new FixupCollection<UserProfileFieldPoco>();
                    newCollection.CollectionChanged += FixupUserProfileFields;
                    _userProfileFields = newCollection;
                }
                return _userProfileFields;
            }
            set
            {
                if (!ReferenceEquals(_userProfileFields, value))
                {
                    var previousValue = _userProfileFields as FixupCollection<UserProfileFieldPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserProfileFields;
                    }
                    _userProfileFields = value;
                    var newValue = value as FixupCollection<UserProfileFieldPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserProfileFields;
                    }
                }
            }
        }
        private ICollection<UserProfileFieldPoco> _userProfileFields;
    
        // ProfileFieldsAvailiableValue
        public ICollection<ProfileFieldsAvailiableValuePoco> AvailiableValues
        {
            get
            {
                if (_availiableValues == null)
                {
                    var newCollection = new FixupCollection<ProfileFieldsAvailiableValuePoco>();
                    newCollection.CollectionChanged += FixupAvailiableValues;
                    _availiableValues = newCollection;
                }
                return _availiableValues;
            }
            set
            {
                if (!ReferenceEquals(_availiableValues, value))
                {
                    var previousValue = _availiableValues as FixupCollection<ProfileFieldsAvailiableValuePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAvailiableValues;
                    }
                    _availiableValues = value;
                    var newValue = value as FixupCollection<ProfileFieldsAvailiableValuePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAvailiableValues;
                    }
                }
            }
        }
        private ICollection<ProfileFieldsAvailiableValuePoco> _availiableValues;
    
        // CompanyProfileField
        public ICollection<CompanyProfileFieldPoco> CompanyProfileFields
        {
            get
            {
                if (_companyProfileFields == null)
                {
                    var newCollection = new FixupCollection<CompanyProfileFieldPoco>();
                    newCollection.CollectionChanged += FixupCompanyProfileFields;
                    _companyProfileFields = newCollection;
                }
                return _companyProfileFields;
            }
            set
            {
                if (!ReferenceEquals(_companyProfileFields, value))
                {
                    var previousValue = _companyProfileFields as FixupCollection<CompanyProfileFieldPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyProfileFields;
                    }
                    _companyProfileFields = value;
                    var newValue = value as FixupCollection<CompanyProfileFieldPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyProfileFields;
                    }
                }
            }
        }
        private ICollection<CompanyProfileFieldPoco> _companyProfileFields;
    
        // PartnerResourceProfileField
        public ICollection<PartnerResourceProfileFieldPoco> PartnerResourceProfileFields
        {
            get
            {
                if (_partnerResourceProfileFields == null)
                {
                    var newCollection = new FixupCollection<PartnerResourceProfileFieldPoco>();
                    newCollection.CollectionChanged += FixupPartnerResourceProfileFields;
                    _partnerResourceProfileFields = newCollection;
                }
                return _partnerResourceProfileFields;
            }
            set
            {
                if (!ReferenceEquals(_partnerResourceProfileFields, value))
                {
                    var previousValue = _partnerResourceProfileFields as FixupCollection<PartnerResourceProfileFieldPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPartnerResourceProfileFields;
                    }
                    _partnerResourceProfileFields = value;
                    var newValue = value as FixupCollection<PartnerResourceProfileFieldPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPartnerResourceProfileFields;
                    }
                }
            }
        }
        private ICollection<PartnerResourceProfileFieldPoco> _partnerResourceProfileFields;
    
        // PlaceProfileField
        public ICollection<PlaceProfileFieldPoco> PlaceProfileFields
        {
            get
            {
                if (_placeProfileFields == null)
                {
                    var newCollection = new FixupCollection<PlaceProfileFieldPoco>();
                    newCollection.CollectionChanged += FixupPlaceProfileFields;
                    _placeProfileFields = newCollection;
                }
                return _placeProfileFields;
            }
            set
            {
                if (!ReferenceEquals(_placeProfileFields, value))
                {
                    var previousValue = _placeProfileFields as FixupCollection<PlaceProfileFieldPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPlaceProfileFields;
                    }
                    _placeProfileFields = value;
                    var newValue = value as FixupCollection<PlaceProfileFieldPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPlaceProfileFields;
                    }
                }
            }
        }
        private ICollection<PlaceProfileFieldPoco> _placeProfileFields;

        #endregion

        #region Association Fixup
    
        private void FixupUserProfileFields(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserProfileFieldPoco item in e.NewItems)
                {
                    item.ProfileField = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserProfileFieldPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProfileField, this))
                    {
                        item.ProfileField = null;
                    }
                }
            }
        }
    
        private void FixupAvailiableValues(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ProfileFieldsAvailiableValuePoco item in e.NewItems)
                {
                    item.ProfileField = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProfileFieldsAvailiableValuePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProfileField, this))
                    {
                        item.ProfileField = null;
                    }
                }
            }
        }
    
        private void FixupCompanyProfileFields(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyProfileFieldPoco item in e.NewItems)
                {
                    item.ProfileField = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyProfileFieldPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProfileField, this))
                    {
                        item.ProfileField = null;
                    }
                }
            }
        }
    
        private void FixupPartnerResourceProfileFields(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PartnerResourceProfileFieldPoco item in e.NewItems)
                {
                    item.ProfileField = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PartnerResourceProfileFieldPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProfileField, this))
                    {
                        item.ProfileField = null;
                    }
                }
            }
        }
    
        private void FixupPlaceProfileFields(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PlaceProfileFieldPoco item in e.NewItems)
                {
                    item.ProfileField = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PlaceProfileFieldPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProfileField, this))
                    {
                        item.ProfileField = null;
                    }
                }
            }
        }

        #endregion

    }
}
