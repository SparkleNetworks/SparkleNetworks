//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Sparkle.Entities.Networks.Neutral
{
    public partial class UserPoco
    {
        #region Primitive Properties
    
        public int Id
        {
            get;
            set;
        }
    
        public System.Guid UserId
        {
            get { return _userId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._userId != value)
                    {
                        if (this.AspnetUser != null && this.AspnetUser.UserId != value)
                        {
                            this.AspnetUser = null;
                        }
                        this._userId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _userId;
    
        public string Login
        {
            get;
            set;
        }
    
        public string FirstName
        {
            get;
            set;
        }
    
        public string LastName
        {
            get;
            set;
        }
    
        public Nullable<int> Gender
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> Birthday
        {
            get;
            set;
        }
    
        public string Picture
        {
            get;
            set;
        }
    
        public string Email
        {
            get;
            set;
        }
    
        public string PersonalEmail
        {
            get;
            set;
        }
    
        public int CompanyID
        {
            get { return _companyID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._companyID != value)
                    {
                        if (this.Company != null && this.Company.ID != value)
                        {
                            this.Company = null;
                        }
                        this._companyID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _companyID;
    
        public Nullable<int> JobId
        {
            get { return _jobId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._jobId != value)
                    {
                        if (this.Job != null && this.Job.Id != value)
                        {
                            this.Job = null;
                        }
                        this._jobId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _jobId;
    
        public int Score
        {
            get;
            set;
        }
    
        public int InvitationsLeft
        {
            get;
            set;
        }
    
        public Nullable<int> RelationshipId
        {
            get { return _relationshipId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._relationshipId != value)
                    {
                        if (this.Relationship != null && this.Relationship.Id != value)
                        {
                            this.Relationship = null;
                        }
                        this._relationshipId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _relationshipId;
    
        public Nullable<int> ProjectId
        {
            get;
            set;
        }
    
        public Nullable<System.Guid> Superior
        {
            get;
            set;
        }
    
        public Nullable<bool> IsTeamMember
        {
            get;
            set;
        }
    
        public Nullable<bool> AccountClosed
        {
            get;
            set;
        }
    
        public Nullable<byte> AccountRight
        {
            get;
            set;
        }
    
        public int CompanyAccessLevel
        {
            get;
            set;
        }
    
        public int NetworkAccessLevel
        {
            get;
            set;
        }
    
        public int NetworkId
        {
            get { return _networkId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._networkId != value)
                    {
                        if (this.Network != null && this.Network.Id != value)
                        {
                            this.Network = null;
                        }
                        this._networkId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _networkId;
    
        public bool IsEmailConfirmed
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> CreatedDateUtc
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> AccountClosedDateUtc
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> PersonalDataUpdateDateUtc
        {
            get;
            set;
        }
    
        public string Culture
        {
            get;
            set;
        }
    
        public string Timezone
        {
            get;
            set;
        }
    
        public string LinkedInUserId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public ICollection<ActivityPoco> Activities
        {
            get
            {
                if (_activities == null)
                {
                    var newCollection = new FixupCollection<ActivityPoco>();
                    newCollection.CollectionChanged += FixupActivities;
                    _activities = newCollection;
                }
                return _activities;
            }
            set
            {
                if (!ReferenceEquals(_activities, value))
                {
                    var previousValue = _activities as FixupCollection<ActivityPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupActivities;
                    }
                    _activities = value;
                    var newValue = value as FixupCollection<ActivityPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupActivities;
                    }
                }
            }
        }
        private ICollection<ActivityPoco> _activities;
    
        public ICollection<AdPoco> Ads
        {
            get
            {
                if (_ads == null)
                {
                    var newCollection = new FixupCollection<AdPoco>();
                    newCollection.CollectionChanged += FixupAds;
                    _ads = newCollection;
                }
                return _ads;
            }
            set
            {
                if (!ReferenceEquals(_ads, value))
                {
                    var previousValue = _ads as FixupCollection<AdPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAds;
                    }
                    _ads = value;
                    var newValue = value as FixupCollection<AdPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAds;
                    }
                }
            }
        }
        private ICollection<AdPoco> _ads;
    
        public virtual CompanyPoco Company
        {
            get { return _company; }
            set
            {
                if (!ReferenceEquals(_company, value))
                {
                    var previousValue = _company;
                    _company = value;
                    FixupCompany(previousValue);
                }
            }
        }
        private CompanyPoco _company;
    
        public ICollection<CompaniesVisitPoco> CompaniesVisits
        {
            get
            {
                if (_companiesVisits == null)
                {
                    var newCollection = new FixupCollection<CompaniesVisitPoco>();
                    newCollection.CollectionChanged += FixupCompaniesVisits;
                    _companiesVisits = newCollection;
                }
                return _companiesVisits;
            }
            set
            {
                if (!ReferenceEquals(_companiesVisits, value))
                {
                    var previousValue = _companiesVisits as FixupCollection<CompaniesVisitPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompaniesVisits;
                    }
                    _companiesVisits = value;
                    var newValue = value as FixupCollection<CompaniesVisitPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompaniesVisits;
                    }
                }
            }
        }
        private ICollection<CompaniesVisitPoco> _companiesVisits;
    
        public ICollection<CompanyAdminPoco> CompanyAdmins
        {
            get
            {
                if (_companyAdmins == null)
                {
                    var newCollection = new FixupCollection<CompanyAdminPoco>();
                    newCollection.CollectionChanged += FixupCompanyAdmins;
                    _companyAdmins = newCollection;
                }
                return _companyAdmins;
            }
            set
            {
                if (!ReferenceEquals(_companyAdmins, value))
                {
                    var previousValue = _companyAdmins as FixupCollection<CompanyAdminPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyAdmins;
                    }
                    _companyAdmins = value;
                    var newValue = value as FixupCollection<CompanyAdminPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyAdmins;
                    }
                }
            }
        }
        private ICollection<CompanyAdminPoco> _companyAdmins;
    
        public ICollection<CompanyNewPoco> CompanyNews
        {
            get
            {
                if (_companyNews == null)
                {
                    var newCollection = new FixupCollection<CompanyNewPoco>();
                    newCollection.CollectionChanged += FixupCompanyNews;
                    _companyNews = newCollection;
                }
                return _companyNews;
            }
            set
            {
                if (!ReferenceEquals(_companyNews, value))
                {
                    var previousValue = _companyNews as FixupCollection<CompanyNewPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyNews;
                    }
                    _companyNews = value;
                    var newValue = value as FixupCollection<CompanyNewPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyNews;
                    }
                }
            }
        }
        private ICollection<CompanyNewPoco> _companyNews;
    
        public ICollection<ContactPoco> ContactsOf
        {
            get
            {
                if (_contactsOf == null)
                {
                    var newCollection = new FixupCollection<ContactPoco>();
                    newCollection.CollectionChanged += FixupContactsOf;
                    _contactsOf = newCollection;
                }
                return _contactsOf;
            }
            set
            {
                if (!ReferenceEquals(_contactsOf, value))
                {
                    var previousValue = _contactsOf as FixupCollection<ContactPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupContactsOf;
                    }
                    _contactsOf = value;
                    var newValue = value as FixupCollection<ContactPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupContactsOf;
                    }
                }
            }
        }
        private ICollection<ContactPoco> _contactsOf;
    
        public ICollection<ContactPoco> Contacts
        {
            get
            {
                if (_contacts == null)
                {
                    var newCollection = new FixupCollection<ContactPoco>();
                    newCollection.CollectionChanged += FixupContacts;
                    _contacts = newCollection;
                }
                return _contacts;
            }
            set
            {
                if (!ReferenceEquals(_contacts, value))
                {
                    var previousValue = _contacts as FixupCollection<ContactPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupContacts;
                    }
                    _contacts = value;
                    var newValue = value as FixupCollection<ContactPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupContacts;
                    }
                }
            }
        }
        private ICollection<ContactPoco> _contacts;
    
        public ICollection<EventMemberPoco> EventMembers
        {
            get
            {
                if (_eventMembers == null)
                {
                    var newCollection = new FixupCollection<EventMemberPoco>();
                    newCollection.CollectionChanged += FixupEventMembers;
                    _eventMembers = newCollection;
                }
                return _eventMembers;
            }
            set
            {
                if (!ReferenceEquals(_eventMembers, value))
                {
                    var previousValue = _eventMembers as FixupCollection<EventMemberPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEventMembers;
                    }
                    _eventMembers = value;
                    var newValue = value as FixupCollection<EventMemberPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEventMembers;
                    }
                }
            }
        }
        private ICollection<EventMemberPoco> _eventMembers;
    
        public ICollection<EventPoco> Events
        {
            get
            {
                if (_events == null)
                {
                    var newCollection = new FixupCollection<EventPoco>();
                    newCollection.CollectionChanged += FixupEvents;
                    _events = newCollection;
                }
                return _events;
            }
            set
            {
                if (!ReferenceEquals(_events, value))
                {
                    var previousValue = _events as FixupCollection<EventPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEvents;
                    }
                    _events = value;
                    var newValue = value as FixupCollection<EventPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEvents;
                    }
                }
            }
        }
        private ICollection<EventPoco> _events;
    
        public ICollection<ExchangeMaterialPoco> ExchangeMaterials
        {
            get
            {
                if (_exchangeMaterials == null)
                {
                    var newCollection = new FixupCollection<ExchangeMaterialPoco>();
                    newCollection.CollectionChanged += FixupExchangeMaterials;
                    _exchangeMaterials = newCollection;
                }
                return _exchangeMaterials;
            }
            set
            {
                if (!ReferenceEquals(_exchangeMaterials, value))
                {
                    var previousValue = _exchangeMaterials as FixupCollection<ExchangeMaterialPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExchangeMaterials;
                    }
                    _exchangeMaterials = value;
                    var newValue = value as FixupCollection<ExchangeMaterialPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExchangeMaterials;
                    }
                }
            }
        }
        private ICollection<ExchangeMaterialPoco> _exchangeMaterials;
    
        public ICollection<ExchangeSkillPoco> ExchangeSkills
        {
            get
            {
                if (_exchangeSkills == null)
                {
                    var newCollection = new FixupCollection<ExchangeSkillPoco>();
                    newCollection.CollectionChanged += FixupExchangeSkills;
                    _exchangeSkills = newCollection;
                }
                return _exchangeSkills;
            }
            set
            {
                if (!ReferenceEquals(_exchangeSkills, value))
                {
                    var previousValue = _exchangeSkills as FixupCollection<ExchangeSkillPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExchangeSkills;
                    }
                    _exchangeSkills = value;
                    var newValue = value as FixupCollection<ExchangeSkillPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExchangeSkills;
                    }
                }
            }
        }
        private ICollection<ExchangeSkillPoco> _exchangeSkills;
    
        public ICollection<ExchangeSurfacePoco> ExchangeSurfaces
        {
            get
            {
                if (_exchangeSurfaces == null)
                {
                    var newCollection = new FixupCollection<ExchangeSurfacePoco>();
                    newCollection.CollectionChanged += FixupExchangeSurfaces;
                    _exchangeSurfaces = newCollection;
                }
                return _exchangeSurfaces;
            }
            set
            {
                if (!ReferenceEquals(_exchangeSurfaces, value))
                {
                    var previousValue = _exchangeSurfaces as FixupCollection<ExchangeSurfacePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExchangeSurfaces;
                    }
                    _exchangeSurfaces = value;
                    var newValue = value as FixupCollection<ExchangeSurfacePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExchangeSurfaces;
                    }
                }
            }
        }
        private ICollection<ExchangeSurfacePoco> _exchangeSurfaces;
    
        public ICollection<GroupMemberPoco> GroupMembers
        {
            get
            {
                if (_groupMembers == null)
                {
                    var newCollection = new FixupCollection<GroupMemberPoco>();
                    newCollection.CollectionChanged += FixupGroupMembers;
                    _groupMembers = newCollection;
                }
                return _groupMembers;
            }
            set
            {
                if (!ReferenceEquals(_groupMembers, value))
                {
                    var previousValue = _groupMembers as FixupCollection<GroupMemberPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupMembers;
                    }
                    _groupMembers = value;
                    var newValue = value as FixupCollection<GroupMemberPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupMembers;
                    }
                }
            }
        }
        private ICollection<GroupMemberPoco> _groupMembers;
    
        public ICollection<GroupPoco> Groups
        {
            get
            {
                if (_groups == null)
                {
                    var newCollection = new FixupCollection<GroupPoco>();
                    newCollection.CollectionChanged += FixupGroups;
                    _groups = newCollection;
                }
                return _groups;
            }
            set
            {
                if (!ReferenceEquals(_groups, value))
                {
                    var previousValue = _groups as FixupCollection<GroupPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroups;
                    }
                    _groups = value;
                    var newValue = value as FixupCollection<GroupPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroups;
                    }
                }
            }
        }
        private ICollection<GroupPoco> _groups;
    
        public ICollection<InformationNotePoco> InformationNotes
        {
            get
            {
                if (_informationNotes == null)
                {
                    var newCollection = new FixupCollection<InformationNotePoco>();
                    newCollection.CollectionChanged += FixupInformationNotes;
                    _informationNotes = newCollection;
                }
                return _informationNotes;
            }
            set
            {
                if (!ReferenceEquals(_informationNotes, value))
                {
                    var previousValue = _informationNotes as FixupCollection<InformationNotePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupInformationNotes;
                    }
                    _informationNotes = value;
                    var newValue = value as FixupCollection<InformationNotePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupInformationNotes;
                    }
                }
            }
        }
        private ICollection<InformationNotePoco> _informationNotes;
    
        public ICollection<InterestPoco> Interests
        {
            get
            {
                if (_interests == null)
                {
                    var newCollection = new FixupCollection<InterestPoco>();
                    newCollection.CollectionChanged += FixupInterests;
                    _interests = newCollection;
                }
                return _interests;
            }
            set
            {
                if (!ReferenceEquals(_interests, value))
                {
                    var previousValue = _interests as FixupCollection<InterestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupInterests;
                    }
                    _interests = value;
                    var newValue = value as FixupCollection<InterestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupInterests;
                    }
                }
            }
        }
        private ICollection<InterestPoco> _interests;
    
        public ICollection<InvitedPoco> UsersInvited
        {
            get
            {
                if (_usersInvited == null)
                {
                    var newCollection = new FixupCollection<InvitedPoco>();
                    newCollection.CollectionChanged += FixupUsersInvited;
                    _usersInvited = newCollection;
                }
                return _usersInvited;
            }
            set
            {
                if (!ReferenceEquals(_usersInvited, value))
                {
                    var previousValue = _usersInvited as FixupCollection<InvitedPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUsersInvited;
                    }
                    _usersInvited = value;
                    var newValue = value as FixupCollection<InvitedPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUsersInvited;
                    }
                }
            }
        }
        private ICollection<InvitedPoco> _usersInvited;
    
        public ICollection<InvitedPoco> Invitations
        {
            get
            {
                if (_invitations == null)
                {
                    var newCollection = new FixupCollection<InvitedPoco>();
                    newCollection.CollectionChanged += FixupInvitations;
                    _invitations = newCollection;
                }
                return _invitations;
            }
            set
            {
                if (!ReferenceEquals(_invitations, value))
                {
                    var previousValue = _invitations as FixupCollection<InvitedPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupInvitations;
                    }
                    _invitations = value;
                    var newValue = value as FixupCollection<InvitedPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupInvitations;
                    }
                }
            }
        }
        private ICollection<InvitedPoco> _invitations;
    
        public virtual JobPoco Job
        {
            get { return _job; }
            set
            {
                if (!ReferenceEquals(_job, value))
                {
                    var previousValue = _job;
                    _job = value;
                    FixupJob(previousValue);
                }
            }
        }
        private JobPoco _job;
    
        public ICollection<LinkPoco> Links
        {
            get
            {
                if (_links == null)
                {
                    var newCollection = new FixupCollection<LinkPoco>();
                    newCollection.CollectionChanged += FixupLinks;
                    _links = newCollection;
                }
                return _links;
            }
            set
            {
                if (!ReferenceEquals(_links, value))
                {
                    var previousValue = _links as FixupCollection<LinkPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLinks;
                    }
                    _links = value;
                    var newValue = value as FixupCollection<LinkPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLinks;
                    }
                }
            }
        }
        private ICollection<LinkPoco> _links;
    
        public ICollection<ListItemPoco> ListItems
        {
            get
            {
                if (_listItems == null)
                {
                    var newCollection = new FixupCollection<ListItemPoco>();
                    newCollection.CollectionChanged += FixupListItems;
                    _listItems = newCollection;
                }
                return _listItems;
            }
            set
            {
                if (!ReferenceEquals(_listItems, value))
                {
                    var previousValue = _listItems as FixupCollection<ListItemPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupListItems;
                    }
                    _listItems = value;
                    var newValue = value as FixupCollection<ListItemPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupListItems;
                    }
                }
            }
        }
        private ICollection<ListItemPoco> _listItems;
    
        public ICollection<ListPoco> Lists
        {
            get
            {
                if (_lists == null)
                {
                    var newCollection = new FixupCollection<ListPoco>();
                    newCollection.CollectionChanged += FixupLists;
                    _lists = newCollection;
                }
                return _lists;
            }
            set
            {
                if (!ReferenceEquals(_lists, value))
                {
                    var previousValue = _lists as FixupCollection<ListPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLists;
                    }
                    _lists = value;
                    var newValue = value as FixupCollection<ListPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLists;
                    }
                }
            }
        }
        private ICollection<ListPoco> _lists;
    
        public ICollection<LivePoco> Lives
        {
            get
            {
                if (_lives == null)
                {
                    var newCollection = new FixupCollection<LivePoco>();
                    newCollection.CollectionChanged += FixupLives;
                    _lives = newCollection;
                }
                return _lives;
            }
            set
            {
                if (!ReferenceEquals(_lives, value))
                {
                    var previousValue = _lives as FixupCollection<LivePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLives;
                    }
                    _lives = value;
                    var newValue = value as FixupCollection<LivePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLives;
                    }
                }
            }
        }
        private ICollection<LivePoco> _lives;
    
        public ICollection<LostItemPoco> LostItems
        {
            get
            {
                if (_lostItems == null)
                {
                    var newCollection = new FixupCollection<LostItemPoco>();
                    newCollection.CollectionChanged += FixupLostItems;
                    _lostItems = newCollection;
                }
                return _lostItems;
            }
            set
            {
                if (!ReferenceEquals(_lostItems, value))
                {
                    var previousValue = _lostItems as FixupCollection<LostItemPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLostItems;
                    }
                    _lostItems = value;
                    var newValue = value as FixupCollection<LostItemPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLostItems;
                    }
                }
            }
        }
        private ICollection<LostItemPoco> _lostItems;
    
        public ICollection<MessagePoco> MessagesSent
        {
            get
            {
                if (_messagesSent == null)
                {
                    var newCollection = new FixupCollection<MessagePoco>();
                    newCollection.CollectionChanged += FixupMessagesSent;
                    _messagesSent = newCollection;
                }
                return _messagesSent;
            }
            set
            {
                if (!ReferenceEquals(_messagesSent, value))
                {
                    var previousValue = _messagesSent as FixupCollection<MessagePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMessagesSent;
                    }
                    _messagesSent = value;
                    var newValue = value as FixupCollection<MessagePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMessagesSent;
                    }
                }
            }
        }
        private ICollection<MessagePoco> _messagesSent;
    
        public ICollection<MessagePoco> MessagesReceived
        {
            get
            {
                if (_messagesReceived == null)
                {
                    var newCollection = new FixupCollection<MessagePoco>();
                    newCollection.CollectionChanged += FixupMessagesReceived;
                    _messagesReceived = newCollection;
                }
                return _messagesReceived;
            }
            set
            {
                if (!ReferenceEquals(_messagesReceived, value))
                {
                    var previousValue = _messagesReceived as FixupCollection<MessagePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMessagesReceived;
                    }
                    _messagesReceived = value;
                    var newValue = value as FixupCollection<MessagePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMessagesReceived;
                    }
                }
            }
        }
        private ICollection<MessagePoco> _messagesReceived;
    
        public ICollection<RecreationPoco> Recreations
        {
            get
            {
                if (_recreations == null)
                {
                    var newCollection = new FixupCollection<RecreationPoco>();
                    newCollection.CollectionChanged += FixupRecreations;
                    _recreations = newCollection;
                }
                return _recreations;
            }
            set
            {
                if (!ReferenceEquals(_recreations, value))
                {
                    var previousValue = _recreations as FixupCollection<RecreationPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRecreations;
                    }
                    _recreations = value;
                    var newValue = value as FixupCollection<RecreationPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRecreations;
                    }
                }
            }
        }
        private ICollection<RecreationPoco> _recreations;
    
        public virtual RelationshipPoco Relationship
        {
            get { return _relationship; }
            set
            {
                if (!ReferenceEquals(_relationship, value))
                {
                    var previousValue = _relationship;
                    _relationship = value;
                    FixupRelationship(previousValue);
                }
            }
        }
        private RelationshipPoco _relationship;
    
        public ICollection<TeamMemberPoco> TeamMembers
        {
            get
            {
                if (_teamMembers == null)
                {
                    var newCollection = new FixupCollection<TeamMemberPoco>();
                    newCollection.CollectionChanged += FixupTeamMembers;
                    _teamMembers = newCollection;
                }
                return _teamMembers;
            }
            set
            {
                if (!ReferenceEquals(_teamMembers, value))
                {
                    var previousValue = _teamMembers as FixupCollection<TeamMemberPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTeamMembers;
                    }
                    _teamMembers = value;
                    var newValue = value as FixupCollection<TeamMemberPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTeamMembers;
                    }
                }
            }
        }
        private ICollection<TeamMemberPoco> _teamMembers;
    
        public ICollection<TimelineItemPoco> TimelineItems
        {
            get
            {
                if (_timelineItems == null)
                {
                    var newCollection = new FixupCollection<TimelineItemPoco>();
                    newCollection.CollectionChanged += FixupTimelineItems;
                    _timelineItems = newCollection;
                }
                return _timelineItems;
            }
            set
            {
                if (!ReferenceEquals(_timelineItems, value))
                {
                    var previousValue = _timelineItems as FixupCollection<TimelineItemPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTimelineItems;
                    }
                    _timelineItems = value;
                    var newValue = value as FixupCollection<TimelineItemPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTimelineItems;
                    }
                }
            }
        }
        private ICollection<TimelineItemPoco> _timelineItems;
    
        public ICollection<TimelineItemPoco> MyTimelineItems
        {
            get
            {
                if (_myTimelineItems == null)
                {
                    var newCollection = new FixupCollection<TimelineItemPoco>();
                    newCollection.CollectionChanged += FixupMyTimelineItems;
                    _myTimelineItems = newCollection;
                }
                return _myTimelineItems;
            }
            set
            {
                if (!ReferenceEquals(_myTimelineItems, value))
                {
                    var previousValue = _myTimelineItems as FixupCollection<TimelineItemPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMyTimelineItems;
                    }
                    _myTimelineItems = value;
                    var newValue = value as FixupCollection<TimelineItemPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMyTimelineItems;
                    }
                }
            }
        }
        private ICollection<TimelineItemPoco> _myTimelineItems;
    
        public ICollection<UserInterestPoco> UserInterests
        {
            get
            {
                if (_userInterests == null)
                {
                    var newCollection = new FixupCollection<UserInterestPoco>();
                    newCollection.CollectionChanged += FixupUserInterests;
                    _userInterests = newCollection;
                }
                return _userInterests;
            }
            set
            {
                if (!ReferenceEquals(_userInterests, value))
                {
                    var previousValue = _userInterests as FixupCollection<UserInterestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserInterests;
                    }
                    _userInterests = value;
                    var newValue = value as FixupCollection<UserInterestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserInterests;
                    }
                }
            }
        }
        private ICollection<UserInterestPoco> _userInterests;
    
        public ICollection<UserRecreationPoco> UserRecreations
        {
            get
            {
                if (_userRecreations == null)
                {
                    var newCollection = new FixupCollection<UserRecreationPoco>();
                    newCollection.CollectionChanged += FixupUserRecreations;
                    _userRecreations = newCollection;
                }
                return _userRecreations;
            }
            set
            {
                if (!ReferenceEquals(_userRecreations, value))
                {
                    var previousValue = _userRecreations as FixupCollection<UserRecreationPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserRecreations;
                    }
                    _userRecreations = value;
                    var newValue = value as FixupCollection<UserRecreationPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserRecreations;
                    }
                }
            }
        }
        private ICollection<UserRecreationPoco> _userRecreations;
    
        public ICollection<UserSkillPoco> UserSkills
        {
            get
            {
                if (_userSkills == null)
                {
                    var newCollection = new FixupCollection<UserSkillPoco>();
                    newCollection.CollectionChanged += FixupUserSkills;
                    _userSkills = newCollection;
                }
                return _userSkills;
            }
            set
            {
                if (!ReferenceEquals(_userSkills, value))
                {
                    var previousValue = _userSkills as FixupCollection<UserSkillPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserSkills;
                    }
                    _userSkills = value;
                    var newValue = value as FixupCollection<UserSkillPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserSkills;
                    }
                }
            }
        }
        private ICollection<UserSkillPoco> _userSkills;
    
        public ICollection<UsersVisitPoco> OtherUsersVisits
        {
            get
            {
                if (_otherUsersVisits == null)
                {
                    var newCollection = new FixupCollection<UsersVisitPoco>();
                    newCollection.CollectionChanged += FixupOtherUsersVisits;
                    _otherUsersVisits = newCollection;
                }
                return _otherUsersVisits;
            }
            set
            {
                if (!ReferenceEquals(_otherUsersVisits, value))
                {
                    var previousValue = _otherUsersVisits as FixupCollection<UsersVisitPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupOtherUsersVisits;
                    }
                    _otherUsersVisits = value;
                    var newValue = value as FixupCollection<UsersVisitPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupOtherUsersVisits;
                    }
                }
            }
        }
        private ICollection<UsersVisitPoco> _otherUsersVisits;
    
        public ICollection<UsersVisitPoco> MyUsersVisits
        {
            get
            {
                if (_myUsersVisits == null)
                {
                    var newCollection = new FixupCollection<UsersVisitPoco>();
                    newCollection.CollectionChanged += FixupMyUsersVisits;
                    _myUsersVisits = newCollection;
                }
                return _myUsersVisits;
            }
            set
            {
                if (!ReferenceEquals(_myUsersVisits, value))
                {
                    var previousValue = _myUsersVisits as FixupCollection<UsersVisitPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMyUsersVisits;
                    }
                    _myUsersVisits = value;
                    var newValue = value as FixupCollection<UsersVisitPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMyUsersVisits;
                    }
                }
            }
        }
        private ICollection<UsersVisitPoco> _myUsersVisits;
    
        public ICollection<SeekFriendPoco> SeekFriends
        {
            get
            {
                if (_seekFriends == null)
                {
                    var newCollection = new FixupCollection<SeekFriendPoco>();
                    newCollection.CollectionChanged += FixupSeekFriends;
                    _seekFriends = newCollection;
                }
                return _seekFriends;
            }
            set
            {
                if (!ReferenceEquals(_seekFriends, value))
                {
                    var previousValue = _seekFriends as FixupCollection<SeekFriendPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSeekFriends;
                    }
                    _seekFriends = value;
                    var newValue = value as FixupCollection<SeekFriendPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSeekFriends;
                    }
                }
            }
        }
        private ICollection<SeekFriendPoco> _seekFriends;
    
        public ICollection<SeekFriendPoco> SeekFriends1
        {
            get
            {
                if (_seekFriends1 == null)
                {
                    var newCollection = new FixupCollection<SeekFriendPoco>();
                    newCollection.CollectionChanged += FixupSeekFriends1;
                    _seekFriends1 = newCollection;
                }
                return _seekFriends1;
            }
            set
            {
                if (!ReferenceEquals(_seekFriends1, value))
                {
                    var previousValue = _seekFriends1 as FixupCollection<SeekFriendPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSeekFriends1;
                    }
                    _seekFriends1 = value;
                    var newValue = value as FixupCollection<SeekFriendPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSeekFriends1;
                    }
                }
            }
        }
        private ICollection<SeekFriendPoco> _seekFriends1;
    
        public ICollection<ProjectMemberPoco> ProjectMembers
        {
            get
            {
                if (_projectMembers == null)
                {
                    var newCollection = new FixupCollection<ProjectMemberPoco>();
                    newCollection.CollectionChanged += FixupProjectMembers;
                    _projectMembers = newCollection;
                }
                return _projectMembers;
            }
            set
            {
                if (!ReferenceEquals(_projectMembers, value))
                {
                    var previousValue = _projectMembers as FixupCollection<ProjectMemberPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupProjectMembers;
                    }
                    _projectMembers = value;
                    var newValue = value as FixupCollection<ProjectMemberPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupProjectMembers;
                    }
                }
            }
        }
        private ICollection<ProjectMemberPoco> _projectMembers;
    
        public virtual AspnetUsersPoco AspnetUser
        {
            get { return _aspnetUser; }
            set
            {
                if (!ReferenceEquals(_aspnetUser, value))
                {
                    var previousValue = _aspnetUser;
                    _aspnetUser = value;
                    FixupAspnetUser(previousValue);
                }
            }
        }
        private AspnetUsersPoco _aspnetUser;
    
        public ICollection<TimelineItemCommentPoco> PostedTimelineItemComments
        {
            get
            {
                if (_postedTimelineItemComments == null)
                {
                    var newCollection = new FixupCollection<TimelineItemCommentPoco>();
                    newCollection.CollectionChanged += FixupPostedTimelineItemComments;
                    _postedTimelineItemComments = newCollection;
                }
                return _postedTimelineItemComments;
            }
            set
            {
                if (!ReferenceEquals(_postedTimelineItemComments, value))
                {
                    var previousValue = _postedTimelineItemComments as FixupCollection<TimelineItemCommentPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPostedTimelineItemComments;
                    }
                    _postedTimelineItemComments = value;
                    var newValue = value as FixupCollection<TimelineItemCommentPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPostedTimelineItemComments;
                    }
                }
            }
        }
        private ICollection<TimelineItemCommentPoco> _postedTimelineItemComments;
    
        public virtual NotificationPoco Notification
        {
            get { return _notification; }
            set
            {
                if (!ReferenceEquals(_notification, value))
                {
                    var previousValue = _notification;
                    _notification = value;
                    FixupNotification(previousValue);
                }
            }
        }
        private NotificationPoco _notification;
    
        public ICollection<AchievementsUserPoco> Achievements
        {
            get
            {
                if (_achievements == null)
                {
                    var newCollection = new FixupCollection<AchievementsUserPoco>();
                    newCollection.CollectionChanged += FixupAchievements;
                    _achievements = newCollection;
                }
                return _achievements;
            }
            set
            {
                if (!ReferenceEquals(_achievements, value))
                {
                    var previousValue = _achievements as FixupCollection<AchievementsUserPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAchievements;
                    }
                    _achievements = value;
                    var newValue = value as FixupCollection<AchievementsUserPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAchievements;
                    }
                }
            }
        }
        private ICollection<AchievementsUserPoco> _achievements;
    
        public ICollection<RegisterRequestPoco> RepliedToRegisterRequests
        {
            get
            {
                if (_repliedToRegisterRequests == null)
                {
                    var newCollection = new FixupCollection<RegisterRequestPoco>();
                    newCollection.CollectionChanged += FixupRepliedToRegisterRequests;
                    _repliedToRegisterRequests = newCollection;
                }
                return _repliedToRegisterRequests;
            }
            set
            {
                if (!ReferenceEquals(_repliedToRegisterRequests, value))
                {
                    var previousValue = _repliedToRegisterRequests as FixupCollection<RegisterRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRepliedToRegisterRequests;
                    }
                    _repliedToRegisterRequests = value;
                    var newValue = value as FixupCollection<RegisterRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRepliedToRegisterRequests;
                    }
                }
            }
        }
        private ICollection<RegisterRequestPoco> _repliedToRegisterRequests;
    
        public ICollection<RegisterRequestPoco> ValidatedRegisterRequests
        {
            get
            {
                if (_validatedRegisterRequests == null)
                {
                    var newCollection = new FixupCollection<RegisterRequestPoco>();
                    newCollection.CollectionChanged += FixupValidatedRegisterRequests;
                    _validatedRegisterRequests = newCollection;
                }
                return _validatedRegisterRequests;
            }
            set
            {
                if (!ReferenceEquals(_validatedRegisterRequests, value))
                {
                    var previousValue = _validatedRegisterRequests as FixupCollection<RegisterRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupValidatedRegisterRequests;
                    }
                    _validatedRegisterRequests = value;
                    var newValue = value as FixupCollection<RegisterRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupValidatedRegisterRequests;
                    }
                }
            }
        }
        private ICollection<RegisterRequestPoco> _validatedRegisterRequests;
    
        public ICollection<CareerOpportunityPoco> CareerOpportunities
        {
            get
            {
                if (_careerOpportunities == null)
                {
                    var newCollection = new FixupCollection<CareerOpportunityPoco>();
                    newCollection.CollectionChanged += FixupCareerOpportunities;
                    _careerOpportunities = newCollection;
                }
                return _careerOpportunities;
            }
            set
            {
                if (!ReferenceEquals(_careerOpportunities, value))
                {
                    var previousValue = _careerOpportunities as FixupCollection<CareerOpportunityPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCareerOpportunities;
                    }
                    _careerOpportunities = value;
                    var newValue = value as FixupCollection<CareerOpportunityPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCareerOpportunities;
                    }
                }
            }
        }
        private ICollection<CareerOpportunityPoco> _careerOpportunities;
    
        public ICollection<SocialNetworkConnectionPoco> SocialNetworkConnections
        {
            get
            {
                if (_socialNetworkConnections == null)
                {
                    var newCollection = new FixupCollection<SocialNetworkConnectionPoco>();
                    newCollection.CollectionChanged += FixupSocialNetworkConnections;
                    _socialNetworkConnections = newCollection;
                }
                return _socialNetworkConnections;
            }
            set
            {
                if (!ReferenceEquals(_socialNetworkConnections, value))
                {
                    var previousValue = _socialNetworkConnections as FixupCollection<SocialNetworkConnectionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSocialNetworkConnections;
                    }
                    _socialNetworkConnections = value;
                    var newValue = value as FixupCollection<SocialNetworkConnectionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSocialNetworkConnections;
                    }
                }
            }
        }
        private ICollection<SocialNetworkConnectionPoco> _socialNetworkConnections;
    
        public ICollection<SocialNetworkUserSubscriptionPoco> SocialNetworkUserSubscriptions
        {
            get
            {
                if (_socialNetworkUserSubscriptions == null)
                {
                    var newCollection = new FixupCollection<SocialNetworkUserSubscriptionPoco>();
                    newCollection.CollectionChanged += FixupSocialNetworkUserSubscriptions;
                    _socialNetworkUserSubscriptions = newCollection;
                }
                return _socialNetworkUserSubscriptions;
            }
            set
            {
                if (!ReferenceEquals(_socialNetworkUserSubscriptions, value))
                {
                    var previousValue = _socialNetworkUserSubscriptions as FixupCollection<SocialNetworkUserSubscriptionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSocialNetworkUserSubscriptions;
                    }
                    _socialNetworkUserSubscriptions = value;
                    var newValue = value as FixupCollection<SocialNetworkUserSubscriptionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSocialNetworkUserSubscriptions;
                    }
                }
            }
        }
        private ICollection<SocialNetworkUserSubscriptionPoco> _socialNetworkUserSubscriptions;
    
        public virtual NetworkPoco Network
        {
            get { return _network; }
            set
            {
                if (!ReferenceEquals(_network, value))
                {
                    var previousValue = _network;
                    _network = value;
                    FixupNetwork(previousValue);
                }
            }
        }
        private NetworkPoco _network;
    
        public ICollection<CompanyContactPoco> CompanyContacts
        {
            get
            {
                if (_companyContacts == null)
                {
                    var newCollection = new FixupCollection<CompanyContactPoco>();
                    newCollection.CollectionChanged += FixupCompanyContacts;
                    _companyContacts = newCollection;
                }
                return _companyContacts;
            }
            set
            {
                if (!ReferenceEquals(_companyContacts, value))
                {
                    var previousValue = _companyContacts as FixupCollection<CompanyContactPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyContacts;
                    }
                    _companyContacts = value;
                    var newValue = value as FixupCollection<CompanyContactPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyContacts;
                    }
                }
            }
        }
        private ICollection<CompanyContactPoco> _companyContacts;
    
        public ICollection<StatsCounterHitPoco> StatsCounterHits
        {
            get
            {
                if (_statsCounterHits == null)
                {
                    var newCollection = new FixupCollection<StatsCounterHitPoco>();
                    newCollection.CollectionChanged += FixupStatsCounterHits;
                    _statsCounterHits = newCollection;
                }
                return _statsCounterHits;
            }
            set
            {
                if (!ReferenceEquals(_statsCounterHits, value))
                {
                    var previousValue = _statsCounterHits as FixupCollection<StatsCounterHitPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStatsCounterHits;
                    }
                    _statsCounterHits = value;
                    var newValue = value as FixupCollection<StatsCounterHitPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStatsCounterHits;
                    }
                }
            }
        }
        private ICollection<StatsCounterHitPoco> _statsCounterHits;
    
        public ICollection<CompanyRequestMessagePoco> CompanyRequestMessages
        {
            get
            {
                if (_companyRequestMessages == null)
                {
                    var newCollection = new FixupCollection<CompanyRequestMessagePoco>();
                    newCollection.CollectionChanged += FixupCompanyRequestMessages;
                    _companyRequestMessages = newCollection;
                }
                return _companyRequestMessages;
            }
            set
            {
                if (!ReferenceEquals(_companyRequestMessages, value))
                {
                    var previousValue = _companyRequestMessages as FixupCollection<CompanyRequestMessagePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyRequestMessages;
                    }
                    _companyRequestMessages = value;
                    var newValue = value as FixupCollection<CompanyRequestMessagePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyRequestMessages;
                    }
                }
            }
        }
        private ICollection<CompanyRequestMessagePoco> _companyRequestMessages;
    
        public ICollection<CompanyRequestPoco> ApprovedCompanyRequests
        {
            get
            {
                if (_approvedCompanyRequests == null)
                {
                    var newCollection = new FixupCollection<CompanyRequestPoco>();
                    newCollection.CollectionChanged += FixupApprovedCompanyRequests;
                    _approvedCompanyRequests = newCollection;
                }
                return _approvedCompanyRequests;
            }
            set
            {
                if (!ReferenceEquals(_approvedCompanyRequests, value))
                {
                    var previousValue = _approvedCompanyRequests as FixupCollection<CompanyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApprovedCompanyRequests;
                    }
                    _approvedCompanyRequests = value;
                    var newValue = value as FixupCollection<CompanyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApprovedCompanyRequests;
                    }
                }
            }
        }
        private ICollection<CompanyRequestPoco> _approvedCompanyRequests;
    
        public ICollection<CompanyRequestPoco> BlockedCompanyRequests
        {
            get
            {
                if (_blockedCompanyRequests == null)
                {
                    var newCollection = new FixupCollection<CompanyRequestPoco>();
                    newCollection.CollectionChanged += FixupBlockedCompanyRequests;
                    _blockedCompanyRequests = newCollection;
                }
                return _blockedCompanyRequests;
            }
            set
            {
                if (!ReferenceEquals(_blockedCompanyRequests, value))
                {
                    var previousValue = _blockedCompanyRequests as FixupCollection<CompanyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupBlockedCompanyRequests;
                    }
                    _blockedCompanyRequests = value;
                    var newValue = value as FixupCollection<CompanyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupBlockedCompanyRequests;
                    }
                }
            }
        }
        private ICollection<CompanyRequestPoco> _blockedCompanyRequests;
    
        public ICollection<ClubPoco> CreatedClubs
        {
            get
            {
                if (_createdClubs == null)
                {
                    var newCollection = new FixupCollection<ClubPoco>();
                    newCollection.CollectionChanged += FixupCreatedClubs;
                    _createdClubs = newCollection;
                }
                return _createdClubs;
            }
            set
            {
                if (!ReferenceEquals(_createdClubs, value))
                {
                    var previousValue = _createdClubs as FixupCollection<ClubPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCreatedClubs;
                    }
                    _createdClubs = value;
                    var newValue = value as FixupCollection<ClubPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCreatedClubs;
                    }
                }
            }
        }
        private ICollection<ClubPoco> _createdClubs;
    
        public ICollection<UserActionKeyPoco> UserActionKeys
        {
            get
            {
                if (_userActionKeys == null)
                {
                    var newCollection = new FixupCollection<UserActionKeyPoco>();
                    newCollection.CollectionChanged += FixupUserActionKeys;
                    _userActionKeys = newCollection;
                }
                return _userActionKeys;
            }
            set
            {
                if (!ReferenceEquals(_userActionKeys, value))
                {
                    var previousValue = _userActionKeys as FixupCollection<UserActionKeyPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserActionKeys;
                    }
                    _userActionKeys = value;
                    var newValue = value as FixupCollection<UserActionKeyPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserActionKeys;
                    }
                }
            }
        }
        private ICollection<UserActionKeyPoco> _userActionKeys;
    
        public ICollection<TimelineItemSkillPoco> TimelineItemSkillsCreated
        {
            get
            {
                if (_timelineItemSkillsCreated == null)
                {
                    var newCollection = new FixupCollection<TimelineItemSkillPoco>();
                    newCollection.CollectionChanged += FixupTimelineItemSkillsCreated;
                    _timelineItemSkillsCreated = newCollection;
                }
                return _timelineItemSkillsCreated;
            }
            set
            {
                if (!ReferenceEquals(_timelineItemSkillsCreated, value))
                {
                    var previousValue = _timelineItemSkillsCreated as FixupCollection<TimelineItemSkillPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTimelineItemSkillsCreated;
                    }
                    _timelineItemSkillsCreated = value;
                    var newValue = value as FixupCollection<TimelineItemSkillPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTimelineItemSkillsCreated;
                    }
                }
            }
        }
        private ICollection<TimelineItemSkillPoco> _timelineItemSkillsCreated;
    
        public ICollection<TimelineItemSkillPoco> TimelineItemSkillsDeleted
        {
            get
            {
                if (_timelineItemSkillsDeleted == null)
                {
                    var newCollection = new FixupCollection<TimelineItemSkillPoco>();
                    newCollection.CollectionChanged += FixupTimelineItemSkillsDeleted;
                    _timelineItemSkillsDeleted = newCollection;
                }
                return _timelineItemSkillsDeleted;
            }
            set
            {
                if (!ReferenceEquals(_timelineItemSkillsDeleted, value))
                {
                    var previousValue = _timelineItemSkillsDeleted as FixupCollection<TimelineItemSkillPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTimelineItemSkillsDeleted;
                    }
                    _timelineItemSkillsDeleted = value;
                    var newValue = value as FixupCollection<TimelineItemSkillPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTimelineItemSkillsDeleted;
                    }
                }
            }
        }
        private ICollection<TimelineItemSkillPoco> _timelineItemSkillsDeleted;
    
        public ICollection<TimelineItemPoco> DeletedTimelineItems
        {
            get
            {
                if (_deletedTimelineItems == null)
                {
                    var newCollection = new FixupCollection<TimelineItemPoco>();
                    newCollection.CollectionChanged += FixupDeletedTimelineItems;
                    _deletedTimelineItems = newCollection;
                }
                return _deletedTimelineItems;
            }
            set
            {
                if (!ReferenceEquals(_deletedTimelineItems, value))
                {
                    var previousValue = _deletedTimelineItems as FixupCollection<TimelineItemPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDeletedTimelineItems;
                    }
                    _deletedTimelineItems = value;
                    var newValue = value as FixupCollection<TimelineItemPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDeletedTimelineItems;
                    }
                }
            }
        }
        private ICollection<TimelineItemPoco> _deletedTimelineItems;
    
        public ICollection<GroupSkillPoco> GroupSkillsCreated
        {
            get
            {
                if (_groupSkillsCreated == null)
                {
                    var newCollection = new FixupCollection<GroupSkillPoco>();
                    newCollection.CollectionChanged += FixupGroupSkillsCreated;
                    _groupSkillsCreated = newCollection;
                }
                return _groupSkillsCreated;
            }
            set
            {
                if (!ReferenceEquals(_groupSkillsCreated, value))
                {
                    var previousValue = _groupSkillsCreated as FixupCollection<GroupSkillPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupSkillsCreated;
                    }
                    _groupSkillsCreated = value;
                    var newValue = value as FixupCollection<GroupSkillPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupSkillsCreated;
                    }
                }
            }
        }
        private ICollection<GroupSkillPoco> _groupSkillsCreated;
    
        public ICollection<GroupSkillPoco> GroupSkillsDeleted
        {
            get
            {
                if (_groupSkillsDeleted == null)
                {
                    var newCollection = new FixupCollection<GroupSkillPoco>();
                    newCollection.CollectionChanged += FixupGroupSkillsDeleted;
                    _groupSkillsDeleted = newCollection;
                }
                return _groupSkillsDeleted;
            }
            set
            {
                if (!ReferenceEquals(_groupSkillsDeleted, value))
                {
                    var previousValue = _groupSkillsDeleted as FixupCollection<GroupSkillPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupSkillsDeleted;
                    }
                    _groupSkillsDeleted = value;
                    var newValue = value as FixupCollection<GroupSkillPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupSkillsDeleted;
                    }
                }
            }
        }
        private ICollection<GroupSkillPoco> _groupSkillsDeleted;
    
        public ICollection<GroupInterestPoco> GroupInterestsCreatedBy
        {
            get
            {
                if (_groupInterestsCreatedBy == null)
                {
                    var newCollection = new FixupCollection<GroupInterestPoco>();
                    newCollection.CollectionChanged += FixupGroupInterestsCreatedBy;
                    _groupInterestsCreatedBy = newCollection;
                }
                return _groupInterestsCreatedBy;
            }
            set
            {
                if (!ReferenceEquals(_groupInterestsCreatedBy, value))
                {
                    var previousValue = _groupInterestsCreatedBy as FixupCollection<GroupInterestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupInterestsCreatedBy;
                    }
                    _groupInterestsCreatedBy = value;
                    var newValue = value as FixupCollection<GroupInterestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupInterestsCreatedBy;
                    }
                }
            }
        }
        private ICollection<GroupInterestPoco> _groupInterestsCreatedBy;
    
        public ICollection<GroupInterestPoco> GroupInterestsDeletedBy
        {
            get
            {
                if (_groupInterestsDeletedBy == null)
                {
                    var newCollection = new FixupCollection<GroupInterestPoco>();
                    newCollection.CollectionChanged += FixupGroupInterestsDeletedBy;
                    _groupInterestsDeletedBy = newCollection;
                }
                return _groupInterestsDeletedBy;
            }
            set
            {
                if (!ReferenceEquals(_groupInterestsDeletedBy, value))
                {
                    var previousValue = _groupInterestsDeletedBy as FixupCollection<GroupInterestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupInterestsDeletedBy;
                    }
                    _groupInterestsDeletedBy = value;
                    var newValue = value as FixupCollection<GroupInterestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupInterestsDeletedBy;
                    }
                }
            }
        }
        private ICollection<GroupInterestPoco> _groupInterestsDeletedBy;
    
        public ICollection<GroupRecreationPoco> GroupRecreationsCreatedBy
        {
            get
            {
                if (_groupRecreationsCreatedBy == null)
                {
                    var newCollection = new FixupCollection<GroupRecreationPoco>();
                    newCollection.CollectionChanged += FixupGroupRecreationsCreatedBy;
                    _groupRecreationsCreatedBy = newCollection;
                }
                return _groupRecreationsCreatedBy;
            }
            set
            {
                if (!ReferenceEquals(_groupRecreationsCreatedBy, value))
                {
                    var previousValue = _groupRecreationsCreatedBy as FixupCollection<GroupRecreationPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupRecreationsCreatedBy;
                    }
                    _groupRecreationsCreatedBy = value;
                    var newValue = value as FixupCollection<GroupRecreationPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupRecreationsCreatedBy;
                    }
                }
            }
        }
        private ICollection<GroupRecreationPoco> _groupRecreationsCreatedBy;
    
        public ICollection<GroupRecreationPoco> GroupRecreationsDeletedBy
        {
            get
            {
                if (_groupRecreationsDeletedBy == null)
                {
                    var newCollection = new FixupCollection<GroupRecreationPoco>();
                    newCollection.CollectionChanged += FixupGroupRecreationsDeletedBy;
                    _groupRecreationsDeletedBy = newCollection;
                }
                return _groupRecreationsDeletedBy;
            }
            set
            {
                if (!ReferenceEquals(_groupRecreationsDeletedBy, value))
                {
                    var previousValue = _groupRecreationsDeletedBy as FixupCollection<GroupRecreationPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupRecreationsDeletedBy;
                    }
                    _groupRecreationsDeletedBy = value;
                    var newValue = value as FixupCollection<GroupRecreationPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupRecreationsDeletedBy;
                    }
                }
            }
        }
        private ICollection<GroupRecreationPoco> _groupRecreationsDeletedBy;
    
        public ICollection<EmailMessagePoco> EmailMessages
        {
            get
            {
                if (_emailMessages == null)
                {
                    var newCollection = new FixupCollection<EmailMessagePoco>();
                    newCollection.CollectionChanged += FixupEmailMessages;
                    _emailMessages = newCollection;
                }
                return _emailMessages;
            }
            set
            {
                if (!ReferenceEquals(_emailMessages, value))
                {
                    var previousValue = _emailMessages as FixupCollection<EmailMessagePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEmailMessages;
                    }
                    _emailMessages = value;
                    var newValue = value as FixupCollection<EmailMessagePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEmailMessages;
                    }
                }
            }
        }
        private ICollection<EmailMessagePoco> _emailMessages;
    
        public ICollection<UserEmailChangeRequestPoco> UserEmailChangeRequests
        {
            get
            {
                if (_userEmailChangeRequests == null)
                {
                    var newCollection = new FixupCollection<UserEmailChangeRequestPoco>();
                    newCollection.CollectionChanged += FixupUserEmailChangeRequests;
                    _userEmailChangeRequests = newCollection;
                }
                return _userEmailChangeRequests;
            }
            set
            {
                if (!ReferenceEquals(_userEmailChangeRequests, value))
                {
                    var previousValue = _userEmailChangeRequests as FixupCollection<UserEmailChangeRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserEmailChangeRequests;
                    }
                    _userEmailChangeRequests = value;
                    var newValue = value as FixupCollection<UserEmailChangeRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserEmailChangeRequests;
                    }
                }
            }
        }
        private ICollection<UserEmailChangeRequestPoco> _userEmailChangeRequests;
    
        public ICollection<UserEmailChangeRequestPoco> UserEmailChangeRequests1
        {
            get
            {
                if (_userEmailChangeRequests1 == null)
                {
                    var newCollection = new FixupCollection<UserEmailChangeRequestPoco>();
                    newCollection.CollectionChanged += FixupUserEmailChangeRequests1;
                    _userEmailChangeRequests1 = newCollection;
                }
                return _userEmailChangeRequests1;
            }
            set
            {
                if (!ReferenceEquals(_userEmailChangeRequests1, value))
                {
                    var previousValue = _userEmailChangeRequests1 as FixupCollection<UserEmailChangeRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserEmailChangeRequests1;
                    }
                    _userEmailChangeRequests1 = value;
                    var newValue = value as FixupCollection<UserEmailChangeRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserEmailChangeRequests1;
                    }
                }
            }
        }
        private ICollection<UserEmailChangeRequestPoco> _userEmailChangeRequests1;
    
        public ICollection<TimelineItemLikePoco> TimelineItemLikes
        {
            get
            {
                if (_timelineItemLikes == null)
                {
                    var newCollection = new FixupCollection<TimelineItemLikePoco>();
                    newCollection.CollectionChanged += FixupTimelineItemLikes;
                    _timelineItemLikes = newCollection;
                }
                return _timelineItemLikes;
            }
            set
            {
                if (!ReferenceEquals(_timelineItemLikes, value))
                {
                    var previousValue = _timelineItemLikes as FixupCollection<TimelineItemLikePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTimelineItemLikes;
                    }
                    _timelineItemLikes = value;
                    var newValue = value as FixupCollection<TimelineItemLikePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTimelineItemLikes;
                    }
                }
            }
        }
        private ICollection<TimelineItemLikePoco> _timelineItemLikes;
    
        public ICollection<TimelineItemCommentLikePoco> TimelineItemCommentLikes
        {
            get
            {
                if (_timelineItemCommentLikes == null)
                {
                    var newCollection = new FixupCollection<TimelineItemCommentLikePoco>();
                    newCollection.CollectionChanged += FixupTimelineItemCommentLikes;
                    _timelineItemCommentLikes = newCollection;
                }
                return _timelineItemCommentLikes;
            }
            set
            {
                if (!ReferenceEquals(_timelineItemCommentLikes, value))
                {
                    var previousValue = _timelineItemCommentLikes as FixupCollection<TimelineItemCommentLikePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTimelineItemCommentLikes;
                    }
                    _timelineItemCommentLikes = value;
                    var newValue = value as FixupCollection<TimelineItemCommentLikePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTimelineItemCommentLikes;
                    }
                }
            }
        }
        private ICollection<TimelineItemCommentLikePoco> _timelineItemCommentLikes;
    
        public ICollection<GroupMemberPoco> GroupAcceptationsDone
        {
            get
            {
                if (_groupAcceptationsDone == null)
                {
                    var newCollection = new FixupCollection<GroupMemberPoco>();
                    newCollection.CollectionChanged += FixupGroupAcceptationsDone;
                    _groupAcceptationsDone = newCollection;
                }
                return _groupAcceptationsDone;
            }
            set
            {
                if (!ReferenceEquals(_groupAcceptationsDone, value))
                {
                    var previousValue = _groupAcceptationsDone as FixupCollection<GroupMemberPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupAcceptationsDone;
                    }
                    _groupAcceptationsDone = value;
                    var newValue = value as FixupCollection<GroupMemberPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupAcceptationsDone;
                    }
                }
            }
        }
        private ICollection<GroupMemberPoco> _groupAcceptationsDone;
    
        public ICollection<GroupMemberPoco> GroupInvitationsSent
        {
            get
            {
                if (_groupInvitationsSent == null)
                {
                    var newCollection = new FixupCollection<GroupMemberPoco>();
                    newCollection.CollectionChanged += FixupGroupInvitationsSent;
                    _groupInvitationsSent = newCollection;
                }
                return _groupInvitationsSent;
            }
            set
            {
                if (!ReferenceEquals(_groupInvitationsSent, value))
                {
                    var previousValue = _groupInvitationsSent as FixupCollection<GroupMemberPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupInvitationsSent;
                    }
                    _groupInvitationsSent = value;
                    var newValue = value as FixupCollection<GroupMemberPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupInvitationsSent;
                    }
                }
            }
        }
        private ICollection<GroupMemberPoco> _groupInvitationsSent;
    
        public ICollection<UserProfileFieldPoco> UserProfileFields
        {
            get
            {
                if (_userProfileFields == null)
                {
                    var newCollection = new FixupCollection<UserProfileFieldPoco>();
                    newCollection.CollectionChanged += FixupUserProfileFields;
                    _userProfileFields = newCollection;
                }
                return _userProfileFields;
            }
            set
            {
                if (!ReferenceEquals(_userProfileFields, value))
                {
                    var previousValue = _userProfileFields as FixupCollection<UserProfileFieldPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserProfileFields;
                    }
                    _userProfileFields = value;
                    var newValue = value as FixupCollection<UserProfileFieldPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserProfileFields;
                    }
                }
            }
        }
        private ICollection<UserProfileFieldPoco> _userProfileFields;
    
        public ICollection<ApplyRequestPoco> ApplyRequests
        {
            get
            {
                if (_applyRequests == null)
                {
                    var newCollection = new FixupCollection<ApplyRequestPoco>();
                    newCollection.CollectionChanged += FixupApplyRequests;
                    _applyRequests = newCollection;
                }
                return _applyRequests;
            }
            set
            {
                if (!ReferenceEquals(_applyRequests, value))
                {
                    var previousValue = _applyRequests as FixupCollection<ApplyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplyRequests;
                    }
                    _applyRequests = value;
                    var newValue = value as FixupCollection<ApplyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplyRequests;
                    }
                }
            }
        }
        private ICollection<ApplyRequestPoco> _applyRequests;
    
        public ICollection<ApplyRequestPoco> ApplyRequests1
        {
            get
            {
                if (_applyRequests1 == null)
                {
                    var newCollection = new FixupCollection<ApplyRequestPoco>();
                    newCollection.CollectionChanged += FixupApplyRequests1;
                    _applyRequests1 = newCollection;
                }
                return _applyRequests1;
            }
            set
            {
                if (!ReferenceEquals(_applyRequests1, value))
                {
                    var previousValue = _applyRequests1 as FixupCollection<ApplyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplyRequests1;
                    }
                    _applyRequests1 = value;
                    var newValue = value as FixupCollection<ApplyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplyRequests1;
                    }
                }
            }
        }
        private ICollection<ApplyRequestPoco> _applyRequests1;
    
        public ICollection<ApplyRequestPoco> ApplyRequests2
        {
            get
            {
                if (_applyRequests2 == null)
                {
                    var newCollection = new FixupCollection<ApplyRequestPoco>();
                    newCollection.CollectionChanged += FixupApplyRequests2;
                    _applyRequests2 = newCollection;
                }
                return _applyRequests2;
            }
            set
            {
                if (!ReferenceEquals(_applyRequests2, value))
                {
                    var previousValue = _applyRequests2 as FixupCollection<ApplyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplyRequests2;
                    }
                    _applyRequests2 = value;
                    var newValue = value as FixupCollection<ApplyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplyRequests2;
                    }
                }
            }
        }
        private ICollection<ApplyRequestPoco> _applyRequests2;
    
        public ICollection<SubscriptionPoco> ApplyingSubscriptions
        {
            get
            {
                if (_applyingSubscriptions == null)
                {
                    var newCollection = new FixupCollection<SubscriptionPoco>();
                    newCollection.CollectionChanged += FixupApplyingSubscriptions;
                    _applyingSubscriptions = newCollection;
                }
                return _applyingSubscriptions;
            }
            set
            {
                if (!ReferenceEquals(_applyingSubscriptions, value))
                {
                    var previousValue = _applyingSubscriptions as FixupCollection<SubscriptionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplyingSubscriptions;
                    }
                    _applyingSubscriptions = value;
                    var newValue = value as FixupCollection<SubscriptionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplyingSubscriptions;
                    }
                }
            }
        }
        private ICollection<SubscriptionPoco> _applyingSubscriptions;
    
        public ICollection<SubscriptionPoco> OwnedSubscriptions
        {
            get
            {
                if (_ownedSubscriptions == null)
                {
                    var newCollection = new FixupCollection<SubscriptionPoco>();
                    newCollection.CollectionChanged += FixupOwnedSubscriptions;
                    _ownedSubscriptions = newCollection;
                }
                return _ownedSubscriptions;
            }
            set
            {
                if (!ReferenceEquals(_ownedSubscriptions, value))
                {
                    var previousValue = _ownedSubscriptions as FixupCollection<SubscriptionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupOwnedSubscriptions;
                    }
                    _ownedSubscriptions = value;
                    var newValue = value as FixupCollection<SubscriptionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupOwnedSubscriptions;
                    }
                }
            }
        }
        private ICollection<SubscriptionPoco> _ownedSubscriptions;
    
        public ICollection<StripeTransactionPoco> StripeTransactions
        {
            get
            {
                if (_stripeTransactions == null)
                {
                    var newCollection = new FixupCollection<StripeTransactionPoco>();
                    newCollection.CollectionChanged += FixupStripeTransactions;
                    _stripeTransactions = newCollection;
                }
                return _stripeTransactions;
            }
            set
            {
                if (!ReferenceEquals(_stripeTransactions, value))
                {
                    var previousValue = _stripeTransactions as FixupCollection<StripeTransactionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStripeTransactions;
                    }
                    _stripeTransactions = value;
                    var newValue = value as FixupCollection<StripeTransactionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStripeTransactions;
                    }
                }
            }
        }
        private ICollection<StripeTransactionPoco> _stripeTransactions;
    
        public ICollection<TagDefinitionPoco> CreatedTagDefinitions
        {
            get
            {
                if (_createdTagDefinitions == null)
                {
                    var newCollection = new FixupCollection<TagDefinitionPoco>();
                    newCollection.CollectionChanged += FixupCreatedTagDefinitions;
                    _createdTagDefinitions = newCollection;
                }
                return _createdTagDefinitions;
            }
            set
            {
                if (!ReferenceEquals(_createdTagDefinitions, value))
                {
                    var previousValue = _createdTagDefinitions as FixupCollection<TagDefinitionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCreatedTagDefinitions;
                    }
                    _createdTagDefinitions = value;
                    var newValue = value as FixupCollection<TagDefinitionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCreatedTagDefinitions;
                    }
                }
            }
        }
        private ICollection<TagDefinitionPoco> _createdTagDefinitions;
    
        public ICollection<PartnerResourcePoco> CreatedPartnerResources
        {
            get
            {
                if (_createdPartnerResources == null)
                {
                    var newCollection = new FixupCollection<PartnerResourcePoco>();
                    newCollection.CollectionChanged += FixupCreatedPartnerResources;
                    _createdPartnerResources = newCollection;
                }
                return _createdPartnerResources;
            }
            set
            {
                if (!ReferenceEquals(_createdPartnerResources, value))
                {
                    var previousValue = _createdPartnerResources as FixupCollection<PartnerResourcePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCreatedPartnerResources;
                    }
                    _createdPartnerResources = value;
                    var newValue = value as FixupCollection<PartnerResourcePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCreatedPartnerResources;
                    }
                }
            }
        }
        private ICollection<PartnerResourcePoco> _createdPartnerResources;
    
        public ICollection<PartnerResourcePoco> DeletedPartnerResources
        {
            get
            {
                if (_deletedPartnerResources == null)
                {
                    var newCollection = new FixupCollection<PartnerResourcePoco>();
                    newCollection.CollectionChanged += FixupDeletedPartnerResources;
                    _deletedPartnerResources = newCollection;
                }
                return _deletedPartnerResources;
            }
            set
            {
                if (!ReferenceEquals(_deletedPartnerResources, value))
                {
                    var previousValue = _deletedPartnerResources as FixupCollection<PartnerResourcePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDeletedPartnerResources;
                    }
                    _deletedPartnerResources = value;
                    var newValue = value as FixupCollection<PartnerResourcePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDeletedPartnerResources;
                    }
                }
            }
        }
        private ICollection<PartnerResourcePoco> _deletedPartnerResources;
    
        public ICollection<PartnerResourcePoco> PartnerResources
        {
            get
            {
                if (_partnerResources == null)
                {
                    var newCollection = new FixupCollection<PartnerResourcePoco>();
                    newCollection.CollectionChanged += FixupPartnerResources;
                    _partnerResources = newCollection;
                }
                return _partnerResources;
            }
            set
            {
                if (!ReferenceEquals(_partnerResources, value))
                {
                    var previousValue = _partnerResources as FixupCollection<PartnerResourcePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPartnerResources;
                    }
                    _partnerResources = value;
                    var newValue = value as FixupCollection<PartnerResourcePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPartnerResources;
                    }
                }
            }
        }
        private ICollection<PartnerResourcePoco> _partnerResources;
    
        public ICollection<ApplyRequestPoco> DeletedApplyRequests
        {
            get
            {
                if (_deletedApplyRequests == null)
                {
                    var newCollection = new FixupCollection<ApplyRequestPoco>();
                    newCollection.CollectionChanged += FixupDeletedApplyRequests;
                    _deletedApplyRequests = newCollection;
                }
                return _deletedApplyRequests;
            }
            set
            {
                if (!ReferenceEquals(_deletedApplyRequests, value))
                {
                    var previousValue = _deletedApplyRequests as FixupCollection<ApplyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDeletedApplyRequests;
                    }
                    _deletedApplyRequests = value;
                    var newValue = value as FixupCollection<ApplyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDeletedApplyRequests;
                    }
                }
            }
        }
        private ICollection<ApplyRequestPoco> _deletedApplyRequests;
    
        public ICollection<ApplyRequestPoco> ApplyRequests3
        {
            get
            {
                if (_applyRequests3 == null)
                {
                    var newCollection = new FixupCollection<ApplyRequestPoco>();
                    newCollection.CollectionChanged += FixupApplyRequests3;
                    _applyRequests3 = newCollection;
                }
                return _applyRequests3;
            }
            set
            {
                if (!ReferenceEquals(_applyRequests3, value))
                {
                    var previousValue = _applyRequests3 as FixupCollection<ApplyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplyRequests3;
                    }
                    _applyRequests3 = value;
                    var newValue = value as FixupCollection<ApplyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplyRequests3;
                    }
                }
            }
        }
        private ICollection<ApplyRequestPoco> _applyRequests3;
    
        public ICollection<CompanyTagPoco> CreatedCompanyTags
        {
            get
            {
                if (_createdCompanyTags == null)
                {
                    var newCollection = new FixupCollection<CompanyTagPoco>();
                    newCollection.CollectionChanged += FixupCreatedCompanyTags;
                    _createdCompanyTags = newCollection;
                }
                return _createdCompanyTags;
            }
            set
            {
                if (!ReferenceEquals(_createdCompanyTags, value))
                {
                    var previousValue = _createdCompanyTags as FixupCollection<CompanyTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCreatedCompanyTags;
                    }
                    _createdCompanyTags = value;
                    var newValue = value as FixupCollection<CompanyTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCreatedCompanyTags;
                    }
                }
            }
        }
        private ICollection<CompanyTagPoco> _createdCompanyTags;
    
        public ICollection<CompanyTagPoco> DeletedCompanyTags
        {
            get
            {
                if (_deletedCompanyTags == null)
                {
                    var newCollection = new FixupCollection<CompanyTagPoco>();
                    newCollection.CollectionChanged += FixupDeletedCompanyTags;
                    _deletedCompanyTags = newCollection;
                }
                return _deletedCompanyTags;
            }
            set
            {
                if (!ReferenceEquals(_deletedCompanyTags, value))
                {
                    var previousValue = _deletedCompanyTags as FixupCollection<CompanyTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDeletedCompanyTags;
                    }
                    _deletedCompanyTags = value;
                    var newValue = value as FixupCollection<CompanyTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDeletedCompanyTags;
                    }
                }
            }
        }
        private ICollection<CompanyTagPoco> _deletedCompanyTags;
    
        public ICollection<InvitedPoco> DeletedInvited
        {
            get
            {
                if (_deletedInvited == null)
                {
                    var newCollection = new FixupCollection<InvitedPoco>();
                    newCollection.CollectionChanged += FixupDeletedInvited;
                    _deletedInvited = newCollection;
                }
                return _deletedInvited;
            }
            set
            {
                if (!ReferenceEquals(_deletedInvited, value))
                {
                    var previousValue = _deletedInvited as FixupCollection<InvitedPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDeletedInvited;
                    }
                    _deletedInvited = value;
                    var newValue = value as FixupCollection<InvitedPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDeletedInvited;
                    }
                }
            }
        }
        private ICollection<InvitedPoco> _deletedInvited;
    
        public ICollection<UserTagPoco> UserTags
        {
            get
            {
                if (_userTags == null)
                {
                    var newCollection = new FixupCollection<UserTagPoco>();
                    newCollection.CollectionChanged += FixupUserTags;
                    _userTags = newCollection;
                }
                return _userTags;
            }
            set
            {
                if (!ReferenceEquals(_userTags, value))
                {
                    var previousValue = _userTags as FixupCollection<UserTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserTags;
                    }
                    _userTags = value;
                    var newValue = value as FixupCollection<UserTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserTags;
                    }
                }
            }
        }
        private ICollection<UserTagPoco> _userTags;
    
        public ICollection<UserTagPoco> CreatedUserTags
        {
            get
            {
                if (_createdUserTags == null)
                {
                    var newCollection = new FixupCollection<UserTagPoco>();
                    newCollection.CollectionChanged += FixupCreatedUserTags;
                    _createdUserTags = newCollection;
                }
                return _createdUserTags;
            }
            set
            {
                if (!ReferenceEquals(_createdUserTags, value))
                {
                    var previousValue = _createdUserTags as FixupCollection<UserTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCreatedUserTags;
                    }
                    _createdUserTags = value;
                    var newValue = value as FixupCollection<UserTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCreatedUserTags;
                    }
                }
            }
        }
        private ICollection<UserTagPoco> _createdUserTags;
    
        public ICollection<UserTagPoco> DeletedUserTags
        {
            get
            {
                if (_deletedUserTags == null)
                {
                    var newCollection = new FixupCollection<UserTagPoco>();
                    newCollection.CollectionChanged += FixupDeletedUserTags;
                    _deletedUserTags = newCollection;
                }
                return _deletedUserTags;
            }
            set
            {
                if (!ReferenceEquals(_deletedUserTags, value))
                {
                    var previousValue = _deletedUserTags as FixupCollection<UserTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDeletedUserTags;
                    }
                    _deletedUserTags = value;
                    var newValue = value as FixupCollection<UserTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDeletedUserTags;
                    }
                }
            }
        }
        private ICollection<UserTagPoco> _deletedUserTags;
    
        public ICollection<GroupTagPoco> GroupTagsCreated
        {
            get
            {
                if (_groupTagsCreated == null)
                {
                    var newCollection = new FixupCollection<GroupTagPoco>();
                    newCollection.CollectionChanged += FixupGroupTagsCreated;
                    _groupTagsCreated = newCollection;
                }
                return _groupTagsCreated;
            }
            set
            {
                if (!ReferenceEquals(_groupTagsCreated, value))
                {
                    var previousValue = _groupTagsCreated as FixupCollection<GroupTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupTagsCreated;
                    }
                    _groupTagsCreated = value;
                    var newValue = value as FixupCollection<GroupTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupTagsCreated;
                    }
                }
            }
        }
        private ICollection<GroupTagPoco> _groupTagsCreated;
    
        public ICollection<GroupTagPoco> GroupTagsDeleted
        {
            get
            {
                if (_groupTagsDeleted == null)
                {
                    var newCollection = new FixupCollection<GroupTagPoco>();
                    newCollection.CollectionChanged += FixupGroupTagsDeleted;
                    _groupTagsDeleted = newCollection;
                }
                return _groupTagsDeleted;
            }
            set
            {
                if (!ReferenceEquals(_groupTagsDeleted, value))
                {
                    var previousValue = _groupTagsDeleted as FixupCollection<GroupTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGroupTagsDeleted;
                    }
                    _groupTagsDeleted = value;
                    var newValue = value as FixupCollection<GroupTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGroupTagsDeleted;
                    }
                }
            }
        }
        private ICollection<GroupTagPoco> _groupTagsDeleted;
    
        public ICollection<TimelineItemTagPoco> TimelineItemTagsCreated
        {
            get
            {
                if (_timelineItemTagsCreated == null)
                {
                    var newCollection = new FixupCollection<TimelineItemTagPoco>();
                    newCollection.CollectionChanged += FixupTimelineItemTagsCreated;
                    _timelineItemTagsCreated = newCollection;
                }
                return _timelineItemTagsCreated;
            }
            set
            {
                if (!ReferenceEquals(_timelineItemTagsCreated, value))
                {
                    var previousValue = _timelineItemTagsCreated as FixupCollection<TimelineItemTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTimelineItemTagsCreated;
                    }
                    _timelineItemTagsCreated = value;
                    var newValue = value as FixupCollection<TimelineItemTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTimelineItemTagsCreated;
                    }
                }
            }
        }
        private ICollection<TimelineItemTagPoco> _timelineItemTagsCreated;
    
        public ICollection<TimelineItemTagPoco> TimelineItemTagsDeleted
        {
            get
            {
                if (_timelineItemTagsDeleted == null)
                {
                    var newCollection = new FixupCollection<TimelineItemTagPoco>();
                    newCollection.CollectionChanged += FixupTimelineItemTagsDeleted;
                    _timelineItemTagsDeleted = newCollection;
                }
                return _timelineItemTagsDeleted;
            }
            set
            {
                if (!ReferenceEquals(_timelineItemTagsDeleted, value))
                {
                    var previousValue = _timelineItemTagsDeleted as FixupCollection<TimelineItemTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTimelineItemTagsDeleted;
                    }
                    _timelineItemTagsDeleted = value;
                    var newValue = value as FixupCollection<TimelineItemTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTimelineItemTagsDeleted;
                    }
                }
            }
        }
        private ICollection<TimelineItemTagPoco> _timelineItemTagsDeleted;
    
        public ICollection<AdPoco> AdsClosed
        {
            get
            {
                if (_adsClosed == null)
                {
                    var newCollection = new FixupCollection<AdPoco>();
                    newCollection.CollectionChanged += FixupAdsClosed;
                    _adsClosed = newCollection;
                }
                return _adsClosed;
            }
            set
            {
                if (!ReferenceEquals(_adsClosed, value))
                {
                    var previousValue = _adsClosed as FixupCollection<AdPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAdsClosed;
                    }
                    _adsClosed = value;
                    var newValue = value as FixupCollection<AdPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAdsClosed;
                    }
                }
            }
        }
        private ICollection<AdPoco> _adsClosed;
    
        public ICollection<AdPoco> AdsValidated
        {
            get
            {
                if (_adsValidated == null)
                {
                    var newCollection = new FixupCollection<AdPoco>();
                    newCollection.CollectionChanged += FixupAdsValidated;
                    _adsValidated = newCollection;
                }
                return _adsValidated;
            }
            set
            {
                if (!ReferenceEquals(_adsValidated, value))
                {
                    var previousValue = _adsValidated as FixupCollection<AdPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAdsValidated;
                    }
                    _adsValidated = value;
                    var newValue = value as FixupCollection<AdPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAdsValidated;
                    }
                }
            }
        }
        private ICollection<AdPoco> _adsValidated;
    
        public ICollection<AdTagPoco> AdTagsCreated
        {
            get
            {
                if (_adTagsCreated == null)
                {
                    var newCollection = new FixupCollection<AdTagPoco>();
                    newCollection.CollectionChanged += FixupAdTagsCreated;
                    _adTagsCreated = newCollection;
                }
                return _adTagsCreated;
            }
            set
            {
                if (!ReferenceEquals(_adTagsCreated, value))
                {
                    var previousValue = _adTagsCreated as FixupCollection<AdTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAdTagsCreated;
                    }
                    _adTagsCreated = value;
                    var newValue = value as FixupCollection<AdTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAdTagsCreated;
                    }
                }
            }
        }
        private ICollection<AdTagPoco> _adTagsCreated;
    
        public ICollection<AdTagPoco> AdTagsDeleted
        {
            get
            {
                if (_adTagsDeleted == null)
                {
                    var newCollection = new FixupCollection<AdTagPoco>();
                    newCollection.CollectionChanged += FixupAdTagsDeleted;
                    _adTagsDeleted = newCollection;
                }
                return _adTagsDeleted;
            }
            set
            {
                if (!ReferenceEquals(_adTagsDeleted, value))
                {
                    var previousValue = _adTagsDeleted as FixupCollection<AdTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAdTagsDeleted;
                    }
                    _adTagsDeleted = value;
                    var newValue = value as FixupCollection<AdTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAdTagsDeleted;
                    }
                }
            }
        }
        private ICollection<AdTagPoco> _adTagsDeleted;
    
        public ICollection<HintsToUserPoco> HintsToUsers
        {
            get
            {
                if (_hintsToUsers == null)
                {
                    var newCollection = new FixupCollection<HintsToUserPoco>();
                    newCollection.CollectionChanged += FixupHintsToUsers;
                    _hintsToUsers = newCollection;
                }
                return _hintsToUsers;
            }
            set
            {
                if (!ReferenceEquals(_hintsToUsers, value))
                {
                    var previousValue = _hintsToUsers as FixupCollection<HintsToUserPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupHintsToUsers;
                    }
                    _hintsToUsers = value;
                    var newValue = value as FixupCollection<HintsToUserPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupHintsToUsers;
                    }
                }
            }
        }
        private ICollection<HintsToUserPoco> _hintsToUsers;
    
        public ICollection<UserPresencePoco> UserPresences
        {
            get
            {
                if (_userPresences == null)
                {
                    var newCollection = new FixupCollection<UserPresencePoco>();
                    newCollection.CollectionChanged += FixupUserPresences;
                    _userPresences = newCollection;
                }
                return _userPresences;
            }
            set
            {
                if (!ReferenceEquals(_userPresences, value))
                {
                    var previousValue = _userPresences as FixupCollection<UserPresencePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserPresences;
                    }
                    _userPresences = value;
                    var newValue = value as FixupCollection<UserPresencePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserPresences;
                    }
                }
            }
        }
        private ICollection<UserPresencePoco> _userPresences;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCompany(CompanyPoco previousValue)
        {
            if (previousValue != null && previousValue.Users.Contains(this))
            {
                previousValue.Users.Remove(this);
            }
    
            if (Company != null)
            {
                if (!Company.Users.Contains(this))
                {
                    Company.Users.Add(this);
                }
                if (CompanyID != Company.ID)
                {
                    CompanyID = Company.ID;
                }
            }
        }
    
        private void FixupJob(JobPoco previousValue)
        {
            if (previousValue != null && previousValue.Users.Contains(this))
            {
                previousValue.Users.Remove(this);
            }
    
            if (Job != null)
            {
                if (!Job.Users.Contains(this))
                {
                    Job.Users.Add(this);
                }
                if (JobId != Job.Id)
                {
                    JobId = Job.Id;
                }
            }
            else if (!_settingFK)
            {
                JobId = null;
            }
        }
    
        private void FixupRelationship(RelationshipPoco previousValue)
        {
            if (previousValue != null && previousValue.Users.Contains(this))
            {
                previousValue.Users.Remove(this);
            }
    
            if (Relationship != null)
            {
                if (!Relationship.Users.Contains(this))
                {
                    Relationship.Users.Add(this);
                }
                if (RelationshipId != Relationship.Id)
                {
                    RelationshipId = Relationship.Id;
                }
            }
            else if (!_settingFK)
            {
                RelationshipId = null;
            }
        }
    
        private void FixupAspnetUser(AspnetUsersPoco previousValue)
        {
            if (previousValue != null && previousValue.Users.Contains(this))
            {
                previousValue.Users.Remove(this);
            }
    
            if (AspnetUser != null)
            {
                if (!AspnetUser.Users.Contains(this))
                {
                    AspnetUser.Users.Add(this);
                }
                if (UserId != AspnetUser.UserId)
                {
                    UserId = AspnetUser.UserId;
                }
            }
        }
    
        private void FixupNotification(NotificationPoco previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.User, this))
            {
                previousValue.User = null;
            }
    
            if (Notification != null)
            {
                Notification.User = this;
            }
        }
    
        private void FixupNetwork(NetworkPoco previousValue)
        {
            if (previousValue != null && previousValue.Users.Contains(this))
            {
                previousValue.Users.Remove(this);
            }
    
            if (Network != null)
            {
                if (!Network.Users.Contains(this))
                {
                    Network.Users.Add(this);
                }
                if (NetworkId != Network.Id)
                {
                    NetworkId = Network.Id;
                }
            }
        }
    
        private void FixupActivities(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ActivityPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ActivityPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupAds(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AdPoco item in e.NewItems)
                {
                    item.Owner = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AdPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Owner, this))
                    {
                        item.Owner = null;
                    }
                }
            }
        }
    
        private void FixupCompaniesVisits(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompaniesVisitPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompaniesVisitPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupCompanyAdmins(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyAdminPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyAdminPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupCompanyNews(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyNewPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyNewPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupContactsOf(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ContactPoco item in e.NewItems)
                {
                    item.UserProfile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ContactPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.UserProfile, this))
                    {
                        item.UserProfile = null;
                    }
                }
            }
        }
    
        private void FixupContacts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ContactPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ContactPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupEventMembers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EventMemberPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EventMemberPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupEvents(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EventPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EventPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupExchangeMaterials(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ExchangeMaterialPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExchangeMaterialPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupExchangeSkills(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ExchangeSkillPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExchangeSkillPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupExchangeSurfaces(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ExchangeSurfacePoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExchangeSurfacePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupGroupMembers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupMemberPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupMemberPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupGroups(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupInformationNotes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (InformationNotePoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InformationNotePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupInterests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (InterestPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InterestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupUsersInvited(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (InvitedPoco item in e.NewItems)
                {
                    item.Inviter = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InvitedPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Inviter, this))
                    {
                        item.Inviter = null;
                    }
                }
            }
        }
    
        private void FixupInvitations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (InvitedPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InvitedPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupLinks(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (LinkPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LinkPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupListItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ListItemPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ListItemPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupLists(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ListPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ListPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupLives(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (LivePoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LivePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupLostItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (LostItemPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LostItemPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupMessagesSent(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MessagePoco item in e.NewItems)
                {
                    item.From = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MessagePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.From, this))
                    {
                        item.From = null;
                    }
                }
            }
        }
    
        private void FixupMessagesReceived(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MessagePoco item in e.NewItems)
                {
                    item.To = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MessagePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.To, this))
                    {
                        item.To = null;
                    }
                }
            }
        }
    
        private void FixupRecreations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RecreationPoco item in e.NewItems)
                {
                    item.CreatedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RecreationPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedBy, this))
                    {
                        item.CreatedBy = null;
                    }
                }
            }
        }
    
        private void FixupTeamMembers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TeamMemberPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TeamMemberPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupTimelineItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemPoco item in e.NewItems)
                {
                    item.PostedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.PostedBy, this))
                    {
                        item.PostedBy = null;
                    }
                }
            }
        }
    
        private void FixupMyTimelineItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupUserInterests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserInterestPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserInterestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupUserRecreations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserRecreationPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserRecreationPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupUserSkills(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserSkillPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserSkillPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupOtherUsersVisits(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UsersVisitPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UsersVisitPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupMyUsersVisits(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UsersVisitPoco item in e.NewItems)
                {
                    item.User1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UsersVisitPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User1, this))
                    {
                        item.User1 = null;
                    }
                }
            }
        }
    
        private void FixupSeekFriends(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SeekFriendPoco item in e.NewItems)
                {
                    item.Seeker = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SeekFriendPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Seeker, this))
                    {
                        item.Seeker = null;
                    }
                }
            }
        }
    
        private void FixupSeekFriends1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SeekFriendPoco item in e.NewItems)
                {
                    item.Target = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SeekFriendPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Target, this))
                    {
                        item.Target = null;
                    }
                }
            }
        }
    
        private void FixupProjectMembers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ProjectMemberPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProjectMemberPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupPostedTimelineItemComments(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemCommentPoco item in e.NewItems)
                {
                    item.PostedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemCommentPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.PostedBy, this))
                    {
                        item.PostedBy = null;
                    }
                }
            }
        }
    
        private void FixupAchievements(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AchievementsUserPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AchievementsUserPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupRepliedToRegisterRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RegisterRequestPoco item in e.NewItems)
                {
                    item.RepliedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RegisterRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.RepliedBy, this))
                    {
                        item.RepliedBy = null;
                    }
                }
            }
        }
    
        private void FixupValidatedRegisterRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RegisterRequestPoco item in e.NewItems)
                {
                    item.ValidatedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RegisterRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.ValidatedBy, this))
                    {
                        item.ValidatedBy = null;
                    }
                }
            }
        }
    
        private void FixupCareerOpportunities(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CareerOpportunityPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CareerOpportunityPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupSocialNetworkConnections(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SocialNetworkConnectionPoco item in e.NewItems)
                {
                    item.CreatedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SocialNetworkConnectionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedByUser, this))
                    {
                        item.CreatedByUser = null;
                    }
                }
            }
        }
    
        private void FixupSocialNetworkUserSubscriptions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SocialNetworkUserSubscriptionPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SocialNetworkUserSubscriptionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupCompanyContacts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyContactPoco item in e.NewItems)
                {
                    item.FromUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyContactPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.FromUser, this))
                    {
                        item.FromUser = null;
                    }
                }
            }
        }
    
        private void FixupStatsCounterHits(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StatsCounterHitPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StatsCounterHitPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupCompanyRequestMessages(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyRequestMessagePoco item in e.NewItems)
                {
                    item.FromUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyRequestMessagePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.FromUser, this))
                    {
                        item.FromUser = null;
                    }
                }
            }
        }
    
        private void FixupApprovedCompanyRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyRequestPoco item in e.NewItems)
                {
                    item.ClosedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.ClosedByUser, this))
                    {
                        item.ClosedByUser = null;
                    }
                }
            }
        }
    
        private void FixupBlockedCompanyRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyRequestPoco item in e.NewItems)
                {
                    item.BlockedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.BlockedByUser, this))
                    {
                        item.BlockedByUser = null;
                    }
                }
            }
        }
    
        private void FixupCreatedClubs(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ClubPoco item in e.NewItems)
                {
                    item.CreatedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ClubPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedByUser, this))
                    {
                        item.CreatedByUser = null;
                    }
                }
            }
        }
    
        private void FixupUserActionKeys(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserActionKeyPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserActionKeyPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupTimelineItemSkillsCreated(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemSkillPoco item in e.NewItems)
                {
                    item.CreatedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemSkillPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedBy, this))
                    {
                        item.CreatedBy = null;
                    }
                }
            }
        }
    
        private void FixupTimelineItemSkillsDeleted(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemSkillPoco item in e.NewItems)
                {
                    item.DeletedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemSkillPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedBy, this))
                    {
                        item.DeletedBy = null;
                    }
                }
            }
        }
    
        private void FixupDeletedTimelineItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemPoco item in e.NewItems)
                {
                    item.DeletedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedBy, this))
                    {
                        item.DeletedBy = null;
                    }
                }
            }
        }
    
        private void FixupGroupSkillsCreated(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupSkillPoco item in e.NewItems)
                {
                    item.CreatedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupSkillPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedBy, this))
                    {
                        item.CreatedBy = null;
                    }
                }
            }
        }
    
        private void FixupGroupSkillsDeleted(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupSkillPoco item in e.NewItems)
                {
                    item.DeletedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupSkillPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedBy, this))
                    {
                        item.DeletedBy = null;
                    }
                }
            }
        }
    
        private void FixupGroupInterestsCreatedBy(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupInterestPoco item in e.NewItems)
                {
                    item.CreatedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupInterestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedBy, this))
                    {
                        item.CreatedBy = null;
                    }
                }
            }
        }
    
        private void FixupGroupInterestsDeletedBy(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupInterestPoco item in e.NewItems)
                {
                    item.DeletedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupInterestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedBy, this))
                    {
                        item.DeletedBy = null;
                    }
                }
            }
        }
    
        private void FixupGroupRecreationsCreatedBy(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupRecreationPoco item in e.NewItems)
                {
                    item.CreatedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupRecreationPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedBy, this))
                    {
                        item.CreatedBy = null;
                    }
                }
            }
        }
    
        private void FixupGroupRecreationsDeletedBy(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupRecreationPoco item in e.NewItems)
                {
                    item.DeletedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupRecreationPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedBy, this))
                    {
                        item.DeletedBy = null;
                    }
                }
            }
        }
    
        private void FixupEmailMessages(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EmailMessagePoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EmailMessagePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupUserEmailChangeRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserEmailChangeRequestPoco item in e.NewItems)
                {
                    item.CreatedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserEmailChangeRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedByUser, this))
                    {
                        item.CreatedByUser = null;
                    }
                }
            }
        }
    
        private void FixupUserEmailChangeRequests1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserEmailChangeRequestPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserEmailChangeRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupTimelineItemLikes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemLikePoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemLikePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupTimelineItemCommentLikes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemCommentLikePoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemCommentLikePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupGroupAcceptationsDone(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupMemberPoco item in e.NewItems)
                {
                    item.AcceptedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupMemberPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.AcceptedBy, this))
                    {
                        item.AcceptedBy = null;
                    }
                }
            }
        }
    
        private void FixupGroupInvitationsSent(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupMemberPoco item in e.NewItems)
                {
                    item.InvitedBy = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupMemberPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.InvitedBy, this))
                    {
                        item.InvitedBy = null;
                    }
                }
            }
        }
    
        private void FixupUserProfileFields(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserProfileFieldPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserProfileFieldPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupApplyRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ApplyRequestPoco item in e.NewItems)
                {
                    item.CreatedUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ApplyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedUser, this))
                    {
                        item.CreatedUser = null;
                    }
                }
            }
        }
    
        private void FixupApplyRequests1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ApplyRequestPoco item in e.NewItems)
                {
                    item.AcceptedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ApplyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.AcceptedByUser, this))
                    {
                        item.AcceptedByUser = null;
                    }
                }
            }
        }
    
        private void FixupApplyRequests2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ApplyRequestPoco item in e.NewItems)
                {
                    item.RefusedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ApplyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.RefusedByUser, this))
                    {
                        item.RefusedByUser = null;
                    }
                }
            }
        }
    
        private void FixupApplyingSubscriptions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SubscriptionPoco item in e.NewItems)
                {
                    item.AppliesToUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SubscriptionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.AppliesToUser, this))
                    {
                        item.AppliesToUser = null;
                    }
                }
            }
        }
    
        private void FixupOwnedSubscriptions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SubscriptionPoco item in e.NewItems)
                {
                    item.OwnerUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SubscriptionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.OwnerUser, this))
                    {
                        item.OwnerUser = null;
                    }
                }
            }
        }
    
        private void FixupStripeTransactions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StripeTransactionPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StripeTransactionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupCreatedTagDefinitions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TagDefinitionPoco item in e.NewItems)
                {
                    item.CreatedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TagDefinitionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedByUser, this))
                    {
                        item.CreatedByUser = null;
                    }
                }
            }
        }
    
        private void FixupCreatedPartnerResources(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PartnerResourcePoco item in e.NewItems)
                {
                    item.CreatedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PartnerResourcePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedByUser, this))
                    {
                        item.CreatedByUser = null;
                    }
                }
            }
        }
    
        private void FixupDeletedPartnerResources(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PartnerResourcePoco item in e.NewItems)
                {
                    item.DeletedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PartnerResourcePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedByUser, this))
                    {
                        item.DeletedByUser = null;
                    }
                }
            }
        }
    
        private void FixupPartnerResources(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PartnerResourcePoco item in e.NewItems)
                {
                    item.ApprovedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PartnerResourcePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.ApprovedByUser, this))
                    {
                        item.ApprovedByUser = null;
                    }
                }
            }
        }
    
        private void FixupDeletedApplyRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ApplyRequestPoco item in e.NewItems)
                {
                    item.DeletedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ApplyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedByUser, this))
                    {
                        item.DeletedByUser = null;
                    }
                }
            }
        }
    
        private void FixupApplyRequests3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ApplyRequestPoco item in e.NewItems)
                {
                    item.InvitedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ApplyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.InvitedByUser, this))
                    {
                        item.InvitedByUser = null;
                    }
                }
            }
        }
    
        private void FixupCreatedCompanyTags(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyTagPoco item in e.NewItems)
                {
                    item.CreatedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedByUser, this))
                    {
                        item.CreatedByUser = null;
                    }
                }
            }
        }
    
        private void FixupDeletedCompanyTags(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyTagPoco item in e.NewItems)
                {
                    item.DeletedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedByUser, this))
                    {
                        item.DeletedByUser = null;
                    }
                }
            }
        }
    
        private void FixupDeletedInvited(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (InvitedPoco item in e.NewItems)
                {
                    item.DeletedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InvitedPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedByUser, this))
                    {
                        item.DeletedByUser = null;
                    }
                }
            }
        }
    
        private void FixupUserTags(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserTagPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupCreatedUserTags(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserTagPoco item in e.NewItems)
                {
                    item.CreatedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedByUser, this))
                    {
                        item.CreatedByUser = null;
                    }
                }
            }
        }
    
        private void FixupDeletedUserTags(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserTagPoco item in e.NewItems)
                {
                    item.DeletedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedByUser, this))
                    {
                        item.DeletedByUser = null;
                    }
                }
            }
        }
    
        private void FixupGroupTagsCreated(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupTagPoco item in e.NewItems)
                {
                    item.CreatedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedByUser, this))
                    {
                        item.CreatedByUser = null;
                    }
                }
            }
        }
    
        private void FixupGroupTagsDeleted(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GroupTagPoco item in e.NewItems)
                {
                    item.DeletedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GroupTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedByUser, this))
                    {
                        item.DeletedByUser = null;
                    }
                }
            }
        }
    
        private void FixupTimelineItemTagsCreated(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemTagPoco item in e.NewItems)
                {
                    item.CreatedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedByUser, this))
                    {
                        item.CreatedByUser = null;
                    }
                }
            }
        }
    
        private void FixupTimelineItemTagsDeleted(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemTagPoco item in e.NewItems)
                {
                    item.DeletedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedByUser, this))
                    {
                        item.DeletedByUser = null;
                    }
                }
            }
        }
    
        private void FixupAdsClosed(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AdPoco item in e.NewItems)
                {
                    item.CloseUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AdPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CloseUser, this))
                    {
                        item.CloseUser = null;
                    }
                }
            }
        }
    
        private void FixupAdsValidated(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AdPoco item in e.NewItems)
                {
                    item.ValidationUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AdPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.ValidationUser, this))
                    {
                        item.ValidationUser = null;
                    }
                }
            }
        }
    
        private void FixupAdTagsCreated(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AdTagPoco item in e.NewItems)
                {
                    item.CreatedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AdTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedByUser, this))
                    {
                        item.CreatedByUser = null;
                    }
                }
            }
        }
    
        private void FixupAdTagsDeleted(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AdTagPoco item in e.NewItems)
                {
                    item.DeletedByUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AdTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.DeletedByUser, this))
                    {
                        item.DeletedByUser = null;
                    }
                }
            }
        }
    
        private void FixupHintsToUsers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (HintsToUserPoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (HintsToUserPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupUserPresences(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserPresencePoco item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserPresencePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }

        #endregion

    }
}
