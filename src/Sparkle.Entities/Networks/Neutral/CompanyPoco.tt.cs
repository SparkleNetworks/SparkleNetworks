//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Sparkle.Entities.Networks.Neutral
{
    public partial class CompanyPoco
    {
        #region Primitive Properties
    
        public int ID
        {
            get;
            set;
        }
    
        public string Name
        {
            get;
            set;
        }
    
        public string Alias
        {
            get;
            set;
        }
    
        public string Baseline
        {
            get;
            set;
        }
    
        public string EmailDomain
        {
            get;
            set;
        }
    
        public int NetworkId
        {
            get { return _networkId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._networkId != value)
                    {
                        if (this.Network != null && this.Network.Id != value)
                        {
                            this.Network = null;
                        }
                        this._networkId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _networkId;
    
        public bool IsApproved
        {
            get;
            set;
        }
    
        public System.DateTime CreatedDateUtc
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> ApprovedDateUtc
        {
            get;
            set;
        }
    
        public short CategoryId
        {
            get { return _categoryId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._categoryId != value)
                    {
                        if (this.CompanyCategory != null && this.CompanyCategory.Id != value)
                        {
                            this.CompanyCategory = null;
                        }
                        this._categoryId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private short _categoryId;
    
        public bool IsEnabled
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> IsEnabledFirstChangeDateUtc
        {
            get;
            set;
        }
    
        public Nullable<int> IsEnabledFirstChangeUserId
        {
            get { return _isEnabledFirstChangeUserId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._isEnabledFirstChangeUserId != value)
                    {
                        if (this.IsEnabledFirstChangeUser != null && this.IsEnabledFirstChangeUser.Id != value)
                        {
                            this.IsEnabledFirstChangeUser = null;
                        }
                        this._isEnabledFirstChangeUserId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _isEnabledFirstChangeUserId;
    
        public Nullable<System.DateTime> IsEnabledLastChangeDateUtc
        {
            get;
            set;
        }
    
        public Nullable<int> IsEnabledLastChangeUserId
        {
            get { return _isEnabledLastChangeUserId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._isEnabledLastChangeUserId != value)
                    {
                        if (this.IsEnabledLastChangeUser != null && this.IsEnabledLastChangeUser.Id != value)
                        {
                            this.IsEnabledLastChangeUser = null;
                        }
                        this._isEnabledLastChangeUserId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _isEnabledLastChangeUserId;
    
        public string IsEnabledRemark
        {
            get;
            set;
        }
    
        public string ImportedId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public ICollection<ActivityPoco> Activities
        {
            get
            {
                if (_activities == null)
                {
                    var newCollection = new FixupCollection<ActivityPoco>();
                    newCollection.CollectionChanged += FixupActivities;
                    _activities = newCollection;
                }
                return _activities;
            }
            set
            {
                if (!ReferenceEquals(_activities, value))
                {
                    var previousValue = _activities as FixupCollection<ActivityPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupActivities;
                    }
                    _activities = value;
                    var newValue = value as FixupCollection<ActivityPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupActivities;
                    }
                }
            }
        }
        private ICollection<ActivityPoco> _activities;
    
        public ICollection<CompanyNewPoco> CompanyNews
        {
            get
            {
                if (_companyNews == null)
                {
                    var newCollection = new FixupCollection<CompanyNewPoco>();
                    newCollection.CollectionChanged += FixupCompanyNews;
                    _companyNews = newCollection;
                }
                return _companyNews;
            }
            set
            {
                if (!ReferenceEquals(_companyNews, value))
                {
                    var previousValue = _companyNews as FixupCollection<CompanyNewPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyNews;
                    }
                    _companyNews = value;
                    var newValue = value as FixupCollection<CompanyNewPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyNews;
                    }
                }
            }
        }
        private ICollection<CompanyNewPoco> _companyNews;
    
        public ICollection<CompaniesVisitPoco> CompaniesVisits
        {
            get
            {
                if (_companiesVisits == null)
                {
                    var newCollection = new FixupCollection<CompaniesVisitPoco>();
                    newCollection.CollectionChanged += FixupCompaniesVisits;
                    _companiesVisits = newCollection;
                }
                return _companiesVisits;
            }
            set
            {
                if (!ReferenceEquals(_companiesVisits, value))
                {
                    var previousValue = _companiesVisits as FixupCollection<CompaniesVisitPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompaniesVisits;
                    }
                    _companiesVisits = value;
                    var newValue = value as FixupCollection<CompaniesVisitPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompaniesVisits;
                    }
                }
            }
        }
        private ICollection<CompaniesVisitPoco> _companiesVisits;
    
        public ICollection<CompanyAdminPoco> CompanyAdmins
        {
            get
            {
                if (_companyAdmins == null)
                {
                    var newCollection = new FixupCollection<CompanyAdminPoco>();
                    newCollection.CollectionChanged += FixupCompanyAdmins;
                    _companyAdmins = newCollection;
                }
                return _companyAdmins;
            }
            set
            {
                if (!ReferenceEquals(_companyAdmins, value))
                {
                    var previousValue = _companyAdmins as FixupCollection<CompanyAdminPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyAdmins;
                    }
                    _companyAdmins = value;
                    var newValue = value as FixupCollection<CompanyAdminPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyAdmins;
                    }
                }
            }
        }
        private ICollection<CompanyAdminPoco> _companyAdmins;
    
        public ICollection<CompanySkillPoco> CompanySkills
        {
            get
            {
                if (_companySkills == null)
                {
                    var newCollection = new FixupCollection<CompanySkillPoco>();
                    newCollection.CollectionChanged += FixupCompanySkills;
                    _companySkills = newCollection;
                }
                return _companySkills;
            }
            set
            {
                if (!ReferenceEquals(_companySkills, value))
                {
                    var previousValue = _companySkills as FixupCollection<CompanySkillPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanySkills;
                    }
                    _companySkills = value;
                    var newValue = value as FixupCollection<CompanySkillPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanySkills;
                    }
                }
            }
        }
        private ICollection<CompanySkillPoco> _companySkills;
    
        public ICollection<ExchangeMaterialPoco> ExchangeMaterials
        {
            get
            {
                if (_exchangeMaterials == null)
                {
                    var newCollection = new FixupCollection<ExchangeMaterialPoco>();
                    newCollection.CollectionChanged += FixupExchangeMaterials;
                    _exchangeMaterials = newCollection;
                }
                return _exchangeMaterials;
            }
            set
            {
                if (!ReferenceEquals(_exchangeMaterials, value))
                {
                    var previousValue = _exchangeMaterials as FixupCollection<ExchangeMaterialPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExchangeMaterials;
                    }
                    _exchangeMaterials = value;
                    var newValue = value as FixupCollection<ExchangeMaterialPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExchangeMaterials;
                    }
                }
            }
        }
        private ICollection<ExchangeMaterialPoco> _exchangeMaterials;
    
        public ICollection<ExchangeSkillPoco> ExchangeSkills
        {
            get
            {
                if (_exchangeSkills == null)
                {
                    var newCollection = new FixupCollection<ExchangeSkillPoco>();
                    newCollection.CollectionChanged += FixupExchangeSkills;
                    _exchangeSkills = newCollection;
                }
                return _exchangeSkills;
            }
            set
            {
                if (!ReferenceEquals(_exchangeSkills, value))
                {
                    var previousValue = _exchangeSkills as FixupCollection<ExchangeSkillPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExchangeSkills;
                    }
                    _exchangeSkills = value;
                    var newValue = value as FixupCollection<ExchangeSkillPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExchangeSkills;
                    }
                }
            }
        }
        private ICollection<ExchangeSkillPoco> _exchangeSkills;
    
        public ICollection<ExchangeSurfacePoco> ExchangeSurfaces
        {
            get
            {
                if (_exchangeSurfaces == null)
                {
                    var newCollection = new FixupCollection<ExchangeSurfacePoco>();
                    newCollection.CollectionChanged += FixupExchangeSurfaces;
                    _exchangeSurfaces = newCollection;
                }
                return _exchangeSurfaces;
            }
            set
            {
                if (!ReferenceEquals(_exchangeSurfaces, value))
                {
                    var previousValue = _exchangeSurfaces as FixupCollection<ExchangeSurfacePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExchangeSurfaces;
                    }
                    _exchangeSurfaces = value;
                    var newValue = value as FixupCollection<ExchangeSurfacePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExchangeSurfaces;
                    }
                }
            }
        }
        private ICollection<ExchangeSurfacePoco> _exchangeSurfaces;
    
        public ICollection<InvitedPoco> Inviteds
        {
            get
            {
                if (_inviteds == null)
                {
                    var newCollection = new FixupCollection<InvitedPoco>();
                    newCollection.CollectionChanged += FixupInviteds;
                    _inviteds = newCollection;
                }
                return _inviteds;
            }
            set
            {
                if (!ReferenceEquals(_inviteds, value))
                {
                    var previousValue = _inviteds as FixupCollection<InvitedPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupInviteds;
                    }
                    _inviteds = value;
                    var newValue = value as FixupCollection<InvitedPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupInviteds;
                    }
                }
            }
        }
        private ICollection<InvitedPoco> _inviteds;
    
        public ICollection<PlacePoco> Places
        {
            get
            {
                if (_places == null)
                {
                    var newCollection = new FixupCollection<PlacePoco>();
                    newCollection.CollectionChanged += FixupPlaces;
                    _places = newCollection;
                }
                return _places;
            }
            set
            {
                if (!ReferenceEquals(_places, value))
                {
                    var previousValue = _places as FixupCollection<PlacePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPlaces;
                    }
                    _places = value;
                    var newValue = value as FixupCollection<PlacePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPlaces;
                    }
                }
            }
        }
        private ICollection<PlacePoco> _places;
    
        public ICollection<TeamPoco> Teams
        {
            get
            {
                if (_teams == null)
                {
                    var newCollection = new FixupCollection<TeamPoco>();
                    newCollection.CollectionChanged += FixupTeams;
                    _teams = newCollection;
                }
                return _teams;
            }
            set
            {
                if (!ReferenceEquals(_teams, value))
                {
                    var previousValue = _teams as FixupCollection<TeamPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTeams;
                    }
                    _teams = value;
                    var newValue = value as FixupCollection<TeamPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTeams;
                    }
                }
            }
        }
        private ICollection<TeamPoco> _teams;
    
        public ICollection<TimelineItemPoco> TimelineItems
        {
            get
            {
                if (_timelineItems == null)
                {
                    var newCollection = new FixupCollection<TimelineItemPoco>();
                    newCollection.CollectionChanged += FixupTimelineItems;
                    _timelineItems = newCollection;
                }
                return _timelineItems;
            }
            set
            {
                if (!ReferenceEquals(_timelineItems, value))
                {
                    var previousValue = _timelineItems as FixupCollection<TimelineItemPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTimelineItems;
                    }
                    _timelineItems = value;
                    var newValue = value as FixupCollection<TimelineItemPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTimelineItems;
                    }
                }
            }
        }
        private ICollection<TimelineItemPoco> _timelineItems;
    
        public ICollection<UserPoco> Users
        {
            get
            {
                if (_users == null)
                {
                    var newCollection = new FixupCollection<UserPoco>();
                    newCollection.CollectionChanged += FixupUsers;
                    _users = newCollection;
                }
                return _users;
            }
            set
            {
                if (!ReferenceEquals(_users, value))
                {
                    var previousValue = _users as FixupCollection<UserPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUsers;
                    }
                    _users = value;
                    var newValue = value as FixupCollection<UserPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUsers;
                    }
                }
            }
        }
        private ICollection<UserPoco> _users;
    
        public ICollection<EventPoco> Events
        {
            get
            {
                if (_events == null)
                {
                    var newCollection = new FixupCollection<EventPoco>();
                    newCollection.CollectionChanged += FixupEvents;
                    _events = newCollection;
                }
                return _events;
            }
            set
            {
                if (!ReferenceEquals(_events, value))
                {
                    var previousValue = _events as FixupCollection<EventPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEvents;
                    }
                    _events = value;
                    var newValue = value as FixupCollection<EventPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEvents;
                    }
                }
            }
        }
        private ICollection<EventPoco> _events;
    
        public ICollection<AchievementsCompanyPoco> AchievementsCompanies
        {
            get
            {
                if (_achievementsCompanies == null)
                {
                    var newCollection = new FixupCollection<AchievementsCompanyPoco>();
                    newCollection.CollectionChanged += FixupAchievementsCompanies;
                    _achievementsCompanies = newCollection;
                }
                return _achievementsCompanies;
            }
            set
            {
                if (!ReferenceEquals(_achievementsCompanies, value))
                {
                    var previousValue = _achievementsCompanies as FixupCollection<AchievementsCompanyPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAchievementsCompanies;
                    }
                    _achievementsCompanies = value;
                    var newValue = value as FixupCollection<AchievementsCompanyPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAchievementsCompanies;
                    }
                }
            }
        }
        private ICollection<AchievementsCompanyPoco> _achievementsCompanies;
    
        public virtual NetworkPoco Network
        {
            get { return _network; }
            set
            {
                if (!ReferenceEquals(_network, value))
                {
                    var previousValue = _network;
                    _network = value;
                    FixupNetwork(previousValue);
                }
            }
        }
        private NetworkPoco _network;
    
        public ICollection<CareerOpportunityPoco> CareerOpportunities
        {
            get
            {
                if (_careerOpportunities == null)
                {
                    var newCollection = new FixupCollection<CareerOpportunityPoco>();
                    newCollection.CollectionChanged += FixupCareerOpportunities;
                    _careerOpportunities = newCollection;
                }
                return _careerOpportunities;
            }
            set
            {
                if (!ReferenceEquals(_careerOpportunities, value))
                {
                    var previousValue = _careerOpportunities as FixupCollection<CareerOpportunityPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCareerOpportunities;
                    }
                    _careerOpportunities = value;
                    var newValue = value as FixupCollection<CareerOpportunityPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCareerOpportunities;
                    }
                }
            }
        }
        private ICollection<CareerOpportunityPoco> _careerOpportunities;
    
        public ICollection<SocialNetworkCompanySubscriptionPoco> SocialNetworkCompanySubscriptions
        {
            get
            {
                if (_socialNetworkCompanySubscriptions == null)
                {
                    var newCollection = new FixupCollection<SocialNetworkCompanySubscriptionPoco>();
                    newCollection.CollectionChanged += FixupSocialNetworkCompanySubscriptions;
                    _socialNetworkCompanySubscriptions = newCollection;
                }
                return _socialNetworkCompanySubscriptions;
            }
            set
            {
                if (!ReferenceEquals(_socialNetworkCompanySubscriptions, value))
                {
                    var previousValue = _socialNetworkCompanySubscriptions as FixupCollection<SocialNetworkCompanySubscriptionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSocialNetworkCompanySubscriptions;
                    }
                    _socialNetworkCompanySubscriptions = value;
                    var newValue = value as FixupCollection<SocialNetworkCompanySubscriptionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSocialNetworkCompanySubscriptions;
                    }
                }
            }
        }
        private ICollection<SocialNetworkCompanySubscriptionPoco> _socialNetworkCompanySubscriptions;
    
        public ICollection<CompanyContactPoco> CompanyContactsSent
        {
            get
            {
                if (_companyContactsSent == null)
                {
                    var newCollection = new FixupCollection<CompanyContactPoco>();
                    newCollection.CollectionChanged += FixupCompanyContactsSent;
                    _companyContactsSent = newCollection;
                }
                return _companyContactsSent;
            }
            set
            {
                if (!ReferenceEquals(_companyContactsSent, value))
                {
                    var previousValue = _companyContactsSent as FixupCollection<CompanyContactPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyContactsSent;
                    }
                    _companyContactsSent = value;
                    var newValue = value as FixupCollection<CompanyContactPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyContactsSent;
                    }
                }
            }
        }
        private ICollection<CompanyContactPoco> _companyContactsSent;
    
        public ICollection<CompanyContactPoco> CompanyContactsReceived
        {
            get
            {
                if (_companyContactsReceived == null)
                {
                    var newCollection = new FixupCollection<CompanyContactPoco>();
                    newCollection.CollectionChanged += FixupCompanyContactsReceived;
                    _companyContactsReceived = newCollection;
                }
                return _companyContactsReceived;
            }
            set
            {
                if (!ReferenceEquals(_companyContactsReceived, value))
                {
                    var previousValue = _companyContactsReceived as FixupCollection<CompanyContactPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyContactsReceived;
                    }
                    _companyContactsReceived = value;
                    var newValue = value as FixupCollection<CompanyContactPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyContactsReceived;
                    }
                }
            }
        }
        private ICollection<CompanyContactPoco> _companyContactsReceived;
    
        public ICollection<CompanyRequestPoco> CompanyRequests
        {
            get
            {
                if (_companyRequests == null)
                {
                    var newCollection = new FixupCollection<CompanyRequestPoco>();
                    newCollection.CollectionChanged += FixupCompanyRequests;
                    _companyRequests = newCollection;
                }
                return _companyRequests;
            }
            set
            {
                if (!ReferenceEquals(_companyRequests, value))
                {
                    var previousValue = _companyRequests as FixupCollection<CompanyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyRequests;
                    }
                    _companyRequests = value;
                    var newValue = value as FixupCollection<CompanyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyRequests;
                    }
                }
            }
        }
        private ICollection<CompanyRequestPoco> _companyRequests;
    
        public ICollection<RegisterRequestPoco> RegisterRequests
        {
            get
            {
                if (_registerRequests == null)
                {
                    var newCollection = new FixupCollection<RegisterRequestPoco>();
                    newCollection.CollectionChanged += FixupRegisterRequests;
                    _registerRequests = newCollection;
                }
                return _registerRequests;
            }
            set
            {
                if (!ReferenceEquals(_registerRequests, value))
                {
                    var previousValue = _registerRequests as FixupCollection<RegisterRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRegisterRequests;
                    }
                    _registerRequests = value;
                    var newValue = value as FixupCollection<RegisterRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRegisterRequests;
                    }
                }
            }
        }
        private ICollection<RegisterRequestPoco> _registerRequests;
    
        public virtual UserPoco IsEnabledFirstChangeUser
        {
            get { return _isEnabledFirstChangeUser; }
            set
            {
                if (!ReferenceEquals(_isEnabledFirstChangeUser, value))
                {
                    var previousValue = _isEnabledFirstChangeUser;
                    _isEnabledFirstChangeUser = value;
                    FixupIsEnabledFirstChangeUser(previousValue);
                }
            }
        }
        private UserPoco _isEnabledFirstChangeUser;
    
        public virtual UserPoco IsEnabledLastChangeUser
        {
            get { return _isEnabledLastChangeUser; }
            set
            {
                if (!ReferenceEquals(_isEnabledLastChangeUser, value))
                {
                    var previousValue = _isEnabledLastChangeUser;
                    _isEnabledLastChangeUser = value;
                    FixupIsEnabledLastChangeUser(previousValue);
                }
            }
        }
        private UserPoco _isEnabledLastChangeUser;
    
        public ICollection<ApplyRequestPoco> ApplyRequests
        {
            get
            {
                if (_applyRequests == null)
                {
                    var newCollection = new FixupCollection<ApplyRequestPoco>();
                    newCollection.CollectionChanged += FixupApplyRequests;
                    _applyRequests = newCollection;
                }
                return _applyRequests;
            }
            set
            {
                if (!ReferenceEquals(_applyRequests, value))
                {
                    var previousValue = _applyRequests as FixupCollection<ApplyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplyRequests;
                    }
                    _applyRequests = value;
                    var newValue = value as FixupCollection<ApplyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplyRequests;
                    }
                }
            }
        }
        private ICollection<ApplyRequestPoco> _applyRequests;
    
        public ICollection<ApplyRequestPoco> ApplyRequests1
        {
            get
            {
                if (_applyRequests1 == null)
                {
                    var newCollection = new FixupCollection<ApplyRequestPoco>();
                    newCollection.CollectionChanged += FixupApplyRequests1;
                    _applyRequests1 = newCollection;
                }
                return _applyRequests1;
            }
            set
            {
                if (!ReferenceEquals(_applyRequests1, value))
                {
                    var previousValue = _applyRequests1 as FixupCollection<ApplyRequestPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplyRequests1;
                    }
                    _applyRequests1 = value;
                    var newValue = value as FixupCollection<ApplyRequestPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplyRequests1;
                    }
                }
            }
        }
        private ICollection<ApplyRequestPoco> _applyRequests1;
    
        public ICollection<CompanyProfileFieldPoco> ProfileFields
        {
            get
            {
                if (_profileFields == null)
                {
                    var newCollection = new FixupCollection<CompanyProfileFieldPoco>();
                    newCollection.CollectionChanged += FixupProfileFields;
                    _profileFields = newCollection;
                }
                return _profileFields;
            }
            set
            {
                if (!ReferenceEquals(_profileFields, value))
                {
                    var previousValue = _profileFields as FixupCollection<CompanyProfileFieldPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupProfileFields;
                    }
                    _profileFields = value;
                    var newValue = value as FixupCollection<CompanyProfileFieldPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupProfileFields;
                    }
                }
            }
        }
        private ICollection<CompanyProfileFieldPoco> _profileFields;
    
        public ICollection<SubscriptionPoco> ApplyingSubscriptions
        {
            get
            {
                if (_applyingSubscriptions == null)
                {
                    var newCollection = new FixupCollection<SubscriptionPoco>();
                    newCollection.CollectionChanged += FixupApplyingSubscriptions;
                    _applyingSubscriptions = newCollection;
                }
                return _applyingSubscriptions;
            }
            set
            {
                if (!ReferenceEquals(_applyingSubscriptions, value))
                {
                    var previousValue = _applyingSubscriptions as FixupCollection<SubscriptionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplyingSubscriptions;
                    }
                    _applyingSubscriptions = value;
                    var newValue = value as FixupCollection<SubscriptionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplyingSubscriptions;
                    }
                }
            }
        }
        private ICollection<SubscriptionPoco> _applyingSubscriptions;
    
        public ICollection<SubscriptionPoco> OwnedSubscriptions
        {
            get
            {
                if (_ownedSubscriptions == null)
                {
                    var newCollection = new FixupCollection<SubscriptionPoco>();
                    newCollection.CollectionChanged += FixupOwnedSubscriptions;
                    _ownedSubscriptions = newCollection;
                }
                return _ownedSubscriptions;
            }
            set
            {
                if (!ReferenceEquals(_ownedSubscriptions, value))
                {
                    var previousValue = _ownedSubscriptions as FixupCollection<SubscriptionPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupOwnedSubscriptions;
                    }
                    _ownedSubscriptions = value;
                    var newValue = value as FixupCollection<SubscriptionPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupOwnedSubscriptions;
                    }
                }
            }
        }
        private ICollection<SubscriptionPoco> _ownedSubscriptions;
    
        public ICollection<CompanyRelationshipPoco> MasterRelationships
        {
            get
            {
                if (_masterRelationships == null)
                {
                    var newCollection = new FixupCollection<CompanyRelationshipPoco>();
                    newCollection.CollectionChanged += FixupMasterRelationships;
                    _masterRelationships = newCollection;
                }
                return _masterRelationships;
            }
            set
            {
                if (!ReferenceEquals(_masterRelationships, value))
                {
                    var previousValue = _masterRelationships as FixupCollection<CompanyRelationshipPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMasterRelationships;
                    }
                    _masterRelationships = value;
                    var newValue = value as FixupCollection<CompanyRelationshipPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMasterRelationships;
                    }
                }
            }
        }
        private ICollection<CompanyRelationshipPoco> _masterRelationships;
    
        public ICollection<CompanyRelationshipPoco> SlaveRelationships
        {
            get
            {
                if (_slaveRelationships == null)
                {
                    var newCollection = new FixupCollection<CompanyRelationshipPoco>();
                    newCollection.CollectionChanged += FixupSlaveRelationships;
                    _slaveRelationships = newCollection;
                }
                return _slaveRelationships;
            }
            set
            {
                if (!ReferenceEquals(_slaveRelationships, value))
                {
                    var previousValue = _slaveRelationships as FixupCollection<CompanyRelationshipPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSlaveRelationships;
                    }
                    _slaveRelationships = value;
                    var newValue = value as FixupCollection<CompanyRelationshipPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSlaveRelationships;
                    }
                }
            }
        }
        private ICollection<CompanyRelationshipPoco> _slaveRelationships;
    
        public virtual CompanyCategoryPoco CompanyCategory
        {
            get { return _companyCategory; }
            set
            {
                if (!ReferenceEquals(_companyCategory, value))
                {
                    var previousValue = _companyCategory;
                    _companyCategory = value;
                    FixupCompanyCategory(previousValue);
                }
            }
        }
        private CompanyCategoryPoco _companyCategory;
    
        public ICollection<CompanyPlacePoco> CompanyPlaces
        {
            get
            {
                if (_companyPlaces == null)
                {
                    var newCollection = new FixupCollection<CompanyPlacePoco>();
                    newCollection.CollectionChanged += FixupCompanyPlaces;
                    _companyPlaces = newCollection;
                }
                return _companyPlaces;
            }
            set
            {
                if (!ReferenceEquals(_companyPlaces, value))
                {
                    var previousValue = _companyPlaces as FixupCollection<CompanyPlacePoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCompanyPlaces;
                    }
                    _companyPlaces = value;
                    var newValue = value as FixupCollection<CompanyPlacePoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCompanyPlaces;
                    }
                }
            }
        }
        private ICollection<CompanyPlacePoco> _companyPlaces;
    
        public ICollection<CompanyTagPoco> Tags
        {
            get
            {
                if (_tags == null)
                {
                    var newCollection = new FixupCollection<CompanyTagPoco>();
                    newCollection.CollectionChanged += FixupTags;
                    _tags = newCollection;
                }
                return _tags;
            }
            set
            {
                if (!ReferenceEquals(_tags, value))
                {
                    var previousValue = _tags as FixupCollection<CompanyTagPoco>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTags;
                    }
                    _tags = value;
                    var newValue = value as FixupCollection<CompanyTagPoco>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTags;
                    }
                }
            }
        }
        private ICollection<CompanyTagPoco> _tags;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupNetwork(NetworkPoco previousValue)
        {
            if (previousValue != null && previousValue.Companies.Contains(this))
            {
                previousValue.Companies.Remove(this);
            }
    
            if (Network != null)
            {
                if (!Network.Companies.Contains(this))
                {
                    Network.Companies.Add(this);
                }
                if (NetworkId != Network.Id)
                {
                    NetworkId = Network.Id;
                }
            }
        }
    
        private void FixupIsEnabledFirstChangeUser(UserPoco previousValue)
        {
            if (IsEnabledFirstChangeUser != null)
            {
                if (IsEnabledFirstChangeUserId != IsEnabledFirstChangeUser.Id)
                {
                    IsEnabledFirstChangeUserId = IsEnabledFirstChangeUser.Id;
                }
            }
            else if (!_settingFK)
            {
                IsEnabledFirstChangeUserId = null;
            }
        }
    
        private void FixupIsEnabledLastChangeUser(UserPoco previousValue)
        {
            if (IsEnabledLastChangeUser != null)
            {
                if (IsEnabledLastChangeUserId != IsEnabledLastChangeUser.Id)
                {
                    IsEnabledLastChangeUserId = IsEnabledLastChangeUser.Id;
                }
            }
            else if (!_settingFK)
            {
                IsEnabledLastChangeUserId = null;
            }
        }
    
        private void FixupCompanyCategory(CompanyCategoryPoco previousValue)
        {
            if (previousValue != null && previousValue.Companies.Contains(this))
            {
                previousValue.Companies.Remove(this);
            }
    
            if (CompanyCategory != null)
            {
                if (!CompanyCategory.Companies.Contains(this))
                {
                    CompanyCategory.Companies.Add(this);
                }
                if (CategoryId != CompanyCategory.Id)
                {
                    CategoryId = CompanyCategory.Id;
                }
            }
        }
    
        private void FixupActivities(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ActivityPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ActivityPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupCompanyNews(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyNewPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyNewPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupCompaniesVisits(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompaniesVisitPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompaniesVisitPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupCompanyAdmins(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyAdminPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyAdminPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupCompanySkills(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanySkillPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanySkillPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupExchangeMaterials(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ExchangeMaterialPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExchangeMaterialPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupExchangeSkills(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ExchangeSkillPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExchangeSkillPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupExchangeSurfaces(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ExchangeSurfacePoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExchangeSurfacePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupInviteds(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (InvitedPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InvitedPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupPlaces(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PlacePoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PlacePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupTeams(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TeamPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TeamPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupTimelineItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TimelineItemPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TimelineItemPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupUsers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupEvents(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EventPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EventPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupAchievementsCompanies(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AchievementsCompanyPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AchievementsCompanyPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupCareerOpportunities(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CareerOpportunityPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CareerOpportunityPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupSocialNetworkCompanySubscriptions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SocialNetworkCompanySubscriptionPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SocialNetworkCompanySubscriptionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupCompanyContactsSent(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyContactPoco item in e.NewItems)
                {
                    item.FromCompany = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyContactPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.FromCompany, this))
                    {
                        item.FromCompany = null;
                    }
                }
            }
        }
    
        private void FixupCompanyContactsReceived(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyContactPoco item in e.NewItems)
                {
                    item.ToCompany = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyContactPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.ToCompany, this))
                    {
                        item.ToCompany = null;
                    }
                }
            }
        }
    
        private void FixupCompanyRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyRequestPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupRegisterRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RegisterRequestPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RegisterRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupApplyRequests(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ApplyRequestPoco item in e.NewItems)
                {
                    item.CreatedCompany = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ApplyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreatedCompany, this))
                    {
                        item.CreatedCompany = null;
                    }
                }
            }
        }
    
        private void FixupApplyRequests1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ApplyRequestPoco item in e.NewItems)
                {
                    item.CompanyToJoin = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ApplyRequestPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.CompanyToJoin, this))
                    {
                        item.CompanyToJoin = null;
                    }
                }
            }
        }
    
        private void FixupProfileFields(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyProfileFieldPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyProfileFieldPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupApplyingSubscriptions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SubscriptionPoco item in e.NewItems)
                {
                    item.AppliesToCompany = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SubscriptionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.AppliesToCompany, this))
                    {
                        item.AppliesToCompany = null;
                    }
                }
            }
        }
    
        private void FixupOwnedSubscriptions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SubscriptionPoco item in e.NewItems)
                {
                    item.OwnerCompany = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SubscriptionPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.OwnerCompany, this))
                    {
                        item.OwnerCompany = null;
                    }
                }
            }
        }
    
        private void FixupMasterRelationships(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyRelationshipPoco item in e.NewItems)
                {
                    item.Master = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyRelationshipPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Master, this))
                    {
                        item.Master = null;
                    }
                }
            }
        }
    
        private void FixupSlaveRelationships(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyRelationshipPoco item in e.NewItems)
                {
                    item.Slave = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyRelationshipPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Slave, this))
                    {
                        item.Slave = null;
                    }
                }
            }
        }
    
        private void FixupCompanyPlaces(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyPlacePoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyPlacePoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }
    
        private void FixupTags(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CompanyTagPoco item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompanyTagPoco item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }

        #endregion

    }
}
