//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Sparkle.Entities.Networks.Neutral
{
    public partial class ApplyRequestPoco
    {
        #region Primitive Properties
    
        public int Id
        {
            get;
            set;
        }
    
        public System.Guid Key
        {
            get;
            set;
        }
    
        public string Data
        {
            get;
            set;
        }
    
        public System.DateTime DateCreatedUtc
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> DateSubmitedUtc
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> DateEmailConfirmedUtc
        {
            get;
            set;
        }
    
        public string UserRemoteAddress
        {
            get;
            set;
        }
    
        public int NetworkId
        {
            get { return _networkId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._networkId != value)
                    {
                        if (this.Network != null && this.Network.Id != value)
                        {
                            this.Network = null;
                        }
                        this._networkId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _networkId;
    
        public Nullable<System.DateTime> DateRefusedUtc
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> DateAcceptedUtc
        {
            get;
            set;
        }
    
        public Nullable<int> RefusedByUserId
        {
            get { return _refusedByUserId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._refusedByUserId != value)
                    {
                        if (this.RefusedByUser != null && this.RefusedByUser.Id != value)
                        {
                            this.RefusedByUser = null;
                        }
                        this._refusedByUserId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _refusedByUserId;
    
        public Nullable<int> AcceptedByUserId
        {
            get { return _acceptedByUserId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._acceptedByUserId != value)
                    {
                        if (this.AcceptedByUser != null && this.AcceptedByUser.Id != value)
                        {
                            this.AcceptedByUser = null;
                        }
                        this._acceptedByUserId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _acceptedByUserId;
    
        public Nullable<int> CreatedUserId
        {
            get { return _createdUserId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._createdUserId != value)
                    {
                        if (this.CreatedUser != null && this.CreatedUser.Id != value)
                        {
                            this.CreatedUser = null;
                        }
                        this._createdUserId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _createdUserId;
    
        public Nullable<int> CreatedCompanyId
        {
            get { return _createdCompanyId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._createdCompanyId != value)
                    {
                        if (this.CreatedCompany != null && this.CreatedCompany.ID != value)
                        {
                            this.CreatedCompany = null;
                        }
                        this._createdCompanyId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _createdCompanyId;
    
        public string CompanyData
        {
            get;
            set;
        }
    
        public Nullable<int> JoinCompanyId
        {
            get { return _joinCompanyId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._joinCompanyId != value)
                    {
                        if (this.CompanyToJoin != null && this.CompanyToJoin.ID != value)
                        {
                            this.CompanyToJoin = null;
                        }
                        this._joinCompanyId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _joinCompanyId;
    
        public string RefusedRemark
        {
            get;
            set;
        }
    
        public Nullable<System.DateTime> DateDeletedUtc
        {
            get;
            set;
        }
    
        public Nullable<int> DeletedByUserId
        {
            get { return _deletedByUserId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._deletedByUserId != value)
                    {
                        if (this.DeletedByUser != null && this.DeletedByUser.Id != value)
                        {
                            this.DeletedByUser = null;
                        }
                        this._deletedByUserId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _deletedByUserId;
    
        public Nullable<int> InvitedByUserId
        {
            get { return _invitedByUserId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (this._invitedByUserId != value)
                    {
                        if (this.InvitedByUser != null && this.InvitedByUser.Id != value)
                        {
                            this.InvitedByUser = null;
                        }
                        this._invitedByUserId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _invitedByUserId;
    
        public Nullable<System.DateTime> DateInvitedUtc
        {
            get;
            set;
        }
    
        public string ProcessData
        {
            get;
            set;
        }
    
        public string ImportedId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual NetworkPoco Network
        {
            get { return _network; }
            set
            {
                if (!ReferenceEquals(_network, value))
                {
                    var previousValue = _network;
                    _network = value;
                    FixupNetwork(previousValue);
                }
            }
        }
        private NetworkPoco _network;
    
        public virtual CompanyPoco CreatedCompany
        {
            get { return _createdCompany; }
            set
            {
                if (!ReferenceEquals(_createdCompany, value))
                {
                    var previousValue = _createdCompany;
                    _createdCompany = value;
                    FixupCreatedCompany(previousValue);
                }
            }
        }
        private CompanyPoco _createdCompany;
    
        public virtual UserPoco CreatedUser
        {
            get { return _createdUser; }
            set
            {
                if (!ReferenceEquals(_createdUser, value))
                {
                    var previousValue = _createdUser;
                    _createdUser = value;
                    FixupCreatedUser(previousValue);
                }
            }
        }
        private UserPoco _createdUser;
    
        public virtual UserPoco AcceptedByUser
        {
            get { return _acceptedByUser; }
            set
            {
                if (!ReferenceEquals(_acceptedByUser, value))
                {
                    var previousValue = _acceptedByUser;
                    _acceptedByUser = value;
                    FixupAcceptedByUser(previousValue);
                }
            }
        }
        private UserPoco _acceptedByUser;
    
        public virtual UserPoco RefusedByUser
        {
            get { return _refusedByUser; }
            set
            {
                if (!ReferenceEquals(_refusedByUser, value))
                {
                    var previousValue = _refusedByUser;
                    _refusedByUser = value;
                    FixupRefusedByUser(previousValue);
                }
            }
        }
        private UserPoco _refusedByUser;
    
        public virtual CompanyPoco CompanyToJoin
        {
            get { return _companyToJoin; }
            set
            {
                if (!ReferenceEquals(_companyToJoin, value))
                {
                    var previousValue = _companyToJoin;
                    _companyToJoin = value;
                    FixupCompanyToJoin(previousValue);
                }
            }
        }
        private CompanyPoco _companyToJoin;
    
        public virtual UserPoco DeletedByUser
        {
            get { return _deletedByUser; }
            set
            {
                if (!ReferenceEquals(_deletedByUser, value))
                {
                    var previousValue = _deletedByUser;
                    _deletedByUser = value;
                    FixupDeletedByUser(previousValue);
                }
            }
        }
        private UserPoco _deletedByUser;
    
        public virtual UserPoco InvitedByUser
        {
            get { return _invitedByUser; }
            set
            {
                if (!ReferenceEquals(_invitedByUser, value))
                {
                    var previousValue = _invitedByUser;
                    _invitedByUser = value;
                    FixupInvitedByUser(previousValue);
                }
            }
        }
        private UserPoco _invitedByUser;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupNetwork(NetworkPoco previousValue)
        {
            if (previousValue != null && previousValue.ApplyRequests.Contains(this))
            {
                previousValue.ApplyRequests.Remove(this);
            }
    
            if (Network != null)
            {
                if (!Network.ApplyRequests.Contains(this))
                {
                    Network.ApplyRequests.Add(this);
                }
                if (NetworkId != Network.Id)
                {
                    NetworkId = Network.Id;
                }
            }
        }
    
        private void FixupCreatedCompany(CompanyPoco previousValue)
        {
            if (previousValue != null && previousValue.ApplyRequests.Contains(this))
            {
                previousValue.ApplyRequests.Remove(this);
            }
    
            if (CreatedCompany != null)
            {
                if (!CreatedCompany.ApplyRequests.Contains(this))
                {
                    CreatedCompany.ApplyRequests.Add(this);
                }
                if (CreatedCompanyId != CreatedCompany.ID)
                {
                    CreatedCompanyId = CreatedCompany.ID;
                }
            }
            else if (!_settingFK)
            {
                CreatedCompanyId = null;
            }
        }
    
        private void FixupCreatedUser(UserPoco previousValue)
        {
            if (previousValue != null && previousValue.ApplyRequests.Contains(this))
            {
                previousValue.ApplyRequests.Remove(this);
            }
    
            if (CreatedUser != null)
            {
                if (!CreatedUser.ApplyRequests.Contains(this))
                {
                    CreatedUser.ApplyRequests.Add(this);
                }
                if (CreatedUserId != CreatedUser.Id)
                {
                    CreatedUserId = CreatedUser.Id;
                }
            }
            else if (!_settingFK)
            {
                CreatedUserId = null;
            }
        }
    
        private void FixupAcceptedByUser(UserPoco previousValue)
        {
            if (previousValue != null && previousValue.ApplyRequests1.Contains(this))
            {
                previousValue.ApplyRequests1.Remove(this);
            }
    
            if (AcceptedByUser != null)
            {
                if (!AcceptedByUser.ApplyRequests1.Contains(this))
                {
                    AcceptedByUser.ApplyRequests1.Add(this);
                }
                if (AcceptedByUserId != AcceptedByUser.Id)
                {
                    AcceptedByUserId = AcceptedByUser.Id;
                }
            }
            else if (!_settingFK)
            {
                AcceptedByUserId = null;
            }
        }
    
        private void FixupRefusedByUser(UserPoco previousValue)
        {
            if (previousValue != null && previousValue.ApplyRequests2.Contains(this))
            {
                previousValue.ApplyRequests2.Remove(this);
            }
    
            if (RefusedByUser != null)
            {
                if (!RefusedByUser.ApplyRequests2.Contains(this))
                {
                    RefusedByUser.ApplyRequests2.Add(this);
                }
                if (RefusedByUserId != RefusedByUser.Id)
                {
                    RefusedByUserId = RefusedByUser.Id;
                }
            }
            else if (!_settingFK)
            {
                RefusedByUserId = null;
            }
        }
    
        private void FixupCompanyToJoin(CompanyPoco previousValue)
        {
            if (previousValue != null && previousValue.ApplyRequests1.Contains(this))
            {
                previousValue.ApplyRequests1.Remove(this);
            }
    
            if (CompanyToJoin != null)
            {
                if (!CompanyToJoin.ApplyRequests1.Contains(this))
                {
                    CompanyToJoin.ApplyRequests1.Add(this);
                }
                if (JoinCompanyId != CompanyToJoin.ID)
                {
                    JoinCompanyId = CompanyToJoin.ID;
                }
            }
            else if (!_settingFK)
            {
                JoinCompanyId = null;
            }
        }
    
        private void FixupDeletedByUser(UserPoco previousValue)
        {
            if (previousValue != null && previousValue.DeletedApplyRequests.Contains(this))
            {
                previousValue.DeletedApplyRequests.Remove(this);
            }
    
            if (DeletedByUser != null)
            {
                if (!DeletedByUser.DeletedApplyRequests.Contains(this))
                {
                    DeletedByUser.DeletedApplyRequests.Add(this);
                }
                if (DeletedByUserId != DeletedByUser.Id)
                {
                    DeletedByUserId = DeletedByUser.Id;
                }
            }
            else if (!_settingFK)
            {
                DeletedByUserId = null;
            }
        }
    
        private void FixupInvitedByUser(UserPoco previousValue)
        {
            if (previousValue != null && previousValue.ApplyRequests3.Contains(this))
            {
                previousValue.ApplyRequests3.Remove(this);
            }
    
            if (InvitedByUser != null)
            {
                if (!InvitedByUser.ApplyRequests3.Contains(this))
                {
                    InvitedByUser.ApplyRequests3.Add(this);
                }
                if (InvitedByUserId != InvitedByUser.Id)
                {
                    InvitedByUserId = InvitedByUser.Id;
                }
            }
            else if (!_settingFK)
            {
                InvitedByUserId = null;
            }
        }

        #endregion

    }
}
