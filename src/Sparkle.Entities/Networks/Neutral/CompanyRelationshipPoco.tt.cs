//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Sparkle.Entities.Networks.Neutral
{
    public partial class CompanyRelationshipPoco
    {
        #region Primitive Properties
    
        public int Id
        {
            get;
            set;
        }
    
        public int TypeId
        {
            get { return _typeId; }
            set
            {
                if (this._typeId != value)
                {
                    if (this.RelationshipType != null && this.RelationshipType.Id != value)
                    {
                        this.RelationshipType = null;
                    }
                    this._typeId = value;
                }
            }
        }
        private int _typeId;
    
        public int MasterId
        {
            get { return _masterId; }
            set
            {
                if (this._masterId != value)
                {
                    if (this.Master != null && this.Master.ID != value)
                    {
                        this.Master = null;
                    }
                    this._masterId = value;
                }
            }
        }
        private int _masterId;
    
        public int SlaveId
        {
            get { return _slaveId; }
            set
            {
                if (this._slaveId != value)
                {
                    if (this.Slave != null && this.Slave.ID != value)
                    {
                        this.Slave = null;
                    }
                    this._slaveId = value;
                }
            }
        }
        private int _slaveId;
    
        public System.DateTime DateCreatedUtc
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual CompanyPoco Master
        {
            get { return _master; }
            set
            {
                if (!ReferenceEquals(_master, value))
                {
                    var previousValue = _master;
                    _master = value;
                    FixupMaster(previousValue);
                }
            }
        }
        private CompanyPoco _master;
    
        public virtual CompanyPoco Slave
        {
            get { return _slave; }
            set
            {
                if (!ReferenceEquals(_slave, value))
                {
                    var previousValue = _slave;
                    _slave = value;
                    FixupSlave(previousValue);
                }
            }
        }
        private CompanyPoco _slave;
    
        public virtual CompanyRelationshipTypePoco RelationshipType
        {
            get { return _relationshipType; }
            set
            {
                if (!ReferenceEquals(_relationshipType, value))
                {
                    var previousValue = _relationshipType;
                    _relationshipType = value;
                    FixupRelationshipType(previousValue);
                }
            }
        }
        private CompanyRelationshipTypePoco _relationshipType;

        #endregion

        #region Association Fixup
    
        private void FixupMaster(CompanyPoco previousValue)
        {
            if (previousValue != null && previousValue.MasterRelationships.Contains(this))
            {
                previousValue.MasterRelationships.Remove(this);
            }
    
            if (Master != null)
            {
                if (!Master.MasterRelationships.Contains(this))
                {
                    Master.MasterRelationships.Add(this);
                }
                if (MasterId != Master.ID)
                {
                    MasterId = Master.ID;
                }
            }
        }
    
        private void FixupSlave(CompanyPoco previousValue)
        {
            if (previousValue != null && previousValue.SlaveRelationships.Contains(this))
            {
                previousValue.SlaveRelationships.Remove(this);
            }
    
            if (Slave != null)
            {
                if (!Slave.SlaveRelationships.Contains(this))
                {
                    Slave.SlaveRelationships.Add(this);
                }
                if (SlaveId != Slave.ID)
                {
                    SlaveId = Slave.ID;
                }
            }
        }
    
        private void FixupRelationshipType(CompanyRelationshipTypePoco previousValue)
        {
            if (previousValue != null && previousValue.Relationships.Contains(this))
            {
                previousValue.Relationships.Remove(this);
            }
    
            if (RelationshipType != null)
            {
                if (!RelationshipType.Relationships.Contains(this))
                {
                    RelationshipType.Relationships.Add(this);
                }
                if (TypeId != RelationshipType.Id)
                {
                    TypeId = RelationshipType.Id;
                }
            }
        }

        #endregion

    }
}
