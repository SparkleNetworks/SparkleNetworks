@model Sparkle.Models.CompanyEditModel
@{
    this.ViewBag.Title = Lang.T("Modifier le profil de mon entreprise");
    this.SetPageLayoutMode(PageLayoutMode.Center);
    this.SetAccentColor(SparkleAccentColor.Companies);
    this.SetHelpPage("Features/Companies");
    
    dynamic variable = System.Configuration.ConfigurationManager.GetSection("system.web/httpRuntime");
    var limit = (int)variable.MaxRequestLength * 1000;
    var inputId = Guid.NewGuid();

    User user = null;
    Sparkle.Services.Networks.Models.NetworkModel network = this.Services().CurrentNetwork;
    var sessionService = this.Services() != null ? this.Services().Session : null;
    if (sessionService != null)
    {
        user = sessionService.User;
    }

    var categories = new SelectList(this.Model.Categories, "Id", "Name");
}

@section CustomFocus
{
    @FocusPage.Custom(Model.Name)
    <ul class="toolbox">
        <li>@Html.ActionLink(Lang.T("Retour"), "Company", new { id = Model.Alias, }, new { title = Lang.T("Retour"), @class = "left26", })</li>
    </ul>
    <div class="clear"></div>
}

<div class="space30"></div>

<div class="column half first">
<label>@Lang.T("Logo")</label>
<div class="labelInputs">
    @*<img class="avatar avatarShadow" height="100" width="100" src="@Model.PictureUrl" />*@

    <script src="/Scripts/ajaxupload.js" type="text/javascript" charset="utf-8"></script>
    <div class="loadingPicture">@Lang.T("Chargement...")</div>
    <script type="text/javascript">
        $(document).ready(function () {
            window.Spk.UI.CompanyPicture.SetupUploader({
                PictureContainerSelector: '.companyLogo',
                UploadFormSelector: '#newHotnessForm',
                UploadInputId: 'imageUpload',
                MaxFileSize: @(limit),
                UploadProgressSelector: '.loadingPicture',
                CompanyAlias: '@this.Model.Alias',
                InputId: '@inputId'
            });
        });
    </script>
    <div class="avatar avatarShadow companyLogo" style='width:100px;height:100px;background-image:url(@Model.PictureUrl)'></div>

    <div style="float:left;margin-left:20px">
    <form id="newHotnessForm" action="/Companies/UploadPicture" enctype="multipart/form-data">
        <input class="uploadFileObject" type="file" id="imageUpload" name="imageUpload" size="20" style="width:0px;height:0px"/>
        <label for="@inputId" class="button accentColor" style="margin-left:-5px">@Lang.T("Choisir le logo")</label>
        <button type="submit" style="display:none">Save</button>
    </form>
        @*<p>Le logo doit être une image carré d'au moins 200px</p>*@
    </div>
    <div class="clear"></div>
</div>
</div>
@using (Html.BeginFormEx(new { @class = "olddays", }))
{
    if (user != null && user.NetworkAccess.HasAnyFlag(NetworkAccessLevel.ManageCompany))
    {
<div class="column half">
    <label class="accentAdminColor">@Model.Name @Lang.T("est")</label>
    <div class="labelInputs">
        @Html.DropDownListFor(model => model.CategoryId, categories, new { @class = "textbox" })
        @Html.ValidationMessageFor(m => m.CategoryId)
    </div>
</div>
    }
<div class="clear"></div>
    
@Html.HiddenFor(m => m.Alias)<br />
@Html.ValidationSummaryEx()

<div class="column half first">
    @Html.LabelFor(m => m.Name)
    <div class="labelInputs">
        @Html.TextBoxFor(m => m.Name, new { @class = "textbox" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>
</div>

<div class="column half">
    @*<label>@Model.Name @Lang.T("est")</label>
    <div class="labelInputs">
        @Html.DropDownListFor(model => model.CategoryId, (SelectList)Model.Categories, new { @class = "textbox" })  
        @Html.ValidationMessageFor(m => m.CategoryId)
    </div>*@
    @Html.LabelFor(m => m.Baseline)
    <div class="labelInputs">
        @Html.TextBoxFor(m => m.Baseline, new { @class = "textbox textboxLikeTextarea" })
        @Html.ValidationMessageFor(m => m.Baseline)
    </div>
</div>

@Html.LabelFor(m => m.About)
<div class="labelInputs">
    @Html.TextAreaFor(m => m.About, new { @class = "textarea" })
    @Html.ValidationMessageFor(m => m.About)
</div>

if (Model.Skills != null)
{
<label class="accentColor">@Lang.T("CompanySkills")</label>
<div class="labelInputs">
    @Html.Partial("Lists/SkillsEditList", Model.Skills)
    <div style="clear:both"></div>
    @Html.Partial("AddMembers", new Sparkle.Models.AddMemberModel(0, "/Account/GetSkills", "skill", "SkillClass", Lang.T("AddCompanySkill"), this.Model.CompanyId, 0))
    @Html.HiddenFor(m => m.RemoveSkillsString)
    @Html.ValidationMessageFor(m => m.Skills)
</div>
@Html.HiddenFor(m => m.NewsSkills)
}

<div class="column half first">
    @Html.LabelFor(m => m.Phone)
    <div class="labelInputs">
        @Html.EditorFor(m => m.Phone, new { @class = "textbox" })<br />
        @Html.ValidationMessageFor(m => m.Phone)
    </div>

    @Html.LabelFor(m => m.Email)
    <div class="labelInputs">
        @Html.TextBoxFor(m => m.Email, new { @class = "textbox", placeholder = "Ex : contact@sparklenetworks.com" })<br />
        @Html.ValidationMessageFor(m => m.Email)
    </div>

    @Html.LabelFor(m => m.Facebook)
    <div class="labelInputs">
        @Html.TextBoxFor(m => m.Facebook, new { @class = "textbox", placeholder = "Ex : facebook.com/SparkleNetworks" })
        @Html.ValidationMessageFor(m => m.Facebook)
    </div>

    <div id="emailDomain">
    @Html.LabelFor(m => m.EmailDomain)
    <div class="labelInputs">
    @Html.TextBoxFor(m => m.EmailDomain, new { @class = "textbox", placeholder = "Ex : sparklenetworks.com" })
    @Html.ValidationMessageFor(m => m.EmailDomain)
    </div>
    </div>
</div>

<div class="column half">
@Html.LabelFor(m => m.Site)
<div class="labelInputs">
    @Html.TextBoxFor(m => m.Site, new { @class = "textbox", placeholder = "Ex : http://sparklenetworks.com" })
    @Html.ValidationMessageFor(m => m.Site)
</div>
</div>
    
<div class="column half">
@Html.LabelFor(m => m.Twitter)
<div class="labelInputs">
    @Html.TextBoxFor(m => m.Twitter, new { @class = "textbox", placeholder = "Ex : twitter.com/SparkleNetworks" })
    @Html.ValidationMessageFor(m => m.Twitter)
</div>
    
@Html.LabelFor(m => m.AngelList)
<div class="labelInputs">
    @Html.TextBoxFor(m => m.AngelList, new { @class = "textbox", placeholder = "Ex : angel.co/sparklenetworks" })
    @Html.ValidationMessageFor(m => m.AngelList)
</div>
</div>
<div class="clear"></div>

<div class="center">
    <input type="submit" class="button large accentColor" value="@Lang.T("Enregistrer")" />
</div>
}

<script type="text/javascript">
    menu('mainNavMyCompany');

    var oldSkill = "";
    function SelectBuilding() {
        var value = $('#Buildings').val();
        var text = $("#Buildings option[value = '"+value+"']").text();
        $('#Building').val(text);
    }
    function skills() {
        var newSkill = "";
        $('#NewsSkills').val();
        $('.tagS').each(function () {
            var test = $(this).attr('name');
            newSkill += test + ";";
        });
        if (newSkill != oldSkill) {
            $('#NewsSkills').val(newSkill);
            oldSkill = newSkill;
        }
        setTimeout("skills()", 1000);
    }
    setTimeout("skills()", 3000);
</script>
